----------------------------------------------------------------------
                    LAN Managment System 1.0-cvs
----------------------------------------------------------------------
                    Krótki podrêcznik instalacji
----------------------------------------------------------------------

Witaj.  Zanim  zaczniesz instalowaæ LMS w swojej sieci, po¶wiêæ proszê
kilka  minut  na przeczytanie tego tekstu. Zminimalizuje to do minimum
bóle  porodowe  jakie mo¿esz odczuwaæ podczas instalacji LMS. Tak wiêc
zaparz  sobie  kawy lub siêgnij bo butelkê ze swoim ulubionym napojem,
usi±d¼ wygodnie i rozpocznij lekturê.

0. Intro - czyli co bêdzie Ci potrzebne.

Po pierwsze: serwer WWW.

Generalnie,  LMS  wymaga  PHP, wiêc jakikolwiek serwer WWW obs³uguj±cy
interpreter  PHP.  Oczywi¶cie  preferowany  to  Apache  1.3.26  (czyli
tymczasowo  najnowszy), ale na starszych nie powinno byæ najmniejszych
problemów.

Po drugie: interpreter PHP.

Tutaj  wymagania  s±  trochê  wy¿sze. Wielce prawdopodobne jest i¿ LMS
pójdzie  na ka¿dym PHP 4.2.x które bêdzie mia³o obs³ugê sesji, wyra¿eñ
regularnych  i  mysql'a.  W  praktyce nawet nie chcia³o mi siê bawiæ w
sprawdzanie  ze starszymi interpreterami ni¿ PHP-4.2.3. Prawdopodobnie
po  zrobieniu kilku ma³ych przeróbek LMS pracowa³by tak¿e z PHP-4.1.x,
ale  wybaczcie,  ja  wystarczaj±co du¿o czasu po¶wiêci³em na to by LMS
wogóle powsta³. Reszta nale¿y do was :)

Po trzecie: serwer MySQL.

Aua. Tutaj to ja ju¿ wogóle zielony jestem. Pisa³em ca³o¶æ korzystaj±c
z MySQL 3.23.53 i nie mam pojêcia która wersja jest wymagana.

Po czwarte: perl i modu³y do niego.

- perl w³a¶ciwy i jego podstawowe modu³y (POSIX, GetOpt::Long);
- Net::SMTP;
- Config::IniFiles;
- DBI;
- DBD-mysql (dla mysql'a);
- DBD-pg (dls postgres'a);

I  tyle  by  by³o  na  temat  wymagañ  samego  LMS'a.  Na koniec co do
dystrybucji - LMS zosta³ odpalony na:
- PLD 1.0 Ra (od 2.2.20 do 2.2.25 i od 2.4.18 do 2.4.20-5), PHP/4.2.3,
  MySQL od  3.23.53  do  3.23.56,  PostgresSQL  7.2.3 (LMS by³ g³ównie
  rozwijany na tej dystrybucji przez co ca³y LMS mo¿e zawieraæ
  zboczenia charakterystyczne dla PLD)
- PLD 1.0 Ra + PostgreSQL
- PLD 1.99 Ac (pre-ac od Averne) - kernel 2.4.20, PHP/4.3.1, MySQL
  4.0.12, perl-5.8.0-0.32
- Debianie 3.0 Woody
- Windowsie z najnowszym EasyPHP
- Slackware 8.1 (2.4.20), Apache 1.3.27, PHP 4.2.3, MySQL 3.23.53
- Slackware 8.1 (2.4.20SMP), Apache/1.3.27, PHP/4.3.1, MySQL 3.23.55
- RedHat 8.0

I  prawdopodobnie pójdzie na czymkolwiek (w³±cznie z lodówk±) o ile to
co¶  bêdzie  potrafi³o  zgry¼æ  MySQL'a i serwer WWW z PHP. Bêdê tak¿e
wdziêczny  ka¿demu  o  przes³anie info o konfiguracji o ile uda mu siê
LMS'a  odpaliæ.  Odwied¼  stronê  domow±  LMS'a (http://lms.rulez.pl).
Dowiesz  siê tam jak siê zapisaæ na listê mailingow± oraz wiele innych
zasobów które mog± byæ przydatne.

1. Possijmy co¶.

Nie,  to  nie  porno  film.  ¯eby  LMS'a  chcieæ  trzeba go mieæ. A ¿e
{$chcieæ  eq  $móc}  wiêc ¶ci±gnijmy LMS'a. Jako ¿e w momencie pisania
tego tekstu LMS nie zosta³ jeszcze ukoñczony, opiszê jak pobraæ wersjê
z CVS'a.

Przez  WWW,  korzystaj±c  z  interfejsu viewCVS mo¿na pobraæ LMS'a pod
adresem:

http://cvs.rulez.pl/viewcvs.cgi/lms/lms.tar.gz?tarball=1

U¿ywaj±c CVS'a, wykonaæ z shella komendê:

cvs -d :pserver:cvs@cvs.rulez.pl:/home/cvsroot get lms

Po  ¶ci±gniêciu (i ewentualnym rozpakowaniu) nale¿y LMS'a przenie¶æ do
katalogu   docelowego,   np.   do   /var/www/htdocs/   ewentualnie  do
/home/httpd/html.  Czynno¶ci  tej  nie  bêdê  opisywa³ gdy¿ je¿eli nie
potrafisz wykonaæ takiej bzdury to wogóle sobie daruj.

2. Setting UP :)

Oki,  jeste¶my  w katalogu LMS'a i teraz przyda³oby siê go przygotowaæ
do  pracy.  Zacznijmy od doci±gniêcia biblioteki Smarty i umieszczenia
jej  w  odpowiednim  miejscu,  tj  w katalogu lib. Ta czynno¶æ wygl±da
mniej wiêcej tak:

cd lib
wget http://smarty.php.net/distributions/Smarty-2.5.0.tar.gz
tar -xzf Smarty-2.5.0.tar.gz
mv Smarty-2.5.0/libs Smarty

Do tego jeszcze ADOdb:

wget http://phplens.com/lens/dl/adodb340.tgz
tar -xzf adodb340.tgz

W Debianie unstable wystarczy:
apt-get install libphp-adodb

Pozostaje  nam  stworzyæ  w  katalogu  z LMS podkatalogi templates_c i
backups  (o  ile  go  nie  ma, bo bardzo niewykluczone ¿e pewien pacan
pakuj±cy  LMS'a  zapomni  go  dodaæ)  oraz zmieniæ jego w³a¶ciciela na
u¿ytkownika  z  którego  uruchominy  jest  serwer  www  (np. http albo
apache).

****UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA*****

PAMIÊTAJ  ¯E  JE¯ELI ZOSTAWISZ PODKATALOG BACKUPS W PODKATALOGU LMS'a,
DO TWOICH BACKUPÓW BÊDZIE MO¯NA SIÊ DOBRAÆ BEZ ¯ADNEJ AUTORYZACJI!!!

Najlepiej  ustawiæ katalog z backupami np. na /var/backup/lms lub co¶,
gdzie serwer WWW nie ma dostêpu!!!

****UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA***UWAGA*****

Voila.  Teraz  przygotujmy  serwer  MySQL.  Konieczne  to  jest je¿eli
uruchamiamy  LMS po raz PIERWSZY. Je¿eli uaktualniamy LMS, odpowiednie
adnotacje  co  nale¿y  zrobiæ  z baz± danych s± w pliku ChangeLog. Tak
wiêc wejd¼ do katalogu w którym masz LMS'a i uruchom shell mysql'a:

mysql -u[tutaj wpisz u¿ytkownika z pe³nym dostêpem do bazy] -p
Enter password:[podaj has³o]
mysql> create database lms;
mysql> grant usage on lms.* to lms@localhost;
mysql> grant select,insert,update,delete,create on lms.* to lms@localhost
       identified by 'haslo';
mysql> flush privileges;
mysql> use lms;
mysql> source doc/lms.mysql;

Po takim zabiegu mo¿na siê ju¿ zalogowaæ do LMS u¿ywaj±c konta 'admin'
i   pustego   has³a.   Oczywi¶cie   po  pierwszym  zalogowaniu  nale¿y
NATYCHMIAST zmieniæ sobie has³o na jakie¶ normalne.

I to (narazie) na tyle.

3. Post instalacja.

Za³ó¿my  ¿e  chcemy  prost±  sieæ, prywatn±, na kernelu 2.2, na jednym
serwerze  gdzie jest wszystko i tak± w miarê bez komplikacji. Mamy ju¿
uruchomiony  interface,  wszystko  chodzi  i  wogóle  cacy,  ale teraz
kwestia  jak  to zgraæ z serwerem. Oki. Niezbêdne skrypty perlowe s± w
katalogu bin tarbala z LMS. Kolejno te skrypty to:

lms-cutoff      - skrypcik, który zmienia status komputerów 
lms-eachmonth   - skrypcik, który obci±¿a ka¿dego u¿ytkownika
                  okre¶lon± wed³ug taryfy sum±.
lms-mgc         - magiczny generator czegokolwiek - czyli co¶, co
                  potrafi nam skonfigurowaæ cokolwiek co chcemy.
lms-notify      - skrypt wysy³aj±cy upomnienia do u¿yszkodników, ¿e
                  zalegaj± z op³atami.

Wszystkie  skrypty  poza  lms-mgc  (z  racji ró¿nego dzia³ania parsera
plików  ini  PHP i perla) korzystaj± z /etc/lms/lms.ini. lms-mgc czyta
/etc/lms/lms-mgc.ini.

Skopiujmy  te skrypty do /usr/sbin aby by³y ³atwo dostêpne i zacznijmy
je instalowaæ.

Aby co miesi±c z u¿ytkowników by³a zdzierana jaka¶ kasa, nale¿y dodaæ
lms-eachmonth do crona. Przyk³adowa linijka wygl±da tak:

0 0 6 * *       /usr/sbin/lms-eachmonth

lub

@monthly        /usr/sbin/lms-eachmonth

(nie dzia³a z ka¿dym cronem, sprawd¼ w dokumentacji swojego crona czy
obs³uguje tê opcjê)

Pierwszy zapis spowoduje ¿e ka¿dego szóstego dnia miesi±ca, o godzinie
0:00,  ze  ka¿dy  u¿ytkownik  zostanie obci±¿ony op³at± abonamentow± w
wysoko¶ci  przewidzianej przez taryfê w jakiej siê znajduje, natomiast
drugi  zrobi  to samo lecz 1szego ka¿dego miesi±ca. Oczywi¶cie zamiast
szóstego  mo¿e  byæ inny dzieñ, jednak¿e radzê pamiêtaæ, ¿e 31 ka¿dego
miesi±ca wystêpuje 8 razy do roku, a 29 luty wystêpuje co cztery lata,
wiêc  najpó¼niej  op³aty  mo¿na  pobieraæ  dwudziestego ósmego ka¿dego
miesi±ca,  odwa¿ni  mog±  to  zrobiæ  w  skrypcie  /etc/cron.d/monthly
obs³ugiwanym  przez  wiêkszo¶æ  wspó³czesnych dystrybucji, wykonywanym
dok³adnie  raz  na  miesi±c, czy wrêcz w postaci wpisów w atd (demonie
uruchamiaj±cym polecenia nie 'wcze¶niej ni¿'). To dla tych którzy maj±
np 'kalendarz naliczania' ostatniego dnia miesi±ca.

$ at -f /usr/sbin/lms-eachmonth 6:00 01/31/01
$ at -f /usr/sbin/lms-eachmonth 6:00 02/28/01
$ at -f /usr/sbin/lms-eachmonth 6:00 03/31/01
(etc...)

Kolejny  etap  integracji  LMS'a  z  Dzia³em  Nêkania  U¿ytkowników to
wysy³anie powiadomieñ, czyli lms-notify:

0 0 8 * *       /usr/sbin/lms-notify

Czyli  ósmego  ka¿dego  miesi±ca  wy¶lemy  przypominienie o tym, ¿e s±
jakie¶  zaleg³o¶ci  (czyli  aktualne  saldo  usera jest poni¿ej zera).
Temat  wiadomo¶ci  oraz  ¶cie¿kê  do  pliku  tekstowego  ustawiamy   w
/etc/lms/lms.ini. Przydatna bêdzie opcja debug która zaspamuje naszego
mailboxa  zamiast  u¿ytkowników.  Przyk³adowy  template  maila  jest w
sample/mailtemplate.txt.  Dzia³  Nêkania  mo¿e  p.t. luserowi przys³aæ
pewne informacje zawarte w lmsie, ich pe³ny wykaz znajduje siê w pliku
sample/test.txt,  mo¿e  to  byæ  np  aktualna  taryfa, stan konta, czy
wyci±g  z  ostatnich  operacji. Dodatkowo mo¿na ustawiæ kilka(na¶cie?)
szablonów  maili,  tak  ¿e  pierwszy  to  'naliczono abonament', drugi
'pro¶ba  o uregulowanie wp³aty'. N-ty to 'za 24h zostaniesz odciêty od
sieci'. Np:

0 0 10 * * /usr/sbin/lms-notify -D conf/tekst_1.txt 
0 0 15 * * /usr/sbin/lms-notify -D conf/tekst_2.txt 
0 0 20 * * /usr/sbin/lms-notify -D conf/tekst_3.txt 

Trzeci i ostatni etap to odcinanie userów poni¿ej danego limitu:

0 0 10 * *       /usr/sbin/lms-cutoff

Limit ustawiamy w lms.ini jak zwykle.

Zatrzymajmy  siê  tutaj  i  dodajmy  co¶  do  crona,  tak dla ¶wiêtego
spokoju[tm](C):

12 4 3,10,17,21,28 * * /usr/bin/mysqldump -u lms --password=Twoje-super-tajne-has³o --add-drop-table --add-locks lms > backups/lms-auto-"$(date +%s)".sql

Spowoduje to wykonywanie 12 po 4 rano, ka¿dego 3, 10, 17, 21 i 28 dnia
miesi±ca automagicznie zrzutu danych z mysqla.

Okej.   Teraz  generowanie  configów.  Od  tego  s³u¿y  lms-mgc.  Jego
konfiguracja  jest  zawi³a.  Tak wiêc wróæmy do podstawowego zadania -
zrobienia tylko firewalla (i to prostego) dla linuksa 2.2.

Teraz,   dodajmy   now±   sekcjê  mgc  do  lms-mgc.ini,  nazywaj±c  j±
'ipchains', oraz stwórzmy w tej sekcji prost± maskaradê per adres IP z
lanu:

[mgc:ipchains]

outfile                 = /etc/rc.d/rc.masq
outfile_perm            = 700
header                  = #!/bin/sh\n/sbin/ipchains -F\n/sbin/ipchains -X\n/sbin/ipchains -P forward DENY
grantednode_priv        = /sbin/ipchains -A forward -s %IP -j MASQ
post_exec               = /etc/rc.d/rc.masq

Dopiszmy tak¿e do sekcji g³ównej mgc informacjê ¿eby mgc uruchamia³ t±
sekcjê:

[mgc]

instances               = ipchains

Teraz   próba  odpalenia  lms-mgc  powinna  zaowocowaæ  wygenerowaniem
/etc/rc.d/rc.masq, oraz jego odpaleniem.

Mamy  dwie  mo¿liwo¶ci  wprowadzenia  w  ¿ycie tego generatorka - albo
przez  cron,  albo  z  poziomu lms'a (tak! s³ynny nigdy nie dzia³aj±cy
reload  (tm)).  Pierwsze,  powinno  byæ ³atwe i napewno tego tutaj nie
opiszê.  Druga metoda wymaga paru kombinacji. Niestety, jedyne wyj¶cie
by  umo¿liwiæ  odpalenie  lms-mgc  to dopisanie u¿ytkownika do sudo, a
nastêpnie wpisy w sekcji [phpui] lms.ini:

reload_type             = exec
reload_execcmd          = sudo /usr/sbin/lms-mgc

Tak wiêc wszystko powinno dzia³aæ. Na dniach prawdopodobnie uka¿e siê
plmsd - czyli demon perlowy pozwalaj±cy na normalniejsze (bez sudo)
rekonfigurowanie systemu.

We¼cie  tak¿e  na poprawkê, i¿ ca³y projekt mimo tylu miesiêcy pisania
dopiero  od kilku tygodni nabiera normalnej formy, ale miejmy nadziejê
i¿  szybko  stanie  siê  stabilnym rozwi±zenim dla sieci osiedlowych i
ma³ych ISP.

$Id$
