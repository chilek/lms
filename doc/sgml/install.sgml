<!-- $Id$ -->
<chapter id="install">
    <title>Installation and configuration</title>
    <sect1 id="install-intro">
     <title>Intro</title>
     <para>LMS consist a few modules, body of LMS is <emphasis>LMS-UI</emphasis> 
     (user interface). It is in integrity written in PHP and for work require database 
     (in fact every module require database). Exactly in <emphasis>LMS-UI</emphasis> we perform all 
     actions, the rest of modules is only for automate work of LMS.</para>
     <para>LMS is also set of PERL scripts, and exactly these scripts requires 
     to have that language interpreter. If you will want use these scripts, 
     you must have PERL. Among others, scripts allow on monthly counting of subscription fees, 
     or sending of admonitions. It is also <emphasis>LMS-MGC</emphasis>, witch is script too, but
     so much universal that can generate practically any config file and restart 
     service on your server.</para>
     <para>At the end it is also <emphasis>A.L.E.C's LMS Daemon</emphasis>, written in C language, which 
     is assigned (in fact his plugins) for configuration files generation and services restarting. 
     It can be used as replacement or addition of perl scripts.
     It responds for what has been changed in <emphasis>LMS-UI</emphasis> was made also 
     in real.</para>
    </sect1>
    <sect1 id="install-requirements">
        <title>Requirements</title>
        <sect2 id="install-req-www">
             <title>WWW Server</title>
            <para>Because <emphasis>LMS-UI</emphasis> is written in PHP, necessary is WWW server with interpreter of 
            that language. Perefered server is Apache (<ulink url="http://www.apache.org">www.apache.org</ulink>).</para>
        </sect2>
        <sect2 id="install-req-php">
           <title>PHP Interpreter</title>
           <para>Interpreter should be in version 4.2.x or higher, but on 4.1.x also
           works fine (but because developers uses 4.2.3 or higher, can't guarante correct work
           with older versions. PHP can be downloaded from page
          <ulink url="http://www.php.net">www.php.net</ulink>.</para>
         </sect2>
         <sect2 id="install-req-db">
           <title>Database Server</title>
           <para>LMS will not work correctly with MySQL versions older than 3.23.xx 
           </para>
           <para>LMS also works with PostgreSQL in version 7.3.x or higher.</para>
           <para>Cooperation with SQLite database is possible too, but we are tested only version 2.8.11.</para>
         </sect2>
         <sect2 id="install-req-smarty">
             <title>Smarty Library</title>
             <para><emphasis>LMS-UI</emphasis> require Smarty library(<ulink url="http://smarty.php.net">http://smarty.php.net</ulink>)
           in version 2.5.0 or higher (don't use 2.6.4 version).</para>
            </sect2>
            <sect2 id="install-req-perl">
            <title>Perl</title>
       <para>If for <emphasis>LMS-UI</emphasis> will suffice above stuff, for working 
          <emphasis>LMS-MGC</emphasis> and the rest of scripts you will need 
          also Perl and modules for him:
       <itemizedlist>
         <listitem>
            <para>perl and his basic modules (POSIX, GetOpt::Long);</para>
         </listitem>
         <listitem>
            <para>Net::SMTP;</para>
         </listitem>
         <listitem>
            <para>Config::IniFiles;</para>
         </listitem>
         <listitem>
            <para>DBI;</para>
         </listitem>
         <listitem>
            <para>DBD-mysql (if you will use mysql);</para>
         </listitem>
         <listitem>
            <para>DBD-pg (if you will use postgres);</para>
         </listitem>
         <listitem>
            <para>DBD-SQLite (if you will use SQLite);</para>
         </listitem>
       </itemizedlist></para>
       </sect2>
       <sect2 id="install-req-c">
         <title>C Compiler</title>
       <para>If you'll run<emphasis>A.L.E.C's LMS Daemon</emphasis> is needed
       working C compiler, because daemon is providing only in the form of source code.</para>
       </sect2>
     </sect1>
     <sect1 id="install-install">
     <title>LMS Installation</title>
            <para>LMS in the form of tar.gz archive can be downloaded from project 
          home page (<ulink url="http://www.lms.rulez.pl">www.lms.rulez.pl</ulink>),
          afterd that should be extracted and placed in chosen directory (i.e. <filename>/var/www/lms
          </filename>) available for server www:
<screen>
$ cd /var/www
$ wget http://lms.rulez.pl/download/stable/lms-x.x.x.tar.gz
$ tar zxf lms-x.x.x.tar.gz
</screen>
          </para>
          <para>Two kind of LMS packets are available - including Smarty library
          (<filename>lms-x.x.x+libs.tar.gz</filename>) and without that library.
          If you haven't got package with libraries, you must get and placed them
          in directory <filename>lib</filename>.
<screen>
$ cd /var/www/lms/lib
$ wget http://smarty.php.net/distributions/Smarty-2.6.0.tar.gz
$ tar zxf Smarty-2.6.0.tar.gz
$ mv Smarty-2.6.0/libs Smarty
</screen>
          </para>
          <para><note><para>Placement of all directories can be set in section
          <emphasis>[directories]</emphasis> in file <filename>lms.ini</filename>.</para></note></para>
          <para>Files with configuration (<filename>sample/lms.ini</filename> and <filename>
          sample/lms-mgc.ini</filename>) place in directory <filename>/etc/lms</filename>.
          </para>
          <para>Exec scripts from directory <filename>bin</filename> 
          is preferably to move to directory <filename>/usr/sbin</filename>.
          </para>
          <para><warning><para>Server www must have reading rights on file <filename>lms.ini</filename>
          and writing rights on directory <filename>backup</filename>. 
          It makes potential drop of system security level.</para></warning></para>
     </sect1>
     <sect1 id="install-db">
     <title>Database Server Installation</title>
          <sect2 id="install-mysql">
          <title>MySQL</title>
          <sect3 id="install-mysql-intro">
          <title>Intro</title>
               <para>That very popular database is available with majority of Linux distributions. 
               If however you must install it independently, begin from sources downloading 
               from <ulink url="http://www.mysql.com">www.mysql.com</ulink>.</para>
          </sect3>
          <sect3 id="install-mysql-server">
          <title>MySQL Server Installation</title>
               <para>After extracting, go to directory with MySQL and type sequence
               of commands:
               <screen>
$ ./configure --prefix=/usr/local/mysql
$ make
$ make install
$ /usr/local/mysql/bin/mysql_install_db
$ chown mysql -R /usr/local/mysql/var
$ /usr/local/mysql/bin/safe_mysqld &
$ /usr/local/mysql/bin/mysqladmin -u root password nowe_has³o</screen>
          </para>
          </sect3>
          <sect3 id="install-mysql-dbcreate">
          <title>Create Database</title>
               <para>It is necesserily if you run LMS at the FIRST time. If you are
               upgrading LMS from older version, appropriate notes what to do with database
               stands in ChangeLog file. So, go to directory, in which you've got LMS and
               run mysql's shell:
<screen>
mysql -u[here enter user with full access rights to database] -p
Enter password:[just enter password:)]
mysql> create database lms;
mysql> grant usage on lms.* to lms@localhost;
mysql> grant select,insert,update,delete,create,alter on lms.* to lms@localhost identified by 'haslo';
mysql> flush privileges;
mysql> use lms;
mysql> source doc/lms.mysql;</screen>
          </para>
          </sect3>
          <sect3 id="install-mysql-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>Because MySQL is default database for LMS, configuration is limited for
               setting in section [database] of file /etc/lms/lms.ini password and user's name:
               <screen>
user     = lms
password = your_password</screen>
              </para>
               <para>After that, if LMS can establish connection to database server,
               it is possible get to the system without problems. If in database is no 
               such administrator account, only thing what you'll see
               be form of administrator addition. When you enter correct admin personal
               details, LMS will move you to login page, where at once you can
               use newly created account.
               </para>
               <para>Let's stop here, add some stuff to cron, for peace of mind:
               <screen>
12 4 3,10,17,21,28 * * /usr/bin/mysqldump -u lms --password=your-super-secret-password \
              --add-drop-table --add-locks lms > backups/lms-auto-"$(date +%s)".sql</screen>
               </para>
               <para>That will create at 4:12 morning, every 3, 10, 17, 21 and 28 day
               of month automagic mysql database backup.</para>
          </sect3>
          </sect2>
          <sect2 id="install-pgsql">
          <title>PostgreSQL</title>
          <sect3 id="install-pgsql-intro">
          <title>Intro</title>
               <para>LMS is tested on PostgreSQL 7.3.4 and higher, but because
               special properties of that base are not used, there will be
               no problem with later versions. If you have not instaled PostgreSQL
               server, best solution will be selfhand compilation from
               sources available on <ulink url="http://www.postgresql.org">
               www.postgresql.org</ulink>.</para>
          </sect3>
          <sect3 id="install-pgsql-server">
          <title>Installation</title>
               <para>That is a short version of installation procedure, more info
               can be find in postgres documentation. After download and extraction
               go to main directory and run following commands:
               <screen>
$ ./configure --enable-locale
$ gmake
$ su
$ gmake install
$ adduser postgres
$ mkdir /usr/local/pgsql/data
$ chown postgres /usr/local/pgsql/data
$ su - postgres
$ /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data
$ /usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data >logfile 2>&1 &</screen>
               </para>
          </sect3>
          <sect3 id="install-pgsql-dbcreate">
          <title>Database Creation</title>
               <para>While server is running you can enter finto creation
               of database with name 'lms', which owner will be user with
               login 'lms'.
               <screen>
$ /usr/local/pgsql/bin/createuser -d -A -P lms
$ /usr/local/pgsql/bin/createdb -E LATIN2 -U lms lms
$ /usr/local/pgsql/bin/psql -d lms -U lms -f /lms/doc/lms.pgsql</screen>
          </para>
          </sect3>
          <sect3 id="install-pgsql-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>For LMS default database server is MySQL, so in section
               [database] of file /etc/lms/lms.ini you must set following options:
                  <screen>
type     = postgres
user     = lms
password = password_entered_while_user_lms_account_creation</screen>
              </para>
               <para><note><para>Password's demand depends on configuration of postgres users autentication
                      in <filename>/usr/local/pgsql/data/pg_hba.conf</filename>. 
                      By default password is not required.</para></note></para>
               <para>After that, if LMS connects to database, you
               can without problems enter to the system. If in database will be not
               administrator's account, only thing what you'll see will be
               form of administrator's account  addition. When you enter correct data
               LMS will move you to login page, when you can use
               newly created account.</para>
          </sect3>
          </sect2>
          <sect2 id="install-sqlite">
          <title>SQLite</title>
          <sect3 id="install-sqlite-intro">
          <title>Intro</title>
               <para>This one-file database is commend for speed. Authors define
               that it is 2-3 times faster than MySQL. Furthermore, with properly 
               configuration it's possible to load whole database in to the RAM 
               menory, during this the efficiency highly increases.
               Below is short description of installation.
               Sources can be downloaded from: <ulink url="http://www.sqlite.org">
               www.sqlite.org</ulink>.</para>
          </sect3>
          <sect3 id="install-sqlite-server">
          <title>Installation</title>
               <para>Here You can see how to install the SQLite libraries and
               adding this service to PHP database (in PHP 5.0 ver. have SQLite
               built in).
               After unpacking sources go to SQLite directory and type in
               Commands step by step (for example):
               <screen>
$ ./configure
$ make
$ make install
$ ldconfig
$ pear download http://pecl.php.net/get/SQLite-1.0.2.tgz
$ pear install SQLite-1.0.2.tgz</screen>
               Next in php.ini set:
               <screen>
extension=sqlite.so</screen>
               There is option to compile-in SQLite into PHP : <prompt>--with-sqlite</prompt>.
               </para>
          </sect3>
          <sect3 id="install-sqlite-dbcreate">
          <title>Database Creation</title>
               <para>It's necessarily when You running LMS FIRST TIME!
               Go to Yours LMS directory and run SQlite shell:
               <screen>
$ sqlite -init doc/lms.sqlite /usr/local/lms/lms.db
sqlite> .exit
$ chown 99.98 /usr/local/lms/lms</screen>
               </para>
          </sect3>
          <sect3 id="install-sqlite-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>One of the SQLite limits is no authenticity of users, 
               that's why configuration request only setting type and path to
               the database file. In section <filename>[database]</filename>
               pliku <filename>/etc/lms/lms.ini</filename> set:
               <screen>
type     = sqlite
database = /usr/local/lms/lms.db</screen>
              </para>
               <para>Now we can get in to the system. But if in Database is no 
               user account, we will see add user account form.
               </para>
          </sect3>
          </sect2>
      </sect1>       
      <sect1 id="install-config">
           <title>Basic Configuration</title>
          <para>Main configuration file of LMS is <filename>lms.ini</filename>,
         which must be placed in directory <filename>/etc/lms</filename> or in root
         directory of LMS. It contains configuration options of <emphasis>LMS-UI</emphasis>
         and all script with exception of <emphasis>LMS-MGC</emphasis>.</para>
         <para><note><para>Remember to remove semicolons from begining of line
         with seted parameter.</para></note></para>
         <sect2 id="install-config-db">
         <title>Section [database] - Database Settings</title>
         <para>
         <itemizedlist>
            <listitem>
         <para>type</para>
        <para>Database type. Actually in 100% supported is 'mysql', but for the time being
        isn't seen problems with 'postgres' and 'sqlite'. Default: mysql</para>
        <para>Example: <prompt>type = mysql</prompt></para>
       </listitem>
          <listitem>
        <para>host</para>
        <para>Host where database is installed. Most often, localhost, but can 
        here set anything (IP, domain, path to socket in format 'localhost:/path/to/socket'). 
        Default: localhost</para>
        <para>Example:     <prompt>host = localhost</prompt></para>
       </listitem>
          <listitem>
        <para>user</para>
        <para>Name of database user account. In many cases (if you've go by documentation) 
        that will be 'lms'. When you'll want to use privileged account, 
        probably you'll enter 'root' (MySQL on most of *nixes), 'mysql' (on PLD) or
        'postgres' (PostgreSQL). Default: mysql</para>
        <para>Example:     <prompt>user = lms</prompt></para>
       </listitem>
          <listitem>
        <para>password</para>
        <para>Database password. Default: empty.</para>
        <para>Example:     <prompt>password = password</prompt></para>
       </listitem>
          <listitem>
        <para>database</para>
        <para>Name of database (for SQLite path to database file). Default: lms.</para>
        <para>Example:     <prompt>database = lms</prompt></para>
       </listitem>
          <listitem>
        <para>server_encoding</para>
        <para>Database encoding. Use if your database encoding is not unicode.
	Postgres is taking up conversion by himself, but in case of
	mysql for conversion is used php/iconv in LMS db-drivers.
	Default: unicode.</para>
        <para>Example:     <prompt>server_encoding = latin2</prompt></para>
       </listitem>
         </itemizedlist>
     </para>
     </sect2>
     <sect2 id="install-config-dir">         
     <title>Section [directories] - Directories Settings</title>
      <para>        
     <itemizedlist>
     <listitem>
        <para>sys_dir</para>
        <para>System directory. It is a place where is entire content of LMS's UI, that means index.php, graphics, 
        templates and the rest. By default index.php seek in filesystem 
        using getcwd(), but better is to say him where hi is:</para>
        <para>Example:     <prompt>sys_dir = /var/www/htdocs/lms/</prompt></para>
        </listitem>
        <listitem>
        <para>modules_dir</para>
        <para>Directory with "modules" of LMS. That is content of /modules directory. By default 
        it is subdirectory <filename>modules</filename> in sys_dir.</para>
        <para>Example:     <prompt>modules_dir = /usr/share/lms/modules/</prompt></para>
        </listitem>
        <listitem>
        <para>lib_dir</para>
        <para>Directory with "libraries" of LMS. That is content of /lib directory. By default 
        it is subdirectory <filename>lib</filename> in sys_dir.</para>
        <para>Example:     <prompt>lib_dir = /usr/share/lms/lib/</prompt></para>
        </listitem>
        <listitem>
        <para>backup_dir</para>
        <para>Directory for database backup files - place where LMS write database snapshots. 
        By default it is subdirectory <filename>backups</filename> in sys_dir.</para>
        <para>Example:     <prompt>backup_dir = /var/backup/lms/</prompt></para>
        <para><warning><para>If directory with backups will be accessible from WWW level, 
        then anybody will can to access them without authorization.</para></warning></para>
        </listitem>
        <listitem>
        <para>smarty_dir</para>
        <para>Directory with Smarty library - By default, subdirectory <filename>Smarty</filename> in lib_dir.</para>
        <para>Example:     <prompt>smarty_dir = /usr/lib/php/Smarty</prompt></para>
        </listitem>
        <listitem>
        <para>smarty_compile_dir</para>
        <para>Smarty's compilation directory. Place where Smarty compile templates. By default  
        it is subdirectory <filename>templates_c</filename> in sys_dir.</para>
        <para>Example:      <prompt>smarty_compile_dir = /var/smarty/compile/lms</prompt></para>
        </listitem>
        <listitem>
        <para>smarty_templates_dir</para>
        <para>Directory with Smarty's templates. By default it is subdirectory <filename>templates</filename>
        in sys_dir.</para>
        <para>Example:     <prompt>smarty_templates_dir = /usr/share/lms/templates</prompt></para>
        </listitem>
        </itemizedlist>
     </para>
     </sect2>
     <sect2 id="install-config-ui">
        <title>Section [phpui] - Interface Setting</title>
        <itemizedlist>
        <listitem>
             <para>allow_from  (optional)</para>
             <para>Lis of networks and IP addresses, which have access to LMS. If empty, every IP address has 
             access to LMS. When you write here list of addresses or address classes,
             LMS dismiss every unwanted user with HTTP 403 error.</para>
             <para>Example:          <prompt>allow_from = 192.168.0.0/16, 213.25.209.224/27, 213.241.77.29</prompt></para>
     </listitem>
     <listitem>
         <para>lang</para>
         <para>User interface language symbol. When is not set, language will be based on
         html browser settings. Default: en.</para>
         <para>Example:     <prompt>lang = pl</prompt></para>
     </listitem>
     <listitem>
         <para>timeout</para>
         <para>Timeout of www session. After that time (in seconds) user will be log out if 
         not take some action. Default: 600.</para>
         <para>Example:     <prompt>timeout = 900</prompt></para>
         <para><warning><para>There is not possible to set no timeout. If you set this value
         on zero, you'll can't use LMS!</para></warning></para>
     </listitem>
     <listitem>
         <para>customerlist_pagelimit</para>
         <para>Limit of displayed positions on one page on customers list. Default: no limit.</para>
         <para>Example:     <prompt>customerlist_pagelimit = 10</prompt></para>
     </listitem>
     <listitem>
         <para>nodelist_pagelimit</para>
         <para>Limit of displayed records on page on nodes list. Default: no limit.</para>
         <para>Example:     <prompt>nodelist_pagelimit = 10</prompt></para>
     </listitem>
     <listitem>
         <para>balancelist_pagelimit</para>
         <para>Limit of displayed records on page on user's balance. Default: 100.</para>
         <para>Example:     <prompt>balancelist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>invoicelist_pagelimit</para>
         <para>Limit of displayed records on page on invoices list. Default: 100</para>
         <para>Example:     <prompt>invoicelist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>ticketlist_pagelimit</para>
         <para>Limit of displayed records on page on tickets (requests) list. Default: 100</para>
         <para>Example:     <prompt>ticketlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>networkhosts_pagelimit</para>
         <para>Limit of displayed nodes on one page in Network Information. Default: 256</para>
         <para>Example:     <prompt>networkhosts_pagelimit = 1024</prompt></para>
     </listitem>
     <listitem>
         <para>accountlist_pagelimit</para>
         <para>Limit of displayed records on page on accounts list. Default: 100</para>
         <para>Example:     <prompt>accountlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>domainlist_pagelimit</para>
         <para>Limit of displayed records on page on domains list. Default: 100</para>
         <para>Example:     <prompt>domainlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>aliaslist_pagelimit</para>
         <para>Limit of displayed records on page on aliases list. Default: 100</para>
         <para>Example:     <prompt>aliaslist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>configlist_pagelimit</para>
         <para>Limit of displayed records on page on UI config options list. Default: 100</para>
         <para>Example:     <prompt>configlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>reload_type</para>
         <para>Reload type. Allowed values:</para>
         <para>exec - calling of some command (most often with sudo, some script or something
         else, configurable below)</para>
         <para>sql  - doing SQL writes (also can be set concrete query)</para>
         <para>Default: sql.</para>
         <para>Example:     <prompt>reload_type = exec</prompt></para>
     </listitem>
     <listitem>
         <para>reload_execcmd</para>
         <para>Command to run during reload, if reload_type is set to 'exec'. By default
         <filename>/bin/true</filename>. That string is send to command system(), so I propose consideration 
         what you do and how :) Altogether, semicolons should be parsed by bash, but
         LMS splits that string and execute commands singly.</para>
         <para>Example:     <prompt>reload_execcmd = "sudo /usr/bin/reload_lms.sh"</prompt></para>
     </listitem>
     <listitem>
         <para>reload_sqlquery</para>
         <para>SQL query executed while reload, if <prompt>reload_type = sql</prompt>.  
         By default, query inserts into table 'timestamps' value '_force'. In query can be used
         '%TIME%' as replacement to current unix timestamp. WARNING! Semicolon is handled by
         a queries separator, that means you can enter couple of SQL queries separate them by
         semicolon sign.</para>
         <para>Example:     <prompt>reload_sqlquery = "INSERT INTO reload VALUES ('1','%TIME%')"</prompt></para>
     </listitem>
     <listitem>
         <para>force_ssl</para>
         <para>SSL Enforcing. Setting this option to 1 will make that LMS will enforce SSL connection 
         doing redirect to 'https://'.$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI] at every access
         without SSL. Default: 0 (off).</para>
         <para>Example:     <prompt>force_ssl = 1</prompt></para>
     </listitem>
     <listitem>
         <para>allow_mac_sharing</para>
         <para>Permission for addition of nodes with duplicated MAC address (not checking
         that some computer have that MAC yet). Default: 0 (off)</para>
         <para>Example:     <prompt>allow_mac_sharing = 1</prompt></para>
     </listitem>
     <listitem>
         <para>smarty_debug</para>
         <para>Enable Smarty's debug console. Usefull for tracking values passed from PHP 
         to Smarty. Default: 0 (off).</para>
         <para>Example:     <prompt>smarty_debug = 1</prompt></para>
     </listitem>
     <listitem>
         <para>lang_debug</para>
         <para>Enable LMS language console. Usefull for tracking missing translation strings.
         Default: 0 (off).</para>
         <para>Example:     <prompt>lang_debug = 1</prompt></para>
     </listitem>
     <listitem>
         <para>debug_email</para>
             <para>E-mail address for debugging - at this address will goes messages sended from madule 'Mailing', 
         instead of proper users.</para>
         <para>Example:     <prompt>debug_email = root@localhost</prompt></para>
     </listitem>
     <listitem>
         <para>default_zip, default_city, default_address</para>
         <para>Default zip code, city, street, used while inserting of new user.
         Useful when we have many users on the same street.</para>
         <para>Example:     <prompt>default_zip = 39-300</prompt></para>
     </listitem>
     <listitem>
         <para>use_current_payday</para>
         <para>Qualify to use current day of month for payment day
         instead of most often used day. Default: 0 (off).</para>
         <para>Example:     <prompt>use_current_payday = 1</prompt></para>
     </listitem>
     <listitem>
         <para>lastonline_limit</para>
         <para>Specify time (in seconds), after which node will be treated
         as inactive. It should match with frequency of running script inspecting
         nodes activity (i.e. lms-fping). Default: 600.</para>
         <para>Example:     <prompt>lastonline_limit = 300</prompt></para>
     </listitem>
     <listitem>
         <para>timetable_days_forward</para>
         <para>Specify number of days (including current day) on timetable.
         Default: 7.</para>
         <para>Example:     <prompt>timetable_days_forward = 2</prompt></para>
     </listitem>
     <listitem>
         <para>arpd_servers</para>
         <para>List of arpd servers for reading of MAC addresses from remote networks.
         That list should include items IP[:port] separated with spaces.
         Default: empty.</para>
         <para>Example:     <prompt>arpd_servers = 192.168.1.1 192.168.2.1</prompt></para>
     </listitem>
     <listitem>
         <para>helpdesk_backend_mode</para>
         <para>When enabled, all messages in helpdesk system (except sended to requestor)
         will be send to mail server at address of right queue.
         On server should be running script lms-rtparser, which will write
         messages to database. Default: disabled.</para>
         <para>Example:     <prompt>helpdesk_backend_mode = On</prompt></para>
     </listitem>
     <listitem>
         <para>helpdesk_sender_name</para>
         <para>Name of message sender or predefined values: 'queue' - ticket's queue name,
	 'user' - name of logged user (sender). Default: empty.</para>
         <para>Example:     <prompt>helpdesk_sender_name = Helpdesk</prompt></para>
     </listitem>
     <listitem>
         <para>contract_template</para>
         <para>Specify customer contract template. Can include comma separated 
         list of contract templates. Default: contract.html.</para>
         <para>Example:     <prompt>contract_template = "../my_templates/contract.html"</prompt></para>
         <para>Example:     <prompt>contract_template = "contract.html:Default Contract, file.html:Contract Plus"</prompt></para>
     </listitem>
     <listitem>
         <para>to_words_short_format</para>
         <para>Specify format of verbal amounts representation (on invoices). For value "1"
         verbal expand of 123,15 will be "one two thr 15/100". Default: 0.</para>
         <para>Example:     <prompt>to_words_short_format = 1</prompt></para>
     </listitem>
     </itemizedlist>
      </sect2> 
    </sect1>
    <sect1 id="install-rights">
      <title>Access rights</title>
      <sect2 id="install-rights-idea">
                <title>Idea</title>
      <para>LMS may define up to 256 rules of access to the system. 
      Each can forbid or permit access to definite modules. 
      To each user we can freely assign combination of access rules.</para>
      <para>By default following access rules list is defined:
       <itemizedlist>
        <listitem><para>full access</para></listitem>
        <listitem><para>read only (excluding Helpdesk)</para></listitem>
        <listitem><para>nodes connection/disconnection</para></listitem>
        <listitem><para>finances management</para></listitem>
        <listitem><para>configuration reload</para></listitem>
        <listitem><para>customers management</para></listitem>
        <listitem><para>nodes management</para></listitem>
        <listitem><para>stats access</para></listitem>
        <listitem><para>mailing access</para></listitem>
        <listitem><para>Helpdesk (RT) administration</para></listitem>
        <listitem><para>Helpdesku (RT) operation</para></listitem>
        <listitem><para>accounts management</para></listitem>
        <listitem><para>UI configuration</para></listitem>
        <listitem><para>networks and devices management</para></listitem>
        <listitem><para>timetable management</para></listitem>
        <listitem><para>users edition and addition forbidden</para></listitem>
        <listitem><para>no access</para></listitem>
       </itemizedlist>
      Some of them permit access to modules and two forbid. Modules that user
      has always access is: welcome, copyrights,  logout, chpasswd 
      (chpasswd can change only own password), access to others is defined by rules.</para>
      <note><para>If we do not define to user any access rule, then LMS implicitly define 
      rule 0 for him - full access.</para></note>
      </sect2>
      <sect2 id="install-rights-how">
                <title>How does it work?</title>
          <para> Decision if user have right to access to module or not, looks like this:          
          <simplelist>
          <member>-  First of all: checking list of modules that user always have access.</member>
          <member>-  Next:  checking if module mach to rules in each levels that user
          have access.</member>
          <member>-  Finally: Decision if user have authorizations to access to modules. If module 
          mach to any level that forbid access then access will be forbiden even if user have 
          level that permit access to module. (for example. Someone have full access and no access 
          to adding computer module then he would not be able to appeal to this module). 
          If module  maches to level that permit access to module. Then LMS permit farther work. 
          But if module does not match on any level then also will be printed no-access-msg.</member>
	  </simplelist>
          </para>
     </sect2>
    </sect1>
    <sect1 id="install-upgrade">
      <title>Upgrade</title>
      <para>LMS upgrade process in two stages. First make directory of new version 
      (overwriting old files with new ones is not recommended) then we have to make 
      some changes in database.</para>
      <para>For easy migration of data in catalog<filename>/doc</filename>
      we prepared file:<filename>UPGRADE-1.0-1.5.mysql</filename> and 
      <filename>UPGRADE-1.0-1.5.pgsql</filename> for upgrade from 1.0 to 1.5 version. 
      Also <filename>UPGRADE-1.2-1.5.mysql</filename> and <filename>UPGRADE-1.2-1.5.pgsql
      </filename> For migration from version 1.3 (and 1.3.0) to current  version. In those 
      files you can find short description how to upgrade in dependence of used database. 
      In versions 1.3.0 and higher upgrade of database structure is automatically 
      executed while first logon.</para>
      <para><note><para>In 1.0.x and higher versions ADOdb library Is not required, 
      you can remove applicable directory from <filename>lib/</filename> directory.</para></note></para>
    </sect1>
    <sect1 id="install-invoices">
	<title>Invoices</title>
		<para>In LMS is possible automatic and manual invoices settlement. Manual invoices
		creation is is possible in 'New Invoice' module from 'Finances' menu. Automatic settlement 
		need to enable that option while liabilities ascribing to customers. In that case
		invoices are created while accounting by <filename>lms-payments</filename> script or 
		daemon <emphasis>almsd</emphasis>.</para>
		<para>For proper working and printouts you will need to set custom options 
		in section <emphasis>[invoices]</emphasis> of <filename>lms.ini</filename>:
		<itemizedlist>
		<listitem>
			<para>number_template</para>
			<para>Invoice number pattern. Accessible variables: '%N' - successive number in year/month,
			'%M' - settlement month number, '%Y' - settlement year number (four digits). Default: %N/LMS/%Y</para>
			<para>Example: <prompt>number_template = %N/%Y</prompt></para>
		</listitem>
		<listitem>
			<para>monthly_numbering</para>
			<para>Enable this option when you need to reset invoice numbering on start of every month.
			Default: disabled</para>
			<para>Example: <prompt>monthly_numbering = 1</prompt></para>
		</listitem>
		<listitem>
			<para>header</para>
			<para>Seller. Can use string "\n" for lines separation. Default: empty.</para>
			<para>Example: <prompt>header = "SuperNet ISP\nNew Street 15\n12-000 City\n"</prompt></para>
		</listitem>
		<listitem>
			<para>footer</para>
			<para>Invoice footer - e.g. seller description. Footer will be placed at bottom of a invoice, small font. Like in header option use "\n" to separate lines. Default: empty</para>
			<para>Example: <prompt>footer = "Internet Service Provider K-27, phone 555-23-23, etc."</prompt></para>
		</listitem>
		<listitem>
			<para>default_author</para>
			<para>Invoice settler. Default: empty</para>
			<para>Example: <prompt>default_author = "invoicing expert"</prompt></para>
		</listitem>
		<listitem>
			<para>cplace</para>
			<para>Invoice settlement place (city). Default: empty.</para>
			<para>Example: <prompt>cplace = Warsaw</prompt></para>
		</listitem>
		</itemizedlist>
		Generated invoices can be viewed in double ways: by printer icon on balance sheet 
		or by 'Invoices List' in 'Finances' menu. In second case, is also possible to 
		filter invoices for printing.</para>
	    <sect2 id="install-invoices-html">
		<title>HTML</title>
		<para>With default settings invoices are printed in html format
		with use of default template. In <emphasis>[invoices]</emphasis> section
		are also options:
		<itemizedlist>
		<listitem>
			<para>template_file</para>
			<para>Invoice template, which should be placed in 
			<filename>templates</filename> directory. Default: invoice.html.</para>
			<para>Example: <prompt>template_file = invoice-mynet.html</prompt></para>
		</listitem>		
		<listitem>
			<para>content_type</para>
			<para>Invoice content-type. If you enter here 'application/octet-stream'
			then browser will send file to save on disk, instead of displaying it.
			It's useful if you use your own template which generate e.g. rtf or xls file.
			Default: 'text/html'</para>
			<para>Example: <prompt>content_type = application/octet-stream</prompt></para>
		</listitem>	
		<listitem>
			<para>attachment_name</para>
			<para>File name for saving finished invoice printout. WARNING: Setting attachment_name 
			with default content_type will (in case of MSIE) print invoice + prompt for save on 
			disk + bonus browser crash (6.0SP1 on WInXP).
			Default: empty.</para>
			<para>Example: <prompt>attachment_name = invoice.xls</prompt></para>
		</listitem>
		</itemizedlist>
		Generated HTML invoice consist originals and copies, which are separated
		by CSS page-break markups. So every modern browser that support CSS 
		should print many-page invoices shallow. This function was tested on
		Microsoft Internet Explorer 6.0, Opera 7.02 and Mozilla 1.3.</para>
		<para>
			<note><para>Almost every internet browser has printing 
			configuration, where functions like header and footer or URL 
			printing can be disabled.</para></note>
		</para>
	    </sect2>	
	    <sect2 id="install-invoices-pdf">
		<title>PDF</title>
		<para>It's possible to create invoices as pdf files. Setting
		option <filename>type</filename> from <emphasis>[invoices]</emphasis> section
		to 'pdf' will make, that invoice will be created in pdf instead of html.
		Option <filename>template_file</filename> performs similiar part like in html invoices,
		with one difference, it has predefined values: 'standard' - basic invoice 
		(invoice.html equivalent) and 'FT-0100' - invoice adjusted for printing on
		FT-0100 print including payment form. You can set <filename>template_file</filename>
		option for php file name, but this feature is assigned for advanced users.
		because it require creation of more complicated php file than in html invoices 
		simple Smarty template.</para>
		<para>Data for printout of payment form are stored in <emphasis>[finances]</emphasis>
		section of <filename>lms.ini</filename> file. That is:
		<simplelist>
		    <member>name - seller name</member>
		    <member>shortname - short seller name</member>
		    <member>address - seller address</member>
		    <member>zip - seller postal code</member>
		    <member>city - seller city</member>
		    <member>account - banking account number</member>		
		</simplelist>
		</para>
	    </sect2>
    </sect1>
  </chapter>
