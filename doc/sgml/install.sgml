<!-- $Id$ -->
<chapter id="install">
    <title>Installation and configuration</title>
    <sect1 id="install-intro">
     <title>Intro</title>
     <para>LMS consist a few modules. <emphasis>LMS-UI</emphasis> is user interface, which is
     responsible for all interactions with user, entirely written in PHP and it uses SQL database to
     store all data, thus PHP script interpreter and SQL engine of your choice (MySQL, Postgresql,
     SQLite) are required.</para>
     <para>LMS also contains a set of Perl scripts, responsible for various operations, ie.
     periodically applying subscription fees or sending reminders to users who are in debt. It
     also contains <emphasis>LMS-MGC</emphasis>, which may be configured to generate virtually
     any configuration file or script and manage your server. Note that some of the scripts might
     need additional Perl modules to function.</para>
     <para>At the end there is also <emphasis>LMS Daemon</emphasis>, written in C, which is
     being used (its plugins in fact) as a drop-in replacement for <emphasis>LMS-MGC</emphasis> - to
     configure and manage (ie. restart) your services. It's main advantage is that it responds for
     all <emphasis>LMS-UI</emphasis> changes in realtime.</para>
    </sect1>
    <sect1 id="install-requirements">
        <title>Requirements</title>
        <sect2 id="install-req-www">
             <title>Web Server</title>
            <para>Because <emphasis>LMS-UI</emphasis> is written in PHP,
            it needs Web server to work. Apache is preferred (<ulink
            url="http://www.apache.org">www.apache.org</ulink>).</para>
        </sect2>
        <sect2 id="install-req-php">
           <title>PHP Interpreter</title>
           <para>Interpreter version should be 4.2.x or higher, but it also works fine with 4.1.x
           (but due that developers use 4.2.3 or higher, we can't guarantee correct work with older
           versions. PHP can be downloaded from <ulink url="http://www.php.net">www.php.net</ulink>.
           At least following PHP modules needs to be installed (look for "extension" in
           php.ini or in output of phpinfo function): pcre, posix (for systems info), zlib (for
           compressed backups), gd or ming (for graphical map) and one of: mysql, pgsql, sqlite (for db
           support). PEAR::Mail is being used for mailing (which require Net_SMTP and Net_Sockets from 
	   PEAR package).</para>
         </sect2>
         <sect2 id="install-req-db">
           <title>Database Server</title>
           <para>MySQL server in version 3.23.xx and higher is supported. LMS won't work correctly
           with older versions.</para>
           <para>PostgreSQL in version 7.3.x or higher is supported.</para>
           <para>SQLite database is also usable, but we only tested version 2.8.11.</para>
         </sect2>
         <sect2 id="install-req-smarty">
             <title>Smarty Library</title>
            <para><emphasis>LMS-UI</emphasis> requires Smarty library (<ulink
            url="http://smarty.php.net">http://smarty.php.net</ulink>) in version 2.6.0
            or higher (don't use 2.6.4 version). Newer versions of Smarty requires that
            you have not enabled "magic_quotes_runtime" (set to Off) option in <ulink
            url="http://www.php.net/manual/en/configuration.php">PHP configuration</ulink>.</para>
            </sect2>
            <sect2 id="install-req-perl">
            <title>Perl</title>
       <para><emphasis>LMS-MGC</emphasis> and the rest of Perl scripts requires 
          also Perl interpreter and some modules:
       <itemizedlist>
         <listitem>
            <para>Perl and its basic modules (POSIX, GetOpt::Long);</para>
         </listitem>
         <listitem>
            <para>Net::SMTP;</para>
         </listitem>
         <listitem>
            <para>Config::IniFiles;</para>
         </listitem>
         <listitem>
            <para>DBI;</para>
         </listitem>
         <listitem>
            <para>DBD-mysql (if you use MySQL);</para>
         </listitem>
         <listitem>
            <para>DBD-Pg (if you use Postgres);</para>
         </listitem>
         <listitem>
            <para>DBD-SQLite (if you use SQLite);</para>
         </listitem>
       </itemizedlist></para>
       </sect2>
       <sect2 id="install-req-c">
         <title>C Compiler</title>
       <para>If you intend to run <emphasis>LMS Daemon</emphasis> you will need
       working C compiler, because daemon will be provided in source code form only.</para>
       </sect2>
     </sect1>
     <sect1 id="install-install">
     <title>LMS Installation</title>
            <para>LMS in tarball (.tar.gz) archive can be downloaded from project 
          home page (<ulink url="http://lms.rulez.pl">lms.rulez.pl</ulink>),
          which should be extracted and placed in chosen directory (i.e. <filename>/var/www/lms</filename>) 
          and made available for Web Server (ie. with Alias /lms/ /var/www/lms):
<screen>
$ cd /var/www
$ wget http://lms.rulez.pl/download/stable/lms-x.x.x.tar.gz
$ tar zxf lms-x.x.x.tar.gz
</screen>
          </para>
          <para>Two kind of LMS packets are available - the one with Smarty library included
          (<filename>lms-x.x.x+libs.tar.gz</filename>) and without this library. If you have
          installed version without library you have to get Smarty yourself (eg. using PEAR) and
          place it in <filename>lib</filename> subdirectory.
<screen>
$ cd /var/www/lms/lib
$ wget http://smarty.php.net/distributions/Smarty-2.6.0.tar.gz
$ tar zxf Smarty-2.6.0.tar.gz
$ mv Smarty-2.6.0/libs Smarty
</screen>
          </para>
          <para><note><para>Location of all directories can be set in
          <emphasis>[directories]</emphasis> section in <filename>lms.ini</filename> configuration
          file.</para></note></para> <para>Configuration files (<filename>sample/lms.ini</filename>
          and <filename> sample/lms-mgc.ini</filename>) should be placed in
          <filename>/etc/lms</filename> directory. </para>
          <para>Scripts from <filename>bin</filename> directory should be moved to
          <filename>/usr/sbin</filename> directory, so you can execute it directly without giving
          path. </para>
          <para><warning><para>Web Server must have read permission on <filename>lms.ini</filename>
          file and write permission on <filename>backup</filename> directory. Please
          consider security implications: you might want to protect backup directory with
          <filename>.htaccess</filename> and place your lms.ini outside Web Server's DocumentRoot
          (LMS allows you to place it in its home directory, but then it's possible to read it
          with http://yourserver/lms.ini, and it contains valuable information such as database
          password!).</para></warning></para>
     </sect1>
     <sect1 id="install-locale">
	<title>Localization</title>
	<para>Default language of user interface is English, and national characters
	are encoded in UTF-8. For proper display of national characters in other languages
	you must define appropriate locales. E.g. for polish language it's achieved by running
	the following command:
<screen>
# localedef -v -c -i pl_PL -f UTF-8 /usr/share/locale/pl_PL.UTF-8
</screen>
	Instructions about database encoding settings in follow-up of this chapter.
	</para>
    </sect1>
     <sect1 id="install-db">
     <title>Database Server Installation</title>
          <sect2 id="install-mysql">
          <title>MySQL</title>
          <sect3 id="install-mysql-intro">
          <title>Intro</title>
               <para>That very popular database server is available with majority of Linux
               distributions. If, however, you have to install it yourself, start with downloading
               its sources from <ulink url="http://www.mysql.com">www.mysql.com</ulink>.</para>
          </sect3>
          <sect3 id="install-mysql-server">
          <title>MySQL Server Installation</title>
               <para>After extracting, go to directory with MySQL and type this sequence
               of commands:
               <screen>
$ ./configure --prefix=/usr/local/mysql
$ make
$ make install
$ /usr/local/mysql/bin/mysql_install_db
$ chown mysql -R /usr/local/mysql/var
$ /usr/local/mysql/bin/safe_mysqld &
$ /usr/local/mysql/bin/mysqladmin -u root password new_password</screen>
          </para>
          </sect3>
          <sect3 id="install-mysql-dbcreate">
          <title>Create Database</title>
               <para>You have to create database if you run LMS for the first time. If you are
               upgrading from older version, look into Changelog for appropriate notes about
               database changes. In order to create database and load it with schema go to LMS
               directory and run:
<screen>
mysql -u[user name with database creation rights] -p
Enter password:[just enter password :)]
mysql> create database lms;
mysql> grant usage on lms.* to lms@localhost;
mysql> grant select,insert,update,delete,create,alter on lms.* to lms@localhost identified by '[your_password]';
mysql> flush privileges;
mysql> use lms;
mysql> source doc/lms.mysql;</screen>
          </para>
          </sect3>
          <sect3 id="install-mysql-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>Because MySQL is default database for LMS, configuration is limited to
               [database] section setup. Thus you need to edit /etc/lms/lms.ini and fill in password
               and user's name:
               <screen>
user     = lms
password = your_password</screen>
              </para>
               <para>After this step you should be able to enter your system without any problems.
               Just write an URL for your LMS installation. If there's no user account (first run),
               you'll be prompted with form to add username and some personal data. When you enter
               correct admin personal details LMS will move you to login page, where you can use
               newly created account.</para>
               <para>Let's stop here and add some stuff to cron, for peace of mind:
               <screen>
12 4 3,10,17,21,28 * * /usr/bin/mysqldump -u lms --password=your-super-secret-password \
              --add-drop-table --add-locks lms > backups/lms-auto-"$(date +%s)".sql</screen>
               </para>
               <para>That will create mysql database backup automagically each 3, 10, 17, 21 and 28
               day of month at 4:12 at night.</para>
          </sect3>
          </sect2>
          <sect2 id="install-pgsql">
          <title>PostgreSQL</title>
          <sect3 id="install-pgsql-intro">
          <title>Intro</title>
               <para>LMS is tested on PostgreSQL 7.3.4 and higher, but because none of special
               features of the engine are ever used, there should be no problems with its later
               versions. If you have not installed PostgreSQL server, best solution is to compile
               it yourself from sources available on <ulink url="http://www.postgresql.org">
               www.postgresql.org</ulink>.</para>
          </sect3>
          <sect3 id="install-pgsql-server">
          <title>Installation</title>
               <para>That is a short version of installation procedure, more info can be found in
               Postgres documentation. After you download and extract sources go to main directory
               and run following commands:
               <screen>
$ ./configure --enable-locale
$ gmake
$ su
$ gmake install
$ adduser postgres
$ mkdir /usr/local/pgsql/data
$ chown postgres /usr/local/pgsql/data
$ su - postgres
$ /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data --locale=pl_PL.UTF-8
$ /usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data >logfile 2>&1 &</screen>
               </para>
          </sect3>
          <sect3 id="install-pgsql-dbcreate">
          <title>Database Creation</title>
               <para>While server is running you can start with adding database and its owner, both
               named 'lms' and loading database schema:
               <screen>
$ /usr/local/pgsql/bin/createuser -d -A -P lms
$ /usr/local/pgsql/bin/createdb -E UNICODE -U lms lms
$ /usr/local/pgsql/bin/psql -d lms -U lms -f /lms/doc/lms.pgsql</screen>
          </para>
          </sect3>
          <sect3 id="install-pgsql-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>For LMS default database server is MySQL so you have to set following options
               in [database] section of /etc/lms/lms.ini file:
                  <screen>
type     = postgres
user     = lms
password = password_entered_with_lms_user_creation</screen>
              </para>
               <para><note><para>The need for password actually depends
               on Postgres users authentication configuration found in
               <filename>/usr/local/pgsql/data/pg_hba.conf</filename> (refer to <ulink
               url="http://www.postgresql.org/docs/8.0/interactive/client-authentication.html#EXAMPLE-PG-HBA.CONF">
               Postgresql documentation</ulink>). By default password is not
               required and you can comment it with semicolon.</para></note></para>
               <para>After this step you should be able to enter your system without any problems.
               Just write an URL for your LMS installation. If there's no user account (first run),
               you'll be prompted with form to add username and some personal data. When you enter
               correct admin personal details LMS will move you to login page, where you can use
               newly created account.</para>

               <para>Let's stop here and add some stuff to cron, for peace of mind:
               <screen>
12 4 3,10,17,21,28 * * /usr/bin/pg_dump -U lms --clean --create --column-inserts  \
            --format=p lms -- file backups/lms-auto-"$(date +%s)".sql</screen>
	    </para>
          </sect3>
          </sect2>
          <sect2 id="install-sqlite">
          <title>SQLite</title>
          <sect3 id="install-sqlite-intro">
          <title>Intro</title>
               <para>This one-file database is superior for its speed. Quoting its authors it
               might be 2-3 times faster than MySQL, and with proper configuration it's possible
               to load the whole data into RAM, which has high positive impact on performance.
               Below is short description of installation. Sources can be downloaded from: <ulink
               url="http://www.sqlite.org"> www.sqlite.org</ulink>.</para>
          </sect3>
          <sect3 id="install-sqlite-server">
          <title>Installation</title>
               <para>Here You can see how to install the SQLite libraries and add extension to your
               PHP installation (PHP 5.0 has SQLite built in). After you unpack the sources go to
               SQLite directory and type in commands step by step (for example):
               <screen>
$ ./configure --enable-utf8
$ make
$ make install
$ ldconfig
$ pear download http://pecl.php.net/get/SQLite-1.0.2.tgz
$ pear install SQLite-1.0.2.tgz</screen>
               Next in php.ini set:
               <screen>
extension=sqlite.so</screen>
               There is an option to compile-in SQLite PHP extension: <prompt>--with-sqlite</prompt>.
               </para>
          </sect3>
          <sect3 id="install-sqlite-dbcreate">
          <title>Database Creation</title>
               <para>You will need to create your database and fill it with initial schema before
               using LMS for the first time. Go to your LMS directory and run SQLite shell:
               <screen>
$ sqlite -init doc/lms.sqlite /usr/local/lms/lms.db
sqlite> .exit
$ chown 99.98 /usr/local/lms/lms.db</screen>
               </para>
          </sect3>
          <sect3 id="install-sqlite-lms">
          <title>LMS Configuration (lms.ini)</title>
               <para>One of the SQLite limitations is that it doesn't authenticate users, so the
               only configuration options you have to setup are type and path to the database file.
               In <filename>[database]</filename> section of <filename>/etc/lms/lms.ini</filename>
               file set:
               <screen>
type     = sqlite
database = /usr/local/lms/lms.db</screen>
              </para>
               <para>After this step you should be able to enter your system without any problems.
               Just write an URL for your LMS installation. If there's no user account (first run),
               you'll be prompted with form to add username and some personal data. When you enter
               correct admin personal details LMS will move you to login page, where you can use
               newly created account.</para>
          </sect3>
          </sect2>
      </sect1>       
      <sect1 id="install-config">
           <title>Basic Configuration</title>
          <para>Main configuration file of LMS is <filename>lms.ini</filename>, which must be placed
         in directory <filename>/etc/lms</filename> or in LMS root directory (not recommended, see
         <xref linkend="install-install">!!!). It contains configuration options for <emphasis>LMS-UI</emphasis>
         and for all scripts with exception of <emphasis>LMS-MGC</emphasis>.</para>
         <para><note><para>Remember to remove semicolons (comments sign) from beginning of line with
         parameter that you set.</para></note></para>
         <sect2 id="install-config-db">
         <title>Section [database] - Database Settings</title>
         <para>
         <itemizedlist>
            <listitem>
         <para>type</para>
        <para>Database type. Currently only 'mysql' is 100% supported, but for the time being
        there has not been seen any problems with 'postgres' or 'sqlite'. Default: mysql</para>
        <para>Example: <prompt>type = mysql</prompt></para>
       </listitem>
          <listitem>
        <para>host</para>
        <para>Host where database is running. Usually 'localhost', but you can set anything here     
        (IP, domain or path to socket in 'localhost:/path/to/socket' format).                       
        Default: localhost</para>
        <para>Example:     <prompt>host = localhost</prompt></para>
       </listitem>
          <listitem>
        <para>user</para>
        <para>Database user account name. In many cases (if you follow this documentation) that will
        be 'lms'. If you want to use privileged account, you can enter 'root' (MySQL on most of
        *nixes), 'mysql' (on PLD) or 'postgres' (PostgreSQL). Default: mysql</para>
        <para>Example:     <prompt>user = lms</prompt></para>
       </listitem>
          <listitem>
        <para>password</para>
        <para>Database user password. Default: empty.</para>
        <para>Example:     <prompt>password = password</prompt></para>
       </listitem>
          <listitem>
        <para>database</para>
        <para>Database name (or path to database file for SQLite). Default: lms</para>
        <para>Example:     <prompt>database = lms</prompt></para>
       </listitem>
          <listitem>
        <para>server_encoding</para>
        <para>Database encoding. Use if your database encoding is not Unicode. Postgres is
        performing conversion automatically, but if you use MySQL PHP and iconv in LMS DB drivers is
        used. Default: unicode</para>
        <para>Example:     <prompt>server_encoding = latin2</prompt></para>
       </listitem>
         </itemizedlist>
     </para>
     </sect2>
     <sect2 id="install-config-dir">         
     <title>Section [directories] - Directories Settings</title>
      <para>        
     <itemizedlist>
     <listitem>
        <para>sys_dir</para>
        <para>System directory. It is a place where the entire content of LMS UI is placed, that
        means index.php, graphics, templates and the rest. By default index.php tries to guess where
        is it located using getcwd(), but it's better to say it where it is:</para>
        <para>Example:     <prompt>sys_dir = /var/www/htdocs/lms/</prompt></para>
        </listitem>
        <listitem>
        <para>modules_dir</para>
        <para>Directory with LMS "modules". That is content of /modules directory. By default it is
        <filename>modules</filename> subdirectory of sys_dir.</para>
        <para>Example:     <prompt>modules_dir = /usr/share/lms/modules/</prompt></para>
        </listitem>
        <listitem>
        <para>lib_dir</para>
        <para>Directory with LMS "libraries". That is content of /lib directory. By default it is
        <filename>lib</filename> subdirectory of sys_dir.</para>
        <para>Example:     <prompt>lib_dir = /usr/share/lms/lib/</prompt></para>
        </listitem>
        <listitem>
        <para>backup_dir</para>
        <para>Directory for database backup files - it's a place where LMS can write its database
        snapshots. By default it is <filename>backups</filename> subdirectory of sys_dir.</para>
        <para>Example:     <prompt>backup_dir = /var/backup/lms/</prompt></para>
        <para><warning><para>If directory with backups is accessible from WWW
        level (within Web Server DocumentRoot), anybody can access them without
        authentication.</para></warning></para>
        </listitem>
        <listitem>
        <para>smarty_dir</para>
        <para>Directory with Smarty library - By default <filename>Smarty</filename> subdirectory of lib_dir.</para>
        <para>Example:     <prompt>smarty_dir = /usr/lib/php/Smarty</prompt></para>
        </listitem>
        <listitem>
        <para>smarty_compile_dir</para>
        <para>Compilation directory for Smarty. It's a place where Smarty compile its templates. By
        default it is <filename>templates_c</filename> subdirectory of sys_dir.</para>
        <para>Example:      <prompt>smarty_compile_dir = /var/smarty/compile/lms</prompt></para>
        </listitem>
        <listitem>
        <para>smarty_templates_dir</para>
        <para>Directory with templates for Smarty. By default it is <filename>templates</filename  >
        subdirectory of sys_dir.</para                                                             >
        <para>Example:     <prompt>smarty_templates_dir = /usr/share/lms/templates</prompt></para>
        </listitem>
        </itemizedlist>
     </para>
     </sect2>
     <sect2 id="install-config-ui">
        <title>Section [phpui] - Interface Setting</title>
        <itemizedlist>
        <listitem>
             <para>allow_from  (optional)</para>
             <para>List of networks or IP addresses, which have access to LMS. If empty, every IP
             address is permitted. You can write here list of addresses or address classes and LMS
             will dismiss every unwanted user with HTTP 403 error.</para>
             <para>Example:          <prompt>allow_from = 192.168.0.0/16, 213.25.209.224/27, 213.241.77.29</prompt></para>
     </listitem>
     <listitem>
         <para>lang</para>
         <para>User interface language code (ISO). IF not set, language will be based on HTML
         browser settings. Default: en</para>
         <para>Example:     <prompt>lang = pl</prompt></para>
     </listitem>
     <listitem>
         <para>timeout</para>
         <para>Timeout for WWW session. User will be log out if he won't perform any action in such
         number of seconds. Default: 600</para>
         <para>Example:     <prompt>timeout = 900</prompt></para>
         <para><warning><para>It's not possible to not to have any timeout. If you set this value to
         zero, you won't be able to use LMS at all!</para></warning></para>
     </listitem>
     <listitem>
         <para>customerlist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of customers list. Default: no
         limit</para>
         <para>Example:     <prompt>customerlist_pagelimit = 10</prompt></para>
     </listitem>
     <listitem>
         <para>nodelist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of nodes list. Default: no
         limit</para>
         <para>Example:     <prompt>nodelist_pagelimit = 10</prompt></para>
     </listitem>
     <listitem>
         <para>balancelist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of customer balance. Default: 100.</para>
         <para>Example:     <prompt>balancelist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>invoicelist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of invoices list. Default: 100</para>
         <para>Example:     <prompt>invoicelist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>ticketlist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of ticket (requests) list. Default: 100</para>
         <para>Example:     <prompt>ticketlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>networkhosts_pagelimit</para>
         <para>Limit of records that can be displayed on one page of nodes with network information.
         Default: 256</para>
         <para>Example:     <prompt>networkhosts_pagelimit = 1024</prompt></para>
     </listitem>
     <listitem>
         <para>accountlist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of customer accounts. Default: 100</para>
         <para>Example:     <prompt>accountlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>domainlist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of system domains. Default: 100</para>
         <para>Example:     <prompt>domainlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>aliaslist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of user aliases. Default: 100</para>
         <para>Example:     <prompt>aliaslist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>configlist_pagelimit</para>
         <para>Limit of records that can be displayed on one page of UI configuration list. Default: 100</para>
         <para>Example:     <prompt>configlist_pagelimit = 50</prompt></para>
     </listitem>
     <listitem>
         <para>reload_type</para>
         <para>Reload type. Allowed values:</para>
         <para>exec - execute some command (usually with sudo, script or something
         else, configurable below)</para>
         <para>sql  - doing SQL writes (can be also set to custom query)</para>
         <para>Default: sql.</para>
         <para>Example:     <prompt>reload_type = exec</prompt></para>
     </listitem>
     <listitem>
         <para>reload_execcmd</para>
         <para>Command to run during reload, if reload_type is set to 'exec'. By default
         <filename>/bin/true</filename>. This string is send to system() command, so make sure that
         you know what you're doing. :) Besides, semicolons should be parsed by bash, but LMS splits
         that string and execute commands separately.</para>
         <para>Example:     <prompt>reload_execcmd = "sudo /usr/bin/reload_lms.sh"</prompt></para>
     </listitem>
     <listitem>
         <para>reload_sqlquery</para>
         <para>SQL query executed while reload, if <prompt>reload_type = sql</prompt>. By default,
         query does inserts into table 'timestamps' with '_force' value. You can use '%TIME%'
         template in your query which will be substituted with current UNIX timestamp. WARNING!
         Semicolon is handled as query separator, which means that you can enter couple of SQL
         queries separated by semicolon sign.</para>
         <para>Example:     <prompt>reload_sqlquery = "INSERT INTO reload VALUES ('1','%TIME%')"</prompt></para>
     </listitem>
     <listitem>
         <para>force_ssl</para>
         <para>Enforce SSL for all connections. Setting this option to 1 will
         turn LMS into enforcing SSL connections by applying redirect to
         'https://'.$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI] at every access without SSL. Default:
         0 (off).</para>
         <para>Example:     <prompt>force_ssl = 1</prompt></para>
     </listitem>
     <listitem>
         <para>allow_mac_sharing</para>
         <para>Allows for node addition even if its MAC address is not unique (not checking that
         some computer have that MAC yet). Default: 0 (off)</para>
         <para>Example:     <prompt>allow_mac_sharing = 1</prompt></para>
     </listitem>
     <listitem>
         <para>smarty_debug</para>
         <para>Enable Smarty debug console. Useful for tracking values passed from PHP to Smarty.
         Default: 0 (off).</para>
         <para>Example:     <prompt>smarty_debug = 1</prompt></para>
     </listitem>
     <listitem>
         <para>lang_debug</para>
         <para>Enable LMS language console. Useful for tracking missing translation strings.
         Default: 0 (off).</para>
         <para>Example:     <prompt>lang_debug = 1</prompt></para>
     </listitem>
     <listitem>
         <para>debug_email</para>
         <para>E-mail address for debugging - messages sent from module 'Mailing' will be delivered
         to this address instead of sending them to real users. </para>
         <para>Example:     <prompt>debug_email = root@localhost</prompt></para>
     </listitem>
     <listitem>
         <para>default_zip, default_city, default_address</para>
         <para>Default zip code, city and street used on "new user" form. Useful when we have many
         users on the same street.</para>
         <para>Example:     <prompt>default_zip = 39-300</prompt></para>
     </listitem>
     <listitem>
         <para>use_current_payday</para>
         <para>Forces to use current day of month as a payment day instead of most often used day.
         Default: 0 (off).</para>
         <para>Example:     <prompt>use_current_payday = 1</prompt></para>
     </listitem>
     <listitem>
         <para>lastonline_limit</para>
         <para>Specify time (in seconds), after which node will be marked offline. It should match
         frequency of execution for script responsible for checking nodes activity (i.e. lms-fping).
         Default: 600.</para>
         <para>Example:     <prompt>lastonline_limit = 300</prompt></para>
     </listitem>
     <listitem>
         <para>timetable_days_forward</para>
         <para>Specify number of days (including current day) visible on timetable.
         Default: 7.</para>
         <para>Example:     <prompt>timetable_days_forward = 2</prompt></para>
     </listitem>
     <listitem>
         <para>arpd_servers</para>
         <para>List of arpd servers for reading MAC addresses from remote networks.
         That list should include IP[:port] items separated with spaces.
         Default: empty.</para>
         <para>Example:     <prompt>arpd_servers = 192.168.1.1 192.168.2.1</prompt></para>
     </listitem>
     <listitem>
         <para>helpdesk_backend_mode</para>
         <para>When enabled, all messages in helpdesk system (except those sent to ticket reporter)
         will be sent to mail server to the appropriate queue address. Mail server should run
         lms-rtparser script, which will write messages to database. Default: disabled.</para>
         <para>Example:     <prompt>helpdesk_backend_mode = On</prompt></para>
     </listitem>
     <listitem>
         <para>helpdesk_sender_name</para>
         <para>Name of message sender or predefined values: 'queue' - ticket's queue name,
	 'user' - name of logged user (sender). Default: empty.</para>
         <para>Example:     <prompt>helpdesk_sender_name = Helpdesk</prompt></para>
     </listitem>
     <listitem>
         <para>newticket_notify</para>
         <para>If enabled, after new ticket addition system will send notification
         emails to all users with rights to the queue. Default: disabled.</para>
         <para>Example:     <prompt>newticket_notify = On</prompt></para>
     </listitem>
     <listitem>
         <para>contract_template</para>
         <para>Specify contract template(s) for customer. You can provide comma separated list of
         contract templates. Default: contract.html.</para>
         <para>Example:     <prompt>contract_template = "../my_templates/contract.html"</prompt></para>
         <para>Example:     <prompt>contract_template = "contract.html:Default Contract, file.html:Contract Plus"</prompt></para>
     </listitem>
     <listitem>
         <para>to_words_short_format</para>
         <para>Specify format of verbal amounts representation (on invoices). For value "1"
         verbal expand of 123,15 will be "one two thr 15/100". Default: 0.</para>
         <para>Example:     <prompt>to_words_short_format = 1</prompt></para>
     </listitem>
     <listitem>
         <para>nodepassword_length</para>
         <para>Length of (auto-generated) node password. Max.32. Default: 16.</para>
         <para>Example:     <prompt>nodepassword_length = 8</prompt></para>
     </listitem>
     <listitem>
         <para>smtp_host, smtp_port, smtp_username, smtp_password</para>
         <para>Parameters for smtp authorization in mailing. Default: 127.0.0.1:25.</para>
         <para>Example:     <prompt>smtp_host = mail.domain.pl</prompt></para>
     </listitem>
     <listitem>
         <para>smtp_auth_type</para>
         <para>Smtp authorization method in mailing. By default LMS (exactly PEAR::Net_SMTP) 
	 will use the best supported method. Default: none.</para>
         <para>Example:     <prompt>smtp_auth_type = DIGEST-MD5</prompt></para>
     </listitem>
     <listitem>
         <para>gd_translate_to</para>
         <para>Charset of data that GD library expects (usefull if GD need ISO-8859-2 instead of UTF-8 to feed imagetext() function. Default: ISO-8859-2.</para>
         <para>Example:     <prompt>gd_translate_to = </prompt></para>
     </listitem>
     <listitem>
         <para>check_for_updates_period</para>
         <para>How often to check for LMS updates (in seconds). Default: 86400.</para>
         <para>Example:     <prompt>check_for_updates_period = 604800</prompt></para>
     </listitem>
     </itemizedlist>
	</sect2> 
        <sect2 id="install-config-finances">
	<title>Section [finances] - Finances Settings</title>
	<para>This section consist options for financial system and for payment
	forms. You can read more about that in Invoices chapter.
    	    <itemizedlist>
		<listitem>
		<para>suspension_percentage (optional)</para>
		<para>Percentage for suspended liabilities. Default: '0'</para>
		<para>Example:	<prompt>suspension_percentage = '50'</prompt></para>
		</listitem>
       	    </itemizedlist>
	</para>
	</sect2>
    </sect1>
    <sect1 id="install-rights">
      <title>Access rights</title>
      <sect2 id="install-rights-idea">
                <title>Idea</title>
      <para>In LMS you may define up to 256 rules to access the system. 
      Each can permit or deny access to defined modules. 
      Each user can have any combination of access rules assigned to his account.</para>
      <para>By default following access rules list is defined:
       <itemizedlist>
        <listitem><para>full access</para></listitem>
        <listitem><para>read only (excluding Helpdesk)</para></listitem>
        <listitem><para>nodes connection/disconnection</para></listitem>
        <listitem><para>finances management</para></listitem>
        <listitem><para>configuration reload</para></listitem>
        <listitem><para>customers management</para></listitem>
        <listitem><para>nodes management</para></listitem>
        <listitem><para>stats access</para></listitem>
        <listitem><para>mailing access</para></listitem>
        <listitem><para>Helpdesk (RT) administration</para></listitem>
        <listitem><para>Helpdesk (RT) operation</para></listitem>
        <listitem><para>accounts management</para></listitem>
        <listitem><para>UI configuration</para></listitem>
        <listitem><para>networks and devices management</para></listitem>
        <listitem><para>timetable management</para></listitem>
	<listitem><para>daemon management and configuration</para></listitem>
        <listitem><para>users edition and addition forbidden</para></listitem>
        <listitem><para>no access</para></listitem>
       </itemizedlist>
      Most of them grant access to modules and two denies. Modules that user
      has always access are: welcome, copyrights, logout, chpasswd 
      (chpasswd can change only own password), access to all others is defined by rules.</para>
      <note><para>If you don't define any access rule for user, then LMS defines
      0 rule for him, which mean: full access.</para></note>
      </sect2>
      <sect2 id="install-rights-how">
                <title>How does it work?</title>
          <para> Algorithm that decides whether user has access to given module or not is as following:
          <simplelist>
          <member>-  First of all: checking list of modules that user always has access.</member>
          <member>-  Next: checking if module match rules in each levels user has access to.</member>
          <member>-  Finally: Decision if user is permitted to access modules. If module 
          match to any level that denies access then access will be forbidden even if user has
          level that permits access to module. For example, if someone has full access and no access 
          to "add computer" module, then he won't able to access module.
          If module  matches level that permits access to module, then LMS will grant access to module, 
          but if module does not match at any level then no-access-message also will be printed.</member>
	  </simplelist>
          </para>
	</sect2>
	<sect2 id="install-rights-user">
      		<title>User-defined access rules</title>
		<para>Advanced users can define any additional access rules
		or redefine existing ones.  In order to do that you must make
		PHP script based on file <filename>lib/accesstable.php</filename>
		and place it in LMS's <filename>lib</filename> directory. Then 
		set option <filename>custom_accesstable</filename> in [phpui]
		section to created file name.</para>
		<para>In that way it's possible to define your own rules to allow
		or deny access for any modules. Module is a name of PHP file
		in <filename>modules</filename> directory, given without extension 
		in access rules. For example, it's possible to define
		rule for invoices display (e.g. for lms-sendinvoices script) 
		in the following way:
<screen>
&lt;?php
$access['table'][100]['name']      = 'invoices display';
$access['table'][100]['allow_reg'] = '^invoice$';
?&gt;
</screen>
		</para>
	</sect2>
    </sect1>
    <sect1 id="install-upgrade">
      <title>Upgrade</title>
      <para>Since version 1.5.4 LMS was released in polish language only. If you are upgrading
      read polish documentation for upgrade description. In newest versions upgrade is very easy.
      That process has two stages. First, overwrite old files with new ones and remove contents of
      <filename>templates_c</filename> directory (or better create new LMS directory tree). Second
      stage is a database structure change - it's self-executing process acting upon first login to
      the UI.</para>
    </sect1>
    <sect1 id="install-invoices">
	<title>Invoices</title>
                <para>It's possible to issue invoices in either automatic or manual way. Manual
                invoices creation is possible in 'New Invoice' module from 'Finances' menu.
                Automatic issue might be helpful while you have legal contracts with your users.
                In this case invoices are created by <filename>lms-payments</filename> script or
                <emphasis>almsd</emphasis> daemon.</para>
                <para>For proper work of printouts you need to setup custom options in
                <emphasis>[invoices]</emphasis> section of <filename>lms.ini</filename>:
		<itemizedlist>
		<listitem>
			<para>number_template</para>
                 <para>Invoice numbering pattern. Available variables: '%N' - successive number in year/month
                 format, '%M' - month number, '%Y' - year number (four digits). Default: %N/LMS/%Y</para>
			<para>Example: <prompt>number_template = %N/%Y</prompt></para>
		</listitem>
		<listitem>
			<para>monthly_numbering</para>
			<para>Enable this option when you need to reset invoice numbering on start of every month.
			Default: disabled</para>
			<para>Example: <prompt>monthly_numbering = 1</prompt></para>
		</listitem>
		<listitem>
			<para>header</para>
			<para>Seller. Can use string "\n" for lines separation. Default: empty.</para>
			<para>Example: <prompt>header = "SuperNet ISP\nNew Street 15\n12-000 City\n"</prompt></para>
		</listitem>
		<listitem>
			<para>footer</para>
                        <para>Invoice footer - e.g. contact information about seller. Footer will be placed at bottom
                        of an invoice, using small font. Like in header option use "\n" to separate lines. Default:
                        empty</para>
			<para>Example: <prompt>footer = "Internet Service Provider K-27, phone 555-23-23, etc."</prompt></para>
		</listitem>
		<listitem>
			<para>default_author</para>
			<para>Invoice issuer name. Default: empty</para>
			<para>Example: <prompt>default_author = "invoicing expert"</prompt></para>
		</listitem>
		<listitem>
			<para>cplace</para>
			<para>Invoice issue location (city). Default: empty.</para>
			<para>Example: <prompt>cplace = Warsaw</prompt></para>
		</listitem>
		</itemizedlist>
		Generated invoices can be viewed in two ways: by clicking on printer icon, in balance sheet page
		or by clicking 'Invoices List' in 'Finances' menu. In second case, is also possible to 
		filter invoices for printing.</para>
	    <sect2 id="install-invoices-html">
		<title>HTML</title>
		<para>Invoices are printed in html format by default
		using provided template. In <emphasis>[invoices]</emphasis> section
		you can also configure:
		<itemizedlist>
		<listitem>
			<para>template_file</para>
			<para>Invoice template, which should be placed in 
			<filename>templates</filename> directory. Default: invoice.html.</para>
			<para>Example: <prompt>template_file = invoice-mynet.html</prompt></para>
		</listitem>		
		<listitem>
			<para>content_type</para>
			<para>Invoice content-type. If you enter here 'application/octet-stream'
			then browser will ask to save file on disk, instead of displaying it.
			It's useful if you use your own template which generate eg. rtf or xls file.
			Default: 'text/html'</para>
			<para>Example: <prompt>content_type = application/octet-stream</prompt></para>
		</listitem>	
		<listitem>
			<para>attachment_name</para>
			<para>File name for saving finished invoice printout. WARNING: Setting attachment_name 
			with default content_type will (in case of MSIE) print invoice + prompt for save on 
			disk + bonus browser crash (6.0SP1 on WInXP).
			Default: empty.</para>
			<para>Example: <prompt>attachment_name = invoice.xls</prompt></para>
		</listitem>
		</itemizedlist>
		Generated invoice in HTML format consist of originals and copies, which are separated
		by CSS page-break markups, so every modern browser that supports CSS 
		should print many-page invoices correctly. This behavior was tested on
		Microsoft Internet Explorer 6.0, Opera 7.02 and Mozilla 1.3.</para>
		<para>
			<note><para>Almost every internet browser has printing 
			configuration, where functions like header and footer or URL 
			printing can be disabled.</para></note>
		</para>
	    </sect2>	
	    <sect2 id="install-invoices-pdf">
		<title>PDF</title>
                 <para>It's possible to create invoices as PDF files. Setting option <filename>type</filename> in
                 <emphasis>[invoices]</emphasis> section to 'pdf' will force invoice being created in PDF instead
                 of html. Option <filename>template_file</filename> has the same meaning, with one difference,
                 that it might take predefined values: 'standard' - basic invoice (invoice.html equivalent) and
                 'FT-0100' - invoice adjusted for printing on FT-0100 paper including payment form. You can set
                 <filename>template_file</filename> option for php file name, but this feature is meant for
                 advanced users as it requires you to create more complicated php file than the one used with html
                 invoices Smarty template.</para>
		<para>Data for payment form printouts is stored in <emphasis>[finances]</emphasis>
		section of <filename>lms.ini</filename> file. That is:
		<simplelist>
		    <member>name - seller name</member>
		    <member>shortname - short seller name</member>
		    <member>address - seller address</member>
		    <member>zip - seller postal code</member>
		    <member>city - seller city</member>
		    <member>account - banking account number</member>		
		</simplelist>
		</para>
	    </sect2>
    </sect1>
  </chapter>
