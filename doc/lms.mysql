# --------------------------------------------------------
# $Id$
# --------------------------------------------------------

SET FOREIGN_KEY_CHECKS = 0;

DROP TRIGGER IF EXISTS cash_customerbalances_delete_trigger;
DROP TRIGGER IF EXISTS cash_customerbalances_update_trigger;
DROP TRIGGER IF EXISTS cash_customerbalances_insert_trigger;

DROP VIEW IF EXISTS vnetworks;
DROP VIEW IF EXISTS customermailsview;
DROP VIEW IF EXISTS teryt_ulic;
DROP VIEW IF EXISTS teryt_simc;
DROP VIEW IF EXISTS teryt_terc;
DROP VIEW IF EXISTS customeraddressview;
DROP VIEW IF EXISTS contractorview;
DROP VIEW IF EXISTS customerview;
DROP VIEW IF EXISTS vaddresses;
DROP VIEW IF EXISTS vmacs;
DROP VIEW IF EXISTS vnodes;
DROP VIEW IF EXISTS vnodes_mac;
DROP VIEW IF EXISTS nas;
DROP VIEW IF EXISTS vusers;
DROP VIEW IF EXISTS vallusers;
DROP VIEW IF EXISTS vdivisions;
DROP VIEW IF EXISTS vnodetariffs_allsuspended;
DROP VIEW IF EXISTS vnodetariffs_tariffs;
DROP VIEW IF EXISTS vnodetariffs;
DROP VIEW IF EXISTS vnodealltariffs_nodes;
DROP VIEW IF EXISTS vnodealltariffs_tariffs;
DROP VIEW IF EXISTS vnodealltariffs;
DROP VIEW IF EXISTS customerconsentview;

DROP TABLE IF EXISTS up_info_changes;
DROP TABLE IF EXISTS up_help;
DROP TABLE IF EXISTS up_customers;
DROP TABLE IF EXISTS up_rights_assignments;
DROP TABLE IF EXISTS up_rights;
DROP TABLE IF EXISTS files;
DROP TABLE IF EXISTS filecontainers;
DROP TABLE IF EXISTS passwdhistory;
DROP TABLE IF EXISTS userassignments;
DROP TABLE IF EXISTS userdivisions;
DROP TABLE IF EXISTS usergroups;
DROP TABLE IF EXISTS rttemplatetypes;
DROP TABLE IF EXISTS rttemplatequeues;
DROP TABLE IF EXISTS templates;
DROP TABLE IF EXISTS logmessagedata;
DROP TABLE IF EXISTS logmessagekeys;
DROP TABLE IF EXISTS logmessages;
DROP TABLE IF EXISTS logtransactions;
DROP TABLE IF EXISTS managementurls;
DROP TABLE IF EXISTS nastypes;
DROP TABLE IF EXISTS messageitems;
DROP TABLE IF EXISTS messages;
DROP TABLE IF EXISTS excludedgroups;
DROP TABLE IF EXISTS customercontacts;
DROP TABLE IF EXISTS dbinfo;
DROP TABLE IF EXISTS ewx_pt_config;
DROP TABLE IF EXISTS cashreglog;
DROP TABLE IF EXISTS cashrights;
DROP TABLE IF EXISTS docrights;
DROP TABLE IF EXISTS daemonconfig;
DROP TABLE IF EXISTS daemoninstances;
DROP TABLE IF EXISTS sessions;
DROP TABLE IF EXISTS eventassignments;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS uiconfig;
DROP TABLE IF EXISTS aliasassignments;
DROP TABLE IF EXISTS aliases;
DROP TABLE IF EXISTS supermasters;
DROP TABLE IF EXISTS domainmetadata;
DROP TABLE IF EXISTS records;
DROP TABLE IF EXISTS passwd;
DROP TABLE IF EXISTS domains;
DROP TABLE IF EXISTS rtqueuecategories;
DROP TABLE IF EXISTS rtticketcategories;
DROP TABLE IF EXISTS rtcategoryusers;
DROP TABLE IF EXISTS rtcategories;
DROP TABLE IF EXISTS rtattachments;
DROP TABLE IF EXISTS rtrights;
DROP TABLE IF EXISTS rtmessages;
DROP TABLE IF EXISTS rtticketlastview;
DROP TABLE IF EXISTS rttickets;
DROP TABLE IF EXISTS rtqueues;
DROP TABLE IF EXISTS netlinks;
DROP TABLE IF EXISTS stats;
DROP TABLE IF EXISTS nodesessions;
DROP TABLE IF EXISTS customerassignments;
DROP TABLE IF EXISTS customergroups;
DROP TABLE IF EXISTS numberplanassignments;
DROP TABLE IF EXISTS payments;
DROP TABLE IF EXISTS promotionassignments;
DROP TABLE IF EXISTS promotionschemas;
DROP TABLE IF EXISTS promotions;
DROP TABLE IF EXISTS tariffassignments;
DROP TABLE IF EXISTS tarifftags;
DROP TABLE IF EXISTS nodeassignments;
DROP TABLE IF EXISTS nodegroupassignments;
DROP TABLE IF EXISTS nodegroups;
DROP TABLE IF EXISTS macs;
DROP TABLE IF EXISTS nodelocks;
DROP TABLE IF EXISTS ewx_stm_nodes;
DROP TABLE IF EXISTS nodes;
DROP TABLE IF EXISTS netradiosectors;
DROP TABLE IF EXISTS netdevices;
DROP TABLE IF EXISTS netdevicemodels;
DROP TABLE IF EXISTS netdeviceproducers;
DROP TABLE IF EXISTS netnodes;
DROP TABLE IF EXISTS invprojects;
DROP TABLE IF EXISTS networks;
DROP TABLE IF EXISTS hosts;
DROP TABLE IF EXISTS ewx_stm_channels;
DROP TABLE IF EXISTS ewx_channels;
DROP TABLE IF EXISTS pna;
DROP TABLE IF EXISTS cash;
DROP TABLE IF EXISTS cashimport;
DROP TABLE IF EXISTS sourcefiles;
DROP TABLE IF EXISTS cashsources;
DROP TABLE IF EXISTS debitnotecontents;
DROP TABLE IF EXISTS invoicecontents;
DROP TABLE IF EXISTS voip_number_assignments;
DROP TABLE IF EXISTS assignments;
DROP TABLE IF EXISTS liabilities;
DROP TABLE IF EXISTS voip_emergency_numbers;
DROP TABLE IF EXISTS voip_pool_numbers;
DROP TABLE IF EXISTS voip_numbers;
DROP TABLE IF EXISTS tariffs;
DROP TABLE IF EXISTS voip_price_groups;
DROP TABLE IF EXISTS voip_cdr;
DROP TABLE IF EXISTS voip_prefixes;
DROP TABLE IF EXISTS voip_rule_states;
DROP TABLE IF EXISTS voip_tariffs;
DROP TABLE IF EXISTS voip_rules;
DROP TABLE IF EXISTS voip_prefix_groups;
DROP TABLE IF EXISTS voip_rule_groups;
DROP TABLE IF EXISTS voipaccounts;
DROP TABLE IF EXISTS taxes;
DROP TABLE IF EXISTS receiptcontents;
DROP TABLE IF EXISTS cashregs;
DROP TABLE IF EXISTS documentattachments;
DROP TABLE IF EXISTS documentcontents;
DROP TABLE IF EXISTS documents;
DROP TABLE IF EXISTS customer_addresses;
DROP TABLE IF EXISTS zipcodes;
DROP TABLE IF EXISTS states;
DROP TABLE IF EXISTS numberplans;
DROP TABLE IF EXISTS customernotes;
DROP TABLE IF EXISTS customerconsents;
DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS divisions;
DROP TABLE IF EXISTS addresses;
DROP TABLE IF EXISTS location_buildings;
DROP TABLE IF EXISTS location_streets;
DROP TABLE IF EXISTS location_street_types;
DROP TABLE IF EXISTS location_cities;
DROP TABLE IF EXISTS location_boroughs;
DROP TABLE IF EXISTS location_districts;
DROP TABLE IF EXISTS location_states;
DROP TABLE IF EXISTS countries;
DROP TABLE IF EXISTS twofactorauthcodehistory;
DROP TABLE IF EXISTS twofactorauthtrusteddevices;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS customerbalances;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS cryptokeys;
DROP TABLE IF EXISTS tsigkeys;

SET FOREIGN_KEY_CHECKS = 1;
SET SESSION sql_mode   = '';

# --------------------------------------------------------
#
# Structure of table  users
#

CREATE TABLE users (
  id int(11)            NOT NULL auto_increment,
  login varchar(32)     NOT NULL DEFAULT '',
  firstname varchar(64) NOT NULL DEFAULT '',
  lastname varchar(64) NOT NULL DEFAULT '',
  email varchar(255)    NOT NULL DEFAULT '',
  phone varchar(32)     DEFAULT NULL,
  position varchar(255) NOT NULL DEFAULT '',
  rights text           NOT NULL DEFAULT '',
  hosts varchar(255)    NOT NULL DEFAULT '',
  passwd varchar(255)   NOT NULL DEFAULT '',
  passwdforcechange smallint NOT NULL DEFAULT 0,
  ntype smallint        DEFAULT NULL,
  lastlogindate int(11) NOT NULL DEFAULT '0',
  lastloginip varchar(16) NOT NULL DEFAULT '',
  failedlogindate int(11) NOT NULL DEFAULT '0',
  failedloginip varchar(16) NOT NULL DEFAULT '',
  deleted tinyint(1)    NOT NULL DEFAULT '0',
  passwdexpiration int(11) NOT NULL DEFAULT '0',
  passwdlastchange int(11) NOT NULL DEFAULT '0',
  access tinyint(1) NOT NULL DEFAULT '1',
  accessfrom int(11) NOT NULL DEFAULT '0',
  accessto int(11) NOT NULL DEFAULT '0',
  settings mediumtext NOT NULL DEFAULT '',
  persistentsettings mediumtext NOT NULL DEFAULT '',
  twofactorauth smallint NOT NULL DEFAULT 0,
  twofactorauthsecretkey varchar(255) DEFAULT NULL,
  PRIMARY KEY  (id),
  UNIQUE KEY login (login)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table twofactorauthcodehistory
#

CREATE TABLE twofactorauthcodehistory (
    id int(11) NOT NULL auto_increment,
    userid int(11) NOT NULL,
    authcode varchar(10) NOT NULL,
    uts int(11) NOT NULL,
    ipaddr int(16) DEFAULT NULL,
    success smallint NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    CONSTRAINT twofactorauthcodehistory_userid_fkey
        FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table twofactorauthtrusteddevices
#

CREATE TABLE twofactorauthtrusteddevices (
    id         int(11)      NOT NULL auto_increment,
    userid     int(11)      NOT NULL,
    cookiename varchar(64)  NOT NULL,
    useragent  varchar(256) NOT NULL,
    ipaddr int(16) DEFAULT NULL,
    expires    int(11)      NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT twofactorauthtrusteddevices_userid_fkey
        FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table countries
#
CREATE TABLE countries (
	id 		int(11) 	NOT NULL auto_increment,
	name 		varchar(255) 	NOT NULL DEFAULT '',
	ccode   varchar(5),
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table location_states
#
CREATE TABLE location_states (
	id int(11)          NOT NULL auto_increment,
	ident varchar(8)    NOT NULL, -- TERYT: WOJ
	name varchar(64)    NOT NULL, -- TERYT: NAZWA
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table location_districts
#
CREATE TABLE location_districts (
	id int(11)          NOT NULL auto_increment,
	name varchar(64)    NOT NULL, -- TERYT: NAZWA
	ident varchar(8)    NOT NULL, -- TERYT: POW
	stateid int(11)     NOT NULL,  -- TERYT: WOJ
	PRIMARY KEY (id),
	UNIQUE KEY stateid (stateid, name),
	FOREIGN KEY (stateid) REFERENCES location_states (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table location_boroughs
#
CREATE TABLE location_boroughs (
	id int(11)          NOT NULL auto_increment,
	name varchar(64)    NOT NULL, -- TERYT: NAZWA
	ident varchar(8)    NOT NULL, -- TERYT: GMI
	districtid int(11)  NOT NULL,
	type smallint       NOT NULL, -- TERYT: RODZ
	PRIMARY KEY (id),
	UNIQUE KEY districtid (districtid, name, type),
	FOREIGN KEY (districtid) REFERENCES location_districts (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table location_cities
#
CREATE TABLE location_cities (
	id int(11)          NOT NULL auto_increment,
	ident varchar(8)    NOT NULL, -- TERYT: SYM / SYMPOD
	name varchar(64)    NOT NULL, -- TERYT: NAZWA
	cityid int(11)      DEFAULT NULL,
	boroughid int(11)   DEFAULT NULL,
	PRIMARY KEY (id),
	INDEX cityid (cityid),
	INDEX boroughid (boroughid, name),
	FOREIGN KEY (boroughid) REFERENCES location_boroughs (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table location_street_types
#
CREATE TABLE location_street_types (
	id int(11)          NOT NULL auto_increment,
	name varchar(8)     NOT NULL, -- TERYT: CECHA
	PRIMARY KEY (id)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table location_streets
#
CREATE TABLE location_streets (
	id int(11)          NOT NULL auto_increment,
	name varchar(128)   NOT NULL, -- TERYT: NAZWA_1
	name2 varchar(128)  DEFAULT NULL, -- TERYT: NAZWA_2
	ident varchar(8)    NOT NULL, -- TERYT: SYM_UL
	typeid int(11)      DEFAULT NULL,
	cityid int(11)      NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (cityid, name, ident),
	FOREIGN KEY (typeid) REFERENCES location_street_types (id) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (cityid) REFERENCES location_cities (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table location_buildings
#
CREATE TABLE location_buildings (
	id           int(11) auto_increment,
	city_id      int(11) NOT NULL,
	street_id    int(11) NULL,
	building_num varchar(20) NULL,
	latitude     numeric(10,6) NULL,
	longitude    numeric(10,6) NULL,
	updated      smallint DEFAULT 0,
	PRIMARY KEY (id),
	CONSTRAINT location_buildings_city_id_fkey
		FOREIGN KEY (city_id) REFERENCES location_cities (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT location_buildings_street_id_fkey
		FOREIGN KEY (street_id) REFERENCES location_streets (id) ON DELETE CASCADE ON UPDATE CASCADE,
	INDEX location_cityid_index (city_id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table addresses
#
CREATE TABLE addresses (
	id         int(11) NOT NULL auto_increment,
	name       text NULL,
	state      varchar(64) NULL,
	state_id   int(11) NULL,
	city       varchar(100) NULL,
	city_id    int(11) NULL,
	postoffice varchar(32) DEFAULT NULL,
	street     varchar(255) NULL,
	street_id  int(11) NULL,
	zip        varchar(10) NULL,
	country_id int(11) NULL,
	house      varchar(20) NULL,
	flat       varchar(20) NULL,
	PRIMARY KEY (id),
	CONSTRAINT `addresses_state_id_fk`   FOREIGN KEY (state_id)   REFERENCES location_states  (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT `addresses_city_id_fk`    FOREIGN KEY (city_id)    REFERENCES location_cities  (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT `addresses_street_id_fk`  FOREIGN KEY (street_id)  REFERENCES location_streets (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT `addresses_country_id_fk` FOREIGN KEY (country_id) REFERENCES countries        (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table divisions
#
CREATE TABLE divisions (
	id 		int(11) 	NOT NULL auto_increment,
	shortname       varchar(255) 	NOT NULL DEFAULT '',
	name        	text    	NOT NULL DEFAULT '',
	ten		varchar(50)	NOT NULL DEFAULT '',
	regon		varchar(255)	NOT NULL DEFAULT '',
	rbe			varchar(255)	NOT NULL DEFAULT '',
	rbename		varchar(255)	NOT NULL DEFAULT '',
	telecomnumber varchar(255)    NOT NULL DEFAULT '',
	bank            varchar(100)    DEFAULT NULL,
	account         varchar(48) 	NOT NULL DEFAULT '',
    email varchar(255)              DEFAULT NULL,
	inv_header      text    	NOT NULL DEFAULT '',
	inv_footer      text    	NOT NULL DEFAULT '',
	inv_author      text    	NOT NULL DEFAULT '',
	inv_cplace      text    	NOT NULL DEFAULT '',
	inv_paytime 	smallint         DEFAULT NULL,
	inv_paytype 	smallint    DEFAULT NULL,
	description     text    	NOT NULL DEFAULT '',
	status 		tinyint(1) 	NOT NULL DEFAULT 0,
	tax_office_code varchar(8) DEFAULT NULL,
	address_id int(11),
	PRIMARY KEY (id),
	UNIQUE KEY shortname (shortname),
	CONSTRAINT `divisions_address_id_fk` FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customers (customers)
#
CREATE TABLE customers (
  id int(11) 		NOT NULL auto_increment,
  extid varchar(32)	NOT NULL DEFAULT '',
  lastname varchar(128) NOT NULL DEFAULT '',
  name varchar(128) 	NOT NULL DEFAULT '',
  status smallint 	NOT NULL DEFAULT '0',
  type smallint		NOT NULL DEFAULT '0',
  ten varchar(50) 	NOT NULL DEFAULT '',
  ssn varchar(50) 	NOT NULL DEFAULT '',
  regon varchar(255) 	NOT NULL DEFAULT '',
  rbe varchar(255)	NOT NULL DEFAULT '',
  rbename varchar(255)	NOT NULL DEFAULT '',
  icn varchar(255) 	NOT NULL DEFAULT '',
  info text 		NOT NULL,
  notes text 		NOT NULL DEFAULT '',
  creationdate int(11) 	NOT NULL DEFAULT '0',
  moddate int(11) 	NOT NULL DEFAULT '0',
  creatorid int(11) DEFAULT NULL,
  modid int(11) 	DEFAULT NULL,
  deleted tinyint(1) 	NOT NULL DEFAULT '0',
  message text 		NOT NULL,
  pin varchar(255)	NOT NULL DEFAULT '0',
  cutoffstop int(11) 	NOT NULL DEFAULT '0',
  divisionid int(11)   	DEFAULT NULL,
  paytime smallint	NOT NULL DEFAULT '-1',
  paytype smallint  DEFAULT NULL,
  documentmemo text DEFAULT NULL,
  PRIMARY KEY  (id),
  INDEX name (lastname, name),
  CONSTRAINT customers_creatorid_fkey
		FOREIGN KEY (creatorid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT customers_modid_fkey
		FOREIGN KEY (modid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT customers_divisionid_fkey
		FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customerconsents (customerconsents)
#
CREATE TABLE customerconsents (
    customerid int(11) NOT NULL,
    cdate int(11) DEFAULT 0 NOT NULL,
    type smallint NOT NULL,
    CONSTRAINT customerconsents_customerid_fkey
        FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE,
    KEY customerconsents_cdate_idx (cdate),
    KEY customerconsents_type_idx (type),
    UNIQUE KEY customerconsents_ukey (customerid, type)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customernotes (customernotes)
#
CREATE TABLE customernotes (
    id int(11) NOT NULL auto_increment,
    userid int(11) DEFAULT NULL,
    customerid int(11) NOT NULL,
    dt int(11) NOT NULL,
    message text NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT customernotes_userid_fkey
        FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT customernotes_customerid_fkey
        FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
);

# --------------------------------------------------------
#
# Structure of table numberplans
#
CREATE TABLE numberplans (
	id int(11) NOT NULL auto_increment,
	template varchar(255) NOT NULL DEFAULT '',
	period smallint NOT NULL DEFAULT '0',
	doctype int(11) NOT NULL DEFAULT '0',
	isdefault tinyint(1) NOT NULL DEFAULT '0',
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table states
#
CREATE TABLE states (
	id 		int(11) 	NOT NULL auto_increment,
	name 		varchar(255) 	NOT NULL DEFAULT '',
	description 	text 		NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table zipcodes
#
CREATE TABLE zipcodes (
    	id 		int(11) 	NOT NULL auto_increment,
	zip 		varchar(10) 	NOT NULL DEFAULT '',
	stateid 	int(11) 	DEFAULT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY zip (zip),
	INDEX stateid (stateid),
	CONSTRAINT zipcodes_stateid_fkey
		FOREIGN KEY (stateid) REFERENCES states (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customer_addresses
#
CREATE TABLE customer_addresses (
	id          int(11) NOT NULL auto_increment,
	customer_id int(11),
	address_id  int(11),
	type        smallint NULL,
	PRIMARY KEY (id),
	CONSTRAINT `customer_addresses_customer_id_fkey` FOREIGN KEY (customer_id) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `customer_addresses_address_id_fk`  FOREIGN KEY (address_id)  REFERENCES addresses (id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE(customer_id, address_id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table documents
#
CREATE TABLE documents (
	id int(11) NOT NULL auto_increment,
	type tinyint NOT NULL DEFAULT '0',
	number int(11) NOT NULL DEFAULT '0',
	numberplanid int(11) DEFAULT NULL,
	extnumber varchar(255) NOT NULL DEFAULT '',
	cdate int(11) NOT NULL DEFAULT '0',
	sdate int(11) NOT NULL DEFAULT '0',
	customerid int(11) DEFAULT NULL,
	userid int(11) DEFAULT NULL,
	divisionid int(11) DEFAULT NULL,
	name varchar(255) NOT NULL DEFAULT '',
	address varchar(255) NOT NULL DEFAULT '',
	zip varchar(10) NULL DEFAULT NULL,
	city varchar(100) NULL DEFAULT NULL,
	countryid int(11) DEFAULT NULL,
	ten varchar(50) NOT NULL DEFAULT '',
	ssn varchar(50) NOT NULL DEFAULT '',
	paytime smallint NOT NULL DEFAULT '0',
	paytype smallint DEFAULT NULL,
	splitpayment smallint NOT NULL DEFAULT 0,
	closed tinyint(1) NOT NULL DEFAULT '0',
	reference int(11) DEFAULT NULL,
	reason varchar(255) NOT NULL DEFAULT '',
	div_name text NOT NULL DEFAULT '',
	div_shortname text NOT NULL DEFAULT '',
	div_address varchar(255) NOT NULL DEFAULT '',
	div_city varchar(255) NOT NULL DEFAULT '',
	div_zip varchar(255) NOT NULL DEFAULT '',
	div_countryid int(11) DEFAULT NULL,
	div_ten varchar(255) NOT NULL DEFAULT '',
	div_regon varchar(255) NOT NULL DEFAULT '',
	div_bank varchar(100) DEFAULT NULL,
	div_account varchar(48) NOT NULL DEFAULT '',
	div_inv_header text NOT NULL DEFAULT '',
	div_inv_footer text NOT NULL DEFAULT '',
	div_inv_author text NOT NULL DEFAULT '',
	div_inv_cplace text NOT NULL DEFAULT '',
	fullnumber varchar(50) DEFAULT NULL,
	cancelled smallint DEFAULT 0 NOT NULL,
	published tinyint(1) NOT NULL DEFAULT 0,
	comment text DEFAULT NULL,
	cuserid int(11) DEFAULT NULL,
	recipient_address_id int(11),
	post_address_id int(11),
	template varchar(255) DEFAULT NULL,
	commitflags tinyint(1) NOT NULL DEFAULT 0,
	archived tinyint(1) NOT NULL DEFAULT 0,
	auserid int(11) DEFAULT NULL,
	adate int(11) DEFAULT 0 NOT NULL,
    currency varchar(3),
    currencyvalue decimal(17,10) DEFAULT 1.0,
	senddate int(11) NOT NULL DEFAULT '0',
	memo text DEFAULT NULL,
    confirmdate int(11) NOT NULL DEFAULT 0,
    flags smallint DEFAULT 0 NOT NULL,
    PRIMARY KEY (id),
	INDEX cdate (cdate),
	INDEX numberplanid (numberplanid),
	INDEX customerid (customerid),
	INDEX closed (closed),
	INDEX reference (reference),
	CONSTRAINT documents_recipient_address_id_fkey
	FOREIGN KEY (recipient_address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_post_address_id_fkey
		FOREIGN KEY (post_address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_customerid_fkey
	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_userid_fkey
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_cuserid_fkey
	FOREIGN KEY (cuserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_auserid_fkey
	FOREIGN KEY (auserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_numberplanid_fkey
	FOREIGN KEY (numberplanid) REFERENCES numberplans (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_divisionid_fkey
	FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_countryid_fkey
	FOREIGN KEY (countryid) REFERENCES countries (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_reference_fkey
	FOREIGN KEY (reference) REFERENCES documents (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT documents_div_countryid_fkey
	FOREIGN KEY (div_countryid) REFERENCES countries (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table documentcontents
#
CREATE TABLE documentcontents (
	docid int(11) NOT NULL,
	title text DEFAULT '' NOT NULL,
	fromdate int(11) DEFAULT '0' NOT NULL,
	todate int(11) DEFAULT '0' NOT NULL,
	description text DEFAULT '' NOT NULL,
	INDEX fromdate (fromdate),
	INDEX todate (todate),
	UNIQUE KEY docid (docid),
	FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table documentattachments
#
CREATE TABLE documentattachments (
	id int(11) NOT NULL AUTO_INCREMENT,
	docid int(11) NOT NULL,
	filename varchar(255) NOT NULL,
	contenttype varchar(255) NOT NULL,
	md5sum varchar(32) NOT NULL,
    type smallint DEFAULT 1 NOT NULL,
    cdate integer NOT NULL DEFAULT 0,
	PRIMARY KEY (id),
	INDEX md5sum (md5sum),
	UNIQUE KEY docid (docid, md5sum),
	FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table cashregs
#
CREATE TABLE cashregs (
	id int(11)              NOT NULL auto_increment,
	name varchar(255)       DEFAULT '' NOT NULL,
	description text        DEFAULT '' NOT NULL,
	in_numberplanid int(11) DEFAULT NULL,
	out_numberplanid int(11) DEFAULT NULL,
	disabled tinyint(1)     DEFAULT '0' NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY name (name),
	CONSTRAINT cashregs_in_numberplanid_fkey
		FOREIGN KEY (in_numberplanid) REFERENCES numberplans (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT cashregs_out_numberplanid_fkey
		FOREIGN KEY (out_numberplanid) REFERENCES numberplans (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table receiptcontents
#
CREATE TABLE receiptcontents (
	docid int(11) 		NOT NULL,
	itemid 			TINYINT NOT NULL DEFAULT '0',
	value decimal(9,2) 	NOT NULL DEFAULT '0',
	description text 	NOT NULL DEFAULT '',
	regid int(11)		DEFAULT NULL,
	INDEX docid (docid),
	INDEX regid (regid),
	CONSTRAINT receiptcontents_docid_fkey
		FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT receiptcontents_regid_fkey
		FOREIGN KEY (regid) REFERENCES cashregs (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table taxes
#
CREATE TABLE taxes (
	id int(11) NOT NULL auto_increment,
	value decimal(4,2) NOT NULL DEFAULT '0',
	taxed tinyint NOT NULL DEFAULT '0',
	label varchar(16) NOT NULL DEFAULT '',
	validfrom int(11) NOT NULL DEFAULT '0',
	validto int(11) NOT NULL DEFAULT '0',
	reversecharge tinyint(1) NOT NULL DEFAULT '0',
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voipaccounts
#
CREATE TABLE voipaccounts (
	id 		        int(11) 	  NOT NULL auto_increment,
	ownerid 	    int(11) 	  DEFAULT NULL,
	login		    varchar(255)  NOT NULL DEFAULT '',
	passwd		    varchar(255)  NOT NULL DEFAULT '',
	access          tinyint(1)    NOT NULL DEFAULT '1',
	creationdate	int(11)		  NOT NULL DEFAULT 0,
	moddate		    int(11)		  NOT NULL DEFAULT 0,
	creatorid	    int(11)		  DEFAULT NULL,
	modid		    int(11)		  DEFAULT NULL,
	balance			decimal(12,5) NOT NULL DEFAULT 0,
	flags			smallint      NOT NULL DEFAULT 0,
	cost_limit		decimal(12,2) NULL DEFAULT NULL,
	address_id      int(11)       NULL DEFAULT NULL,
    description text NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	CONSTRAINT voipaccounts_address_id_fkey
		FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT voipaccounts_ownerid_fkey
		FOREIGN KEY (ownerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT voipaccounts_creatorid_fkey
		FOREIGN KEY (creatorid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT voipaccounts_modid_fkey
		FOREIGN KEY (modid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_rule_groups
#
CREATE TABLE voip_rule_groups (
	id integer NOT NULL AUTO_INCREMENT,
	name text NOT NULL,
	description text NULL,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_prefix_groups
#
CREATE TABLE voip_prefix_groups (
	id int(11) AUTO_INCREMENT,
	name text NOT NULL,
	description text NULL,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_rules
#
CREATE TABLE voip_rules (
	id              integer NOT NULL AUTO_INCREMENT,
	rule_group_id   integer NOT NULL,
	prefix_group_id integer NOT NULL,
	settings        text    NULL,
	FOREIGN KEY (rule_group_id)   REFERENCES voip_rule_groups(id)   ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (prefix_group_id) REFERENCES voip_prefix_groups(id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_tariffs
#
CREATE TABLE voip_tariffs (
	id          int(11)      NOT NULL AUTO_INCREMENT,
	name        varchar(100) NOT NULL,
	description text         NULL DEFAULT NULL,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_rule_states
#
CREATE TABLE voip_rule_states (
	id              int(11) NOT NULL AUTO_INCREMENT,
	voip_account_id int(11) NOT NULL
		REFERENCES voipaccounts (id) ON DELETE CASCADE ON UPDATE CASCADE,
	rule_id         int(11) NOT NULL
		REFERENCES voip_rules (id) ON DELETE CASCADE ON UPDATE CASCADE,
	units_left      int(11) NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(voip_account_id, rule_id)
);

# --------------------------------------------------------
#
# Structure of table voip_prefixes
#
CREATE TABLE voip_prefixes (
	id int(11) AUTO_INCREMENT,
	prefix varchar(30) NOT NULL,
	groupid int(11) NOT NULL,
	UNIQUE (prefix, groupid),
	FOREIGN KEY (groupid) REFERENCES voip_prefix_groups(id) ON DELETE CASCADE,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_cdr
#
CREATE TABLE voip_cdr (
	id int(11) AUTO_INCREMENT,
	caller              varchar(20)   NOT NULL,
	callee              varchar(20)   NOT NULL,
	call_start_time     int(11)       NOT NULL,
	totaltime           int(11)       NOT NULL,
	billedtime          int(11)       NOT NULL,
	price               decimal(12,5) NOT NULL,
	status              smallint      NOT NULL,
	type                smallint      NOT NULL,
	callervoipaccountid int(11)       NULL,
	calleevoipaccountid int(11)       NULL,
	caller_flags        smallint      NOT NULL DEFAULT '0',
	callee_flags        smallint      NOT NULL DEFAULT '0',
	caller_prefix_group varchar(100)  NULL,
	callee_prefix_group varchar(100)  NULL,
	uniqueid            varchar(20)   NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (uniqueid),
	FOREIGN KEY (callervoipaccountid) REFERENCES voipaccounts(id) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (calleevoipaccountid) REFERENCES voipaccounts(id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_price_groups
#
CREATE TABLE voip_price_groups (
	id              int(11)       NOT NULL AUTO_INCREMENT,
	voip_tariff_id  int(11)       NOT NULL,
	prefix_group_id int(11)       NOT NULL,
	price           decimal(12,5) DEFAULT 0 NOT NULL,
	unitsize        smallint      DEFAULT 0 NOT NULL,
	FOREIGN KEY (voip_tariff_id)  REFERENCES voip_tariffs(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (prefix_group_id) REFERENCES voip_prefix_groups(id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table tariffs
#
CREATE TABLE tariffs (
	id int(11) 		NOT NULL auto_increment,
	name varchar(255) 	NOT NULL DEFAULT '',
	type tinyint 		NOT NULL DEFAULT '1',
	value decimal(9,2) 	NOT NULL DEFAULT '0',
    splitpayment smallint NOT NULL DEFAULT 0,
    taxcategory smallint DEFAULT 0 NOT NULL,
	taxid int(11) 	NOT NULL,
	numberplanid integer DEFAULT NULL,
	period smallint   DEFAULT NULL,
	prodid varchar(255) 	NOT NULL DEFAULT '',
	uprate int(11) 	NOT NULL DEFAULT '0',
	upceil int(11) 	NOT NULL DEFAULT '0',
	downrate int(11) 	NOT NULL DEFAULT '0',
	downceil int(11) 	NOT NULL DEFAULT '0',
	down_burst_time smallint DEFAULT 0 NOT NULL,
	down_burst_limit int(11) DEFAULT 0 NOT NULL,
	down_burst_threshold int(11) DEFAULT 0 NOT NULL,
	up_burst_time smallint DEFAULT 0 NOT NULL,
	up_burst_limit int(11) DEFAULT 0 NOT NULL,
	up_burst_threshold int(11) DEFAULT 0 NOT NULL,
	climit int(11) 	NOT NULL DEFAULT '0',
	plimit int(11) 	NOT NULL DEFAULT '0',
	dlimit int(11) 	NOT NULL DEFAULT '0',
	uprate_n int(11)        	DEFAULT NULL,
	upceil_n int(11)        	DEFAULT NULL,
	downrate_n int(11)      	DEFAULT NULL,
	downceil_n int(11)     	DEFAULT NULL,
	down_burst_time_n smallint DEFAULT NULL,
	down_burst_limit_n int(11) DEFAULT NULL,
	down_burst_threshold_n int(11) DEFAULT NULL,
	up_burst_time_n smallint DEFAULT NULL,
	up_burst_limit_n int(11) DEFAULT NULL,
	up_burst_threshold_n int(11) DEFAULT NULL,
	climit_n int(11)      	DEFAULT NULL,
	plimit_n int(11)        	DEFAULT NULL,
	domain_limit int(11)  	DEFAULT NULL,
	alias_limit int(11)		DEFAULT NULL,
	sh_limit int(11)      	DEFAULT NULL,
	www_limit int(11)     	DEFAULT NULL,
	mail_limit int(11)    	DEFAULT NULL,
	ftp_limit int(11)     	DEFAULT NULL,
	sql_limit int(11)     	DEFAULT NULL,
	cloud_limit int(11)     	DEFAULT NULL,
	quota_sh_limit int(11)  	DEFAULT NULL,
	quota_www_limit int(11) 	DEFAULT NULL,
	quota_mail_limit int(11) 	DEFAULT NULL,
	quota_ftp_limit int(11) 	DEFAULT NULL,
	quota_sql_limit int(11) 	DEFAULT NULL,
	quota_cloud_limit int(11) 	DEFAULT NULL,
	description text 	NOT NULL,
	disabled tinyint  NOT NULL DEFAULT '0',
	voip_tariff_id      int(11) DEFAULT NULL,
	voip_tariff_rule_id int(11) DEFAULT NULL,
	datefrom            int(11) NOT NULL DEFAULT '0',
	dateto              int(11) NOT NULL DEFAULT '0',
	authtype tinyint(1) NOT NULL DEFAULT '0',
    currency varchar(3),
	PRIMARY KEY  (id),
	UNIQUE KEY tariffs_name_key (name, value, currency, period),
	INDEX type (type),
	FOREIGN KEY (numberplanid)        REFERENCES numberplans  (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (voip_tariff_id)      REFERENCES voip_tariffs (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT tariffs_voip_tariff_rule_id_fkey
		FOREIGN KEY (voip_tariff_rule_id) REFERENCES voip_rule_groups (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT tariffs_taxid_fkey
		FOREIGN KEY (taxid) REFERENCES taxes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_numbers
#
CREATE TABLE voip_numbers (
	id int(11) AUTO_INCREMENT,
	voip_account_id int(11) NOT NULL,
	phone varchar(20) NOT NULL,
	number_index smallint NULL,
	tariff_id int(11),
	UNIQUE(phone),
	UNIQUE(voip_account_id, number_index),
	FOREIGN KEY (voip_account_id) REFERENCES voipaccounts (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (tariff_id)       REFERENCES tariffs (id)      ON DELETE SET NULL ON UPDATE CASCADE,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_pool_numbers
#
CREATE TABLE voip_pool_numbers (
	id int(11) NOT NULL AUTO_INCREMENT ,
	disabled smallint DEFAULT 0,
	name varchar(30) NOT NULL,
	poolstart varchar(20) NOT NULL,
	poolend varchar(20) NOT NULL,
	description text,
	type smallint NOT NULL DEFAULT 1,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_emergency_numbers
#
CREATE TABLE voip_emergency_numbers (
	location_borough int(11) NOT NULL,
	number int(11) NOT NULL,
	fullnumber varchar(20) NOT NULL,
	INDEX voip_emergency_numbers_number_idx (number),
	UNIQUE KEY number (location_borough, number),
	FOREIGN KEY (location_borough) REFERENCES location_boroughs (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

#--------------------------------------------------------
#
# Structure of table liabilities
#
CREATE TABLE liabilities (
	id int(11)              NOT NULL auto_increment,
	value decimal(9,2)      NOT NULL DEFAULT '0',
    splitpayment smallint NOT NULL DEFAULT 0,
    taxcategory smallint DEFAULT 0 NOT NULL,
	currency varchar(3),
	name text               NOT NULL DEFAULT '',
	taxid int(11)           NOT NULL,
	prodid varchar(255)     NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	CONSTRAINT liabilities_taxid_fkey
		FOREIGN KEY (taxid) REFERENCES taxes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  assignments
#
CREATE TABLE assignments (
	id int(11) NOT NULL auto_increment,
	tariffid int(11) DEFAULT NULL,
	liabilityid int(11) DEFAULT NULL,
	customerid int(11) NOT NULL,
	period smallint NOT NULL DEFAULT '0',
    backwardperiod smallint NOT NULL DEFAULT 0,
    at int(11) NOT NULL DEFAULT '0',
	datefrom int(11) NOT NULL DEFAULT '0',
	dateto int(11) NOT NULL DEFAULT '0',
	invoice tinyint(1) NOT NULL DEFAULT '0',
	suspended tinyint(1) NOT NULL DEFAULT '0',
	settlement tinyint(1) NOT NULL DEFAULT '0',
	pdiscount decimal(4,2) NOT NULL DEFAULT '0',
	vdiscount decimal(9,2) NOT NULL DEFAULT '0',
	paytype smallint DEFAULT NULL,
	numberplanid int(11) DEFAULT NULL,
	attribute varchar(255) DEFAULT NULL,
	recipient_address_id int(11),
	docid int(11) DEFAULT NULL,
	commited tinyint(1) NOT NULL DEFAULT '1',
	separatedocument tinyint(1) NOT NULL DEFAULT 0,
	count numeric(9,3) DEFAULT 1 NOT NULL,
    PRIMARY KEY (id),
	INDEX tariffid (tariffid),
	INDEX customerid (customerid),
	INDEX numberplanid (numberplanid),
	CONSTRAINT assignments_customerid_fkey
		FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT assignments_numberplanid
		FOREIGN KEY (numberplanid) REFERENCES numberplans (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT assignments_recipient_address_id_fkey
		FOREIGN KEY (recipient_address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT assignments_docid_fkey
		FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT assignments_tariffid_fkey
		FOREIGN KEY (tariffid) REFERENCES tariffs (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT assignments_liabilityid_fkey
		FOREIGN KEY (liabilityid) REFERENCES liabilities (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table voip_number_assignments
#
CREATE TABLE voip_number_assignments (
	id            int(11) NOT NULL auto_increment,
	number_id     int(11) NOT NULL,
	assignment_id int(11) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT voip_number_assignments_assignment_id
		UNIQUE KEY (assignment_id, number_id),
	FOREIGN KEY (number_id)     REFERENCES voip_numbers (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (assignment_id) REFERENCES assignments  (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  invoicecontents
#
CREATE TABLE invoicecontents (
	docid int(11) NOT NULL,
	itemid smallint NOT NULL DEFAULT '0',
	value decimal(12,5) NOT NULL DEFAULT '0',
	pdiscount decimal(4,2) NOT NULL DEFAULT '0',
	vdiscount decimal(9,2) NOT NULL DEFAULT '0',
	taxid int(11) NOT NULL,
	prodid varchar(255) NOT NULL DEFAULT '',
	content varchar(16) NOT NULL DEFAULT '',
	count decimal(9,3) NOT NULL DEFAULT '0',
	description text NOT NULL DEFAULT '',
	tariffid int(11) DEFAULT NULL,
	taxcategory smallint DEFAULT 0 NOT NULL,
	INDEX docid (docid),
	CONSTRAINT invoicecontents_docid_fkey
		FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT invoicecontents_taxid_fkey
		FOREIGN KEY (taxid) REFERENCES taxes (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT invoicecontents_tariffid_fkey
		FOREIGN KEY (tariffid) REFERENCES tariffs (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table debitnotecontents
#
CREATE TABLE debitnotecontents (
	id int(11) NOT NULL auto_increment,
	docid int(11) NOT NULL,
	itemid smallint NOT NULL DEFAULT '0',
	value decimal(9,2) NOT NULL DEFAULT '0',
	description text NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE KEY docid (docid, itemid),
	CONSTRAINT debitnotecontents_docid_fkey
		FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table cashsources
#
CREATE TABLE cashsources (
	id      int(11)         NOT NULL auto_increment,
	name	varchar(32)     DEFAULT '' NOT NULL,
	description text		DEFAULT NULL,
	account varchar(48)     NOT NULL DEFAULT '',
	deleted smallint		NOT NULL DEFAULT 0,
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table sourcefiles
#
CREATE TABLE sourcefiles (
	id      int(11)         NOT NULL auto_increment,
	userid integer     DEFAULT NULL,
	name	varchar(255)    NOT NULL,
	idate	int(11)	        NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY idate (idate, name),
	INDEX userid (userid),
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table cashimport
#
CREATE TABLE cashimport (
	id int(11) NOT NULL auto_increment,
	date int(11) NOT NULL DEFAULT '0',
	value decimal(9,2) NOT NULL DEFAULT '0',
	customer text NOT NULL DEFAULT '',
	description text NOT NULL DEFAULT '',
	customerid int(11) DEFAULT NULL,
	hash varchar(50) NOT NULL DEFAULT '',
	closed tinyint(1) NOT NULL DEFAULT '0',
	sourceid int(11) DEFAULT NULL,
	sourcefileid int(11) DEFAULT NULL,
	PRIMARY KEY (id),
	INDEX hash (hash),
	INDEX customerid (customerid),
	INDEX sourceid (sourceid),
	INDEX sourcefileid (sourcefileid),
	CONSTRAINT cashimport_customerid_fkey
	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT cashimport_sourceid_fkey
	FOREIGN KEY (sourceid) REFERENCES cashsources (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT cashimport_sourcefileid_fkey
	FOREIGN KEY (sourcefileid) REFERENCES sourcefiles (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customerbalances
#
CREATE TABLE customerbalances (
    customerid int(11) NOT NULL,
    balance decimal(12,2) NOT NULL,
    CONSTRAINT customerbalances_customerid_fkey
        FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  cash
#
CREATE TABLE cash (
  id int(11) NOT NULL auto_increment,
  time int(11) NOT NULL DEFAULT '0',
  type smallint NOT NULL DEFAULT '0',
  userid int(11) DEFAULT NULL,
  value decimal(9,2) NOT NULL DEFAULT '0',
  taxid int(11) DEFAULT NULL,
  customerid int(11) DEFAULT NULL,
  comment text NOT NULL DEFAULT '',
  docid int(11) DEFAULT NULL,
  itemid smallint NOT NULL DEFAULT '0',
  importid int(11) DEFAULT NULL,
  sourceid int(11) DEFAULT NULL,
  linktechnology int(11) DEFAULT NULL,
  currency varchar(3),
  currencyvalue decimal(17,10) DEFAULT 1.0,
  PRIMARY KEY  (id),
  INDEX customerid (customerid),
  INDEX docid (docid),
  INDEX time (time),
  INDEX importid (importid),
  INDEX sourceid (sourceid),
  INDEX cash_linktechnology_idx (linktechnology),
  UNIQUE KEY cash_importid_ukey (importid),
  CONSTRAINT cash_customerid_fkey
  	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT cash_userid_fkey
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT cash_taxid_fkey
	FOREIGN KEY (taxid) REFERENCES taxes (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT cash_docid_fkey
	FOREIGN KEY (docid) REFERENCES documents (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT cash_importid_fkey
	FOREIGN KEY (importid) REFERENCES cashimport (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT cash_sourceid_fkey
	FOREIGN KEY (sourceid) REFERENCES cashsources (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table pna
#
CREATE TABLE pna (
	id int(11)		NOT NULL auto_increment,
	zip varchar(10)		NOT NULL,
	cityid int(11)		DEFAULT NULL,
	cityname varchar(100) DEFAULT NULL,
	streetid int(11)	DEFAULT NULL,
	streetname varchar(100) DEFAULT NULL,
	fromnumber smallint	DEFAULT NULL,
	fromletter varchar(8)	DEFAULT NULL,
	tonumber smallint	DEFAULT NULL,
	toletter varchar(8)	DEFAULT NULL,
	parity smallint		DEFAULT '0' NOT NULL,
	PRIMARY KEY (id),
	INDEX fromnumber (fromnumber),
	INDEX tonumber (tonumber),
	UNIQUE KEY zip (zip, cityid, streetid, streetname, fromnumber, fromletter, tonumber, toletter, parity),
	FOREIGN KEY (cityid) REFERENCES location_cities (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (streetid) REFERENCES location_streets (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of tables ewx_* (EtherWerX(R))
#
CREATE TABLE ewx_channels (
	id int(11)              NOT NULL auto_increment,
	name varchar(32)        DEFAULT '' NOT NULL,
	upceil int(11)          DEFAULT '0' NOT NULL,
	downceil int(11)        DEFAULT '0' NOT NULL,
	upceil_n int(11)        DEFAULT NULL,
	downceil_n int(11)      DEFAULT NULL,
	halfduplex tinyint(1)   DEFAULT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

CREATE TABLE ewx_stm_channels (
	id int(11)              NOT NULL auto_increment,
	cid int(11)             DEFAULT NULL,
	upceil int(11)          DEFAULT '0' NOT NULL,
	downceil int(11)        DEFAULT '0' NOT NULL,
	halfduplex tinyint(1)   DEFAULT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY cid (cid),
	CONSTRAINT ewx_stm_channels_cid_fkey
		FOREIGN KEY (cid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table hosts
#
CREATE TABLE hosts (
    id int(11) NOT NULL auto_increment,
    name varchar(255) DEFAULT '' NOT NULL,
    description text DEFAULT '' NOT NULL,
    lastreload int(11) DEFAULT '0' NOT NULL,
    reload tinyint(1) DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  networks
#
CREATE TABLE networks (
  id int(11) NOT NULL auto_increment,
  name varchar(128) NOT NULL DEFAULT '',
  address int(16) unsigned NOT NULL DEFAULT '0',
  snat int(16) unsigned DEFAULT NULL,
  mask varchar(16) NOT NULL DEFAULT '',
  gateway varchar(16) NOT NULL DEFAULT '',
  interface varchar(16) NOT NULL DEFAULT '',
  dns varchar(16) NOT NULL DEFAULT '',
  dns2 varchar(16) NOT NULL DEFAULT '',
  domain varchar(64) NOT NULL DEFAULT '',
  wins varchar(16) NOT NULL DEFAULT '',
  dhcpstart varchar(16) NOT NULL DEFAULT '',
  dhcpend varchar(16) NOT NULL DEFAULT '',
  disabled tinyint(1) NOT NULL DEFAULT '0',
  notes text NOT NULL DEFAULT '',
  vlanid smallint DEFAULT NULL,
  hostid int(11) DEFAULT NULL,
  authtype tinyint(1) NOT NULL DEFAULT '0',
  pubnetid int(11) DEFAULT NULL,
  PRIMARY KEY  (id),
  UNIQUE KEY name (name),
  UNIQUE KEY address (address, hostid),
  FOREIGN KEY (hostid) REFERENCES hosts (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT networks_pubnetid_fkey
    FOREIGN KEY (pubnetid) REFERENCES networks (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table invprojects
#
CREATE TABLE invprojects (
        id int(11) NOT NULL auto_increment,
	name varchar(255) NOT NULL,
	type tinyint DEFAULT 0,
        divisionid int(11) DEFAULT NULL,
	PRIMARY KEY (id),
        FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table netnodes
#
CREATE TABLE netnodes (
    id int(11) NOT NULL auto_increment,
	name varchar(255) NOT NULL,
	type tinyint DEFAULT 0,
	invprojectid int(11),
	status tinyint DEFAULT 0,
	longitude decimal(10,6) DEFAULT NULL,
	latitude decimal(10,6) DEFAULT NULL,
	ownership tinyint(1) DEFAULT 0,
	coowner varchar(255) DEFAULT '',
	uip tinyint(1) DEFAULT 0,
	miar tinyint(1) DEFAULT 0,
	createtime int(11),
	lastinspectiontime int(11) DEFAULT NULL,
	admcontact text DEFAULT NULL,
	divisionid int(11) DEFAULT NULL,
	address_id int(11) DEFAULT NULL,
	info text DEFAULT NULL,
	ownerid int(11) DEFAULT NULL,
	PRIMARY KEY (id),
	CONSTRAINT netnodes_address_id_fkey
		FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (invprojectid) REFERENCES invprojects (id) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT netnodes_ownerid_fkey
		FOREIGN KEY (ownerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table netdeviceproducers
#
CREATE TABLE netdeviceproducers (
	id int(11) NOT NULL auto_increment,
	name varchar(255) NOT NULL,
	alternative_name varchar(255),
	PRIMARY KEY (id),
	UNIQUE (name)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table netdevicemodels
#
CREATE TABLE netdevicemodels (
	id int(11) NOT NULL auto_increment,
	netdeviceproducerid int(11) NOT NULL,
	name varchar(255) NOT NULL,
	alternative_name varchar(255),
	PRIMARY KEY (id),
	FOREIGN KEY (netdeviceproducerid) REFERENCES netdeviceproducers (id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE (name, netdeviceproducerid)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table netdevices
#
CREATE TABLE netdevices (
  id 		int(11) 	NOT NULL auto_increment,
  name 		varchar(32) 	NOT NULL DEFAULT '',
  description 	text 		NOT NULL DEFAULT '',
  producer 	varchar(64) 	NOT NULL DEFAULT '',
  model 	varchar(32) 	NOT NULL DEFAULT '',
  serialnumber 	varchar(32) 	NOT NULL DEFAULT '',
  ports 	int(11) 	NOT NULL DEFAULT '0',
  purchasetime 	int(11) 	NOT NULL DEFAULT '0',
  guaranteeperiod tinyint unsigned DEFAULT '0',
  shortname 	varchar(32) 	NOT NULL DEFAULT '',
  nastype 	int(11) 	NOT NULL DEFAULT '0',
  clients 	int(11) 	NOT NULL DEFAULT '0',
  login varchar(60) 	DEFAULT '' NOT NULL,
  secret 	varchar(60) 	NOT NULL DEFAULT '',
  community 	varchar(50) 	NOT NULL DEFAULT '',
  channelid 	int(11) 	DEFAULT NULL,
  longitude	decimal(10, 6)	DEFAULT NULL,
  latitude	decimal(10, 6)	DEFAULT NULL,
  netnodeid	int(11)		DEFAULT NULL,
  invprojectid	int(11)		DEFAULT NULL,
  status	tinyint		DEFAULT '0',
  netdevicemodelid int(11) DEFAULT NULL,
  ownerid int(11) DEFAULT NULL,
  address_id int(11) DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX channelid (channelid),
  CONSTRAINT `netdevices_address_id_fk` FOREIGN KEY (`address_id`) REFERENCES `addresses` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (channelid) REFERENCES ewx_channels (id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (netnodeid) REFERENCES netnodes (id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (invprojectid) REFERENCES invprojects (id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (netdevicemodelid) REFERENCES netdevicemodels (id) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT netdevices_ownerid_fkey
    FOREIGN KEY (ownerid) REFERENCES customers (id) ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table netradiosectors
#
CREATE TABLE netradiosectors (
	id int(11) NOT NULL auto_increment,
	name varchar(64) NOT NULL,
	type int(11) DEFAULT 0 NOT NULL,
	azimuth decimal(9,2) DEFAULT 0 NOT NULL,
	width decimal(9,2) DEFAULT 0 NOT NULL,
	altitude smallint DEFAULT 0 NOT NULL,
	rsrange int(11) DEFAULT 0 NOT NULL,
	license varchar(64) DEFAULT NULL,
	technology int(11) DEFAULT 0 NOT NULL,
	frequency decimal(9,5) DEFAULT NULL,
	frequency2 decimal(9,5) DEFAULT NULL,
	bandwidth decimal(9,5) DEFAULT NULL,
	netdev int(11) NOT NULL,
	secret varchar(64) DEFAULT NULL,
	PRIMARY KEY (id),
	INDEX netdev (netdev),
	FOREIGN KEY (netdev) REFERENCES netdevices (id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE KEY name (name, netdev)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table  nodes
#
CREATE TABLE nodes (
  id int(11) NOT NULL auto_increment,
  name varchar(32) NOT NULL DEFAULT '',
  ipaddr int(16) unsigned NOT NULL DEFAULT '0',
  ipaddr_pub int(16) unsigned NOT NULL DEFAULT '0',
  passwd varchar(32) NOT NULL DEFAULT '',
  ownerid int(11) DEFAULT NULL,
  creationdate int(11) NOT NULL DEFAULT '0',
  moddate int(11) NOT NULL DEFAULT '0',
  creatorid int(11) DEFAULT NULL,
  modid int(11) DEFAULT NULL,
  netdev int(11) DEFAULT NULL,
  linktype tinyint(1) NOT NULL DEFAULT '0',
  linkradiosector int(11) DEFAULT NULL,
  linkspeed int(11) NOT NULL DEFAULT '100000',
  linktechnology int(11) NOT NULL DEFAULT '0',
  port smallint NOT NULL DEFAULT '0',
  access tinyint(1) NOT NULL DEFAULT '1',
  warning tinyint(1) NOT NULL DEFAULT '0',
  authtype tinyint(1) NOT NULL DEFAULT '0',
  chkmac tinyint(1) NOT NULL DEFAULT '1',
  halfduplex tinyint(1) NOT NULL DEFAULT '0',
  lastonline int(11) NOT NULL DEFAULT '0',
  info text NOT NULL DEFAULT '',
  nas tinyint(1) NOT NULL DEFAULT '0',
  longitude decimal(10, 6) DEFAULT NULL,
  latitude decimal(10, 6) DEFAULT NULL,
  netid int(11) NOT NULL DEFAULT '0',
  invprojectid int(11) DEFAULT NULL,
  address_id int(11),
  PRIMARY KEY  (id),
  UNIQUE KEY name (name),
  UNIQUE KEY ipaddr (ipaddr, netid),
  INDEX netdev (netdev),
  INDEX ownerid (ownerid),
  INDEX ipaddr_pub (ipaddr_pub),
  INDEX linkradiosector (linkradiosector),
  INDEX authtype (authtype),
  CONSTRAINT nodes_netdev_fkey
    FOREIGN KEY (netdev) REFERENCES netdevices (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT nodes_address_id_fkey
    FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (netid) REFERENCES networks (id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (invprojectid) REFERENCES invprojects(id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (linkradiosector) REFERENCES netradiosectors (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT nodes_ownerid_fkey
    FOREIGN KEY (ownerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT nodes_creatorid_fkey
	FOREIGN KEY (creatorid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT nodes_modid_fkey
  	FOREIGN KEY (modid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table ewx_stm_nodes (EtherWerX(R))
#
CREATE TABLE ewx_stm_nodes (
	id int(11)              NOT NULL auto_increment,
	nodeid int(11)          DEFAULT NULL,
	mac varchar(20)         DEFAULT '' NOT NULL,
	ipaddr int(16) unsigned DEFAULT '0' NOT NULL,
	channelid int(11)       DEFAULT NULL,
	uprate int(11)          DEFAULT '0' NOT NULL,
	upceil int(11)          DEFAULT '0' NOT NULL,
	downrate int(11)        DEFAULT '0' NOT NULL,
	downceil int(11)        DEFAULT '0' NOT NULL,
	halfduplex tinyint(1)   DEFAULT '0' NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY nodeid (nodeid),
	CONSTRAINT ewx_stm_nodes_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT ewx_stm_nodes_channelid_fkey
		FOREIGN KEY (channelid) REFERENCES ewx_stm_channels (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  nodelocks
#
CREATE TABLE nodelocks (
	id int(11)		NOT NULL auto_increment,
	nodeid int(11)		NOT NULL,
	days smallint		DEFAULT 0 NOT NULL,
	fromsec int(11)		DEFAULT 0 NOT NULL,
	tosec int(11)		DEFAULT 0 NOT NULL,
	disabled tinyint(1)     DEFAULT '0' NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table macs
#
CREATE TABLE macs (
  id int(11)        NOT NULL auto_increment,
  mac varchar(17)   NOT NULL DEFAULT '',
  nodeid int(11)    NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY mac (mac, nodeid),
  FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table nodegroups
#
CREATE TABLE nodegroups (
        id              int(11)         NOT NULL auto_increment,
	name            varchar(255)    NOT NULL DEFAULT '',
	prio		int(11)		NOT NULL DEFAULT '0',
	description     text            NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table nodegroupassignments
#
CREATE TABLE nodegroupassignments (
	id              int(11)         NOT NULL auto_increment,
	nodegroupid     int(11)         NOT NULL,
	nodeid          int(11)         NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY nodeid (nodeid, nodegroupid),
	CONSTRAINT nodegroupassignments_nodegroupid_fkey
		FOREIGN KEY (nodegroupid) REFERENCES nodegroups (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT nodegroupassignments_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table nodeassignments
#
CREATE TABLE nodeassignments (
    id int(11) NOT NULL auto_increment,
    nodeid int(11) NOT NULL,
    assignmentid int(11) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY nodeid (nodeid, assignmentid),
    INDEX assignmentid (assignmentid),
    FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (assignmentid) REFERENCES assignments (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table tarifftags
#
CREATE TABLE tarifftags (
	id int(11) NOT NULL AUTO_INCREMENT,
	name varchar(255) NOT NULL,
	description text NULL,
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
    )  ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table tariffassignemnts
#
CREATE TABLE tariffassignments (
        id int(11) NOT NULL AUTO_INCREMENT,
        tariffid int(11) NOT NULL,
        tarifftagid int(11) NOT NULL,
        PRIMARY KEY (id),
        UNIQUE KEY tariffid_tarifftagid_idx (tariffid,tarifftagid),
        KEY tarifftagid_idx (tarifftagid),
        CONSTRAINT `tariffassignments_tariffid_key` FOREIGN KEY (tariffid) REFERENCES tariffs (id) ON DELETE CASCADE ON UPDATE CASCADE,
        CONSTRAINT `tariffassignments_tarifftagid_key` FOREIGN KEY (tarifftagid) REFERENCES tarifftags (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table promotions
#
CREATE TABLE promotions (
    id int(11)          NOT NULL auto_increment,
    name varchar(255)   NOT NULL,
    description text    DEFAULT NULL,
    disabled tinyint(1) DEFAULT '0' NOT NULL,
    datefrom int(11)    DEFAULT '0' NOT NULL,
    dateto   int(11)    DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table promotionschemas
#
CREATE TABLE promotionschemas (
    id int(11)          NOT NULL auto_increment,
    name varchar(255)   NOT NULL,
    description text    DEFAULT NULL,
    data text           DEFAULT NULL,
    promotionid int(11) DEFAULT NULL,
    disabled tinyint(1) DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY promotionid (promotionid, name),
    FOREIGN KEY (promotionid) REFERENCES promotions (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table promotionassignments
#
CREATE TABLE promotionassignments (
    id int(11)          NOT NULL auto_increment,
    promotionschemaid int(11) DEFAULT NULL,
    tariffid int(11)    DEFAULT NULL,
    data text           DEFAULT NULL,
    optional tinyint    DEFAULT '0' NOT NULL,
    label varchar(60) DEFAULT NULL,
    orderid int(11)     DEFAULT 0 NOT NULL,
    backwardperiod smallint NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    INDEX tariffid (tariffid),
    FOREIGN KEY (promotionschemaid) REFERENCES promotionschemas (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (tariffid) REFERENCES tariffs (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

## --------------------------------------------------------
#
# Structure of table  payments
#
CREATE TABLE payments (
  id int(11) NOT NULL auto_increment,
  name varchar(255) NOT NULL DEFAULT '',
  value decimal(9,2) NOT NULL DEFAULT '0',
  creditor varchar(255) NOT NULL DEFAULT '',
  period smallint NOT NULL DEFAULT '0',
  at smallint NOT NULL DEFAULT '0',
  description text NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table numberplanassignments
#
CREATE TABLE numberplanassignments (
	id int(11) NOT NULL auto_increment,
	planid int(11) NOT NULL,
	divisionid int(11) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY planid (planid, divisionid),
	INDEX divisionid (divisionid),
	CONSTRAINT numberplanassignments_planid_fkey
		FOREIGN KEY (planid) REFERENCES numberplans (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT numberplanassignments_divisionid_fkey
		FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customergroups
#
CREATE TABLE customergroups (
  id int(11) NOT NULL auto_increment,
  name varchar(255) NOT NULL DEFAULT '',
  description text NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customerassignments
#
CREATE TABLE customerassignments (
  id int(11) NOT NULL auto_increment,
  customergroupid int(11) NOT NULL,
  customerid int(11) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY customerassignment (customergroupid, customerid),
  INDEX customerid (customerid),
  CONSTRAINT customerassignments_customergroupid_fkey
  	FOREIGN KEY (customergroupid) REFERENCES customergroups (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT customerassignments_customerid_fkey
  	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table nodesessions
#
CREATE TABLE nodesessions (
	id int(11)		NOT NULL auto_increment,
	customerid int(11)	DEFAULT NULL,
	nodeid int(11)		DEFAULT NULL,
	ipaddr int(16) unsigned NOT NULL DEFAULT '0',
	mac varchar(17)		NOT NULL DEFAULT '',
	start int(11)		NOT NULL DEFAULT '0',
	stop int(11)		NOT NULL DEFAULT '0',
	download bigint		DEFAULT '0',
	upload bigint		DEFAULT '0',
	tag varchar(32)		NOT NULL DEFAULT '',
	terminatecause varchar(32) NOT NULL DEFAULT '',
	type smallint		NOT NULL DEFAULT '0',
    nasipaddr int(16) unsigned	DEFAULT NULL,
    nasport text		DEFAULT NULL,
    nasid text          DEFAULT NULL,
	PRIMARY KEY (id),
	INDEX customerid (customerid),
	INDEX nodeid (nodeid),
	INDEX tag (tag),
	CONSTRAINT nodesessions_customerid_fkey
		FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT nodesessions_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table stats
#
CREATE TABLE stats (
	nodeid int(11)		DEFAULT NULL,
	dt int(11)		NOT NULL DEFAULT '0',
	upload bigint		DEFAULT '0',
	download bigint		DEFAULT '0',
	nodesessionid int(11)	DEFAULT NULL,
	UNIQUE KEY nodeid (nodeid, dt),
	INDEX dt (dt),
	INDEX nodesessionid (nodesessionid),
	CONSTRAINT stats_nodesessionid_fkey
		FOREIGN KEY (nodesessionid) REFERENCES nodesessions (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT stats_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  netlinks
#
CREATE TABLE netlinks (
  id int(11) NOT NULL auto_increment,
  src int(11) NOT NULL,
  dst int(11) NOT NULL,
  type tinyint(1) NOT NULL DEFAULT '0',
  speed int(11) NOT NULL DEFAULT '100000',
  technology int(11) NOT NULL DEFAULT '0',
  srcport smallint NOT NULL DEFAULT '0',
  dstport smallint NOT NULL DEFAULT '0',
  srcradiosector int(11) DEFAULT NULL,
  dstradiosector int(11) DEFAULT NULL,
  PRIMARY KEY  (id),
  UNIQUE KEY src (src,dst),
  INDEX srcradiosector (srcradiosector),
  INDEX dstradiosector (dstradiosector),
  FOREIGN KEY (srcradiosector) REFERENCES netradiosectors (id) ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (dstradiosector) REFERENCES netradiosectors (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT netlinks_src_fkey
    FOREIGN KEY (src) REFERENCES netdevices (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT netlinks_dst_fkey
    FOREIGN KEY (dst) REFERENCES netdevices (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rtqueues
#
CREATE TABLE rtqueues (
  id int(11) NOT NULL auto_increment,
  name varchar(255) NOT NULL DEFAULT '',
  email varchar(255) NOT NULL DEFAULT '',
  description text NOT NULL DEFAULT '',
  newticketsubject varchar(255) NOT NULL DEFAULT '',
  newticketbody text NOT NULL DEFAULT '',
  newmessagesubject varchar(255) NOT NULL DEFAULT '',
  newmessagebody text NOT NULL DEFAULT '',
  resolveticketsubject varchar(255) NOT NULL DEFAULT '',
  resolveticketbody text NOT NULL DEFAULT '',
  verifierticketsubject varchar(255) NOT NULL DEFAULT '',
  verifierticketbody text NOT NULL DEFAULT '',
  deleted tinyint(1) NOT NULL DEFAULT '0',
  deltime int(11) NOT NULL DEFAULT '0',
  deluserid int(11) DEFAULT NULL,
  verifierid int(11) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY name (name),
  CONSTRAINT rtqueues_deluserid_fkey
	FOREIGN KEY (deluserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rtqueues_verifierid_fkey
    FOREIGN KEY (verifierid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rttickets
#
CREATE TABLE rttickets (
  id int(11) NOT NULL auto_increment,
  queueid int(11) NOT NULL,
  requestor varchar(255) NOT NULL DEFAULT '',
  requestor_mail varchar(255) DEFAULT NULL,
  requestor_phone varchar(32) DEFAULT NULL,
  requestor_userid int(11) DEFAULT NULL,
  subject varchar(255) NOT NULL DEFAULT '',
  state tinyint(4) NOT NULL DEFAULT '0',
  cause tinyint(4) NOT NULL DEFAULT '0',
  owner int(11) DEFAULT NULL,
  customerid int(11) DEFAULT NULL,
  creatorid int(11) DEFAULT NULL,
  createtime int(11) NOT NULL DEFAULT '0',
  resolvetime int(11) NOT NULL DEFAULT '0',
  modtime int(11) NOT NULL DEFAULT '0',
  source tinyint(4) NOT NULL DEFAULT '0',
  priority tinyint(4) NOT NULL DEFAULT '0',
  deleted tinyint(1) NOT NULL DEFAULT '0',
  deltime int(11) NOT NULL DEFAULT '0',
  deluserid int(11) DEFAULT NULL,
  address_id int(11) DEFAULT NULL,
  nodeid int(11) DEFAULT NULL,
  netnodeid int(11) DEFAULT NULL,
  netdevid int(11) DEFAULT NULL,
  verifierid int(11) DEFAULT NULL,
  verifier_rtime int(11) DEFAULT NULL,
  deadline int(11) DEFAULT NULL,
  service int(11) DEFAULT NULL,
  type int(11) DEFAULT NULL,
  parentid int(11) DEFAULT NULL,
  invprojectid int(11) DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX queueid (queueid),
  INDEX customerid (customerid),
  INDEX creatorid (creatorid),
  INDEX createtime (createtime),
  CONSTRAINT rttickets_queueid_fkey
    FOREIGN KEY (queueid) REFERENCES rtqueues (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT rttickets_address_id_fkey
    FOREIGN KEY (address_id) REFERENCES addresses (id) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT rttickets_nodeid_fkey
    FOREIGN KEY (nodeid) REFERENCES nodes (id) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT rttickets_customerid_fkey
    FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_deluserid_fkey
	FOREIGN KEY (deluserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_creatorid_fkey
	FOREIGN KEY (creatorid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_owner_fkey
	FOREIGN KEY (owner) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_requestor_userid_fkey
	FOREIGN KEY (requestor_userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_netdevid_fkey
	FOREIGN KEY (netdevid) REFERENCES netdevices (id) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT rttickets_verifierid_fkey
        FOREIGN KEY (verifierid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_invprojectid_fkey
        FOREIGN KEY (invprojectid) REFERENCES invprojects (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rttickets_parentid_fkey
        FOREIGN KEY (parentid) REFERENCES rttickets (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rtticketlastview
#
CREATE TABLE rtticketlastview (
	ticketid int(11) NOT NULL,
	userid int(11) NOT NULL,
	vdate int(11) NOT NULL,
	INDEX vdate (vdate),
	UNIQUE KEY rtticketlastview_ticketid_key (ticketid, userid),
	CONSTRAINT rtticketlastview_ticketid_fkey
		FOREIGN KEY (ticketid) REFERENCES rttickets (id) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT rtticketlastview_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rtmessages
#
CREATE TABLE rtmessages (
  id int(11) NOT NULL auto_increment,
  ticketid int(11) NOT NULL,
  userid int(11) DEFAULT NULL,
  customerid int(11) DEFAULT NULL,
  phonefrom varchar(20) NOT NULL DEFAULT '',
  mailfrom varchar(255) NOT NULL DEFAULT '',
  subject varchar(255) NOT NULL DEFAULT '',
  messageid varchar(255) NOT NULL DEFAULT '',
  inreplyto int(11) DEFAULT NULL,
  replyto text NOT NULL DEFAULT '',
  headers text NOT NULL DEFAULT '',
  body mediumtext NOT NULL DEFAULT '',
  createtime int(11) NOT NULL DEFAULT '0',
  type int(11) NOT NULL DEFAULT 0,
  deleted tinyint(1) NOT NULL DEFAULT '0',
  deltime int(11) NOT NULL DEFAULT '0',
  deluserid int(11) DEFAULT NULL,
  PRIMARY KEY  (id),
  INDEX ticketid (ticketid),
  CONSTRAINT rtmessages_ticketid_fkey
    FOREIGN KEY (ticketid) REFERENCES rttickets (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT rtmessages_customerid_fkey
    FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rtmessages_userid_fkey
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rtmessages_deluserid_fkey
    FOREIGN KEY (deluserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT rtmessages_inreplyto_fkey
	FOREIGN KEY (inreplyto) REFERENCES rtmessages (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rtrights
#
CREATE TABLE rtrights (
    id INT(11) NOT NULL auto_increment,
    userid INT(11) NOT NULL,
    queueid INT(11) NOT NULL,
    rights INT(11) DEFAULT 0 NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY (userid, queueid),
    FOREIGN KEY (queueid) REFERENCES rtqueues (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT rtrights_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  rtattachments
#
CREATE TABLE rtattachments (
  messageid int(11)     NOT NULL,
  filename varchar(255) NOT NULL DEFAULT '',
  contenttype varchar(255) NOT NULL DEFAULT '',
  INDEX messageid (messageid),
  FOREIGN KEY (messageid) REFERENCES rtmessages (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table rtcategories
#
CREATE TABLE rtcategories (
	id int(11)		NOT NULL auto_increment,
	name varchar(255)	DEFAULT '' NOT NULL,
	description text	DEFAULT '' NOT NULL,
	style text	DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE KEY (name)
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table rtcategoryusers
#
CREATE TABLE rtcategoryusers (
	id int(11)		NOT NULL auto_increment,
	userid int(11)		NOT NULL,
	categoryid int(11)	NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY userid (userid, categoryid),
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (categoryid) REFERENCES rtcategories (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table rtticketcategories
#
CREATE TABLE rtticketcategories (
	id int(11)		NOT NULL auto_increment,
	ticketid int(11)	NOT NULL,
	categoryid int(11)	NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY ticketid (ticketid, categoryid),
	FOREIGN KEY (ticketid) REFERENCES rttickets (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (categoryid) REFERENCES rtcategories (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table rtqueuecategories
#
CREATE TABLE rtqueuecategories (
	id int(11) NOT NULL auto_increment,
	queueid int(11) NOT NULL,
	categoryid int(11) NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (queueid) REFERENCES rtqueues (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (categoryid) REFERENCES rtcategories (id) ON DELETE CASCADE ON UPDATE CASCADE
);

# --------------------------------------------------------
#
# Structure of table domains
#
CREATE TABLE domains (
	id int(11) NOT NULL auto_increment,
	ownerid int(11) DEFAULT NULL,
	name varchar(255) NOT NULL DEFAULT '',
	description text NOT NULL DEFAULT '',
	master VARCHAR(128) DEFAULT NULL,
	last_check INT(11) DEFAULT NULL,
	type VARCHAR(6) NOT NULL,
	notified_serial INT(11) DEFAULT NULL,
	account VARCHAR(40) DEFAULT NULL,
	mxbackup tinyint(1) NOT NULL DEFAULT '0',
	PRIMARY KEY (id),
	UNIQUE KEY (name),
	INDEX ownerid (ownerid),
	CONSTRAINT domains_ownerid_fkey
	FOREIGN KEY (ownerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table passwd
#
CREATE TABLE passwd (
    id int(11) NOT NULL auto_increment,
    ownerid int(11) DEFAULT NULL,
    login varchar(200) NOT NULL DEFAULT '',
    password varchar(200) NOT NULL DEFAULT '',
    lastlogin int(11) NOT NULL DEFAULT 0,
    uid int(11)	NOT NULL DEFAULT 0,
    home varchar(255) NOT NULL DEFAULT '',
    type smallint NOT NULL DEFAULT 0,
    expdate int(11) NOT NULL DEFAULT 0,
    domainid int(11) NOT NULL,
    quota_sh int(11) NOT NULL DEFAULT 0,
    quota_mail int(11) NOT NULL DEFAULT 0,
    quota_www int(11) NOT NULL DEFAULT 0,
    quota_ftp int(11) NOT NULL DEFAULT 0,
    quota_sql int(11) NOT NULL DEFAULT 0,
    quota_cloud int(11) NOT NULL DEFAULT 0,
    realname varchar(255) NOT NULL DEFAULT '',
    createtime int(11) NOT NULL DEFAULT 0,
    mail_forward varchar(255) NOT NULL DEFAULT '',
    mail_bcc varchar(255) NOT NULL DEFAULT '',
    description text NOT NULL DEFAULT '',
    PRIMARY KEY (id),
    UNIQUE KEY (login, domainid),
    INDEX ownerid (ownerid),
	CONSTRAINT passwd_ownerid_fkey
		FOREIGN KEY (ownerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT passwd_domainid_fkey
		FOREIGN KEY (domainid) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table records
#
CREATE TABLE records (
  id              INT(11) auto_increment,
  domain_id       INT(11) DEFAULT NULL,
  name            VARCHAR(255) DEFAULT NULL,
  type            VARCHAR(10) DEFAULT NULL,
  content         text DEFAULT NULL,
  ttl             INT(11) DEFAULT NULL,
  prio            INT(11) DEFAULT NULL,
  change_date     INT(11) DEFAULT NULL,
  disabled        tinyint(1) DEFAULT '0',
  auth            tinyint(1) DEFAULT '1',
  ordername varchar(255) DEFAULT NULL,
  PRIMARY KEY(id),
  INDEX domain_id (domain_id),
  INDEX name_type (name, type, domain_id),
  FOREIGN KEY (domain_id) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;


# --------------------------------------------------------
#
# Structure of table domainmetadata
#
CREATE TABLE domainmetadata (
	id int(11) NOT NULL auto_increment,
	domain_id int(11) NOT NULL,
	kind varchar(32),
	content text,
	PRIMARY KEY (id),
	INDEX domainmetadata (domain_id, kind),
	FOREIGN KEY (domain_id) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) Engine=InnoDB;

# --------------------------------------------------------
#
# Structure of table supermasters
#
CREATE TABLE supermasters (
  id            INT(11) auto_increment,
  ip            VARCHAR(64) NOT NULL,
  nameserver    VARCHAR(255) NOT NULL,
  account       VARCHAR(40) DEFAULT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table comments
#
CREATE TABLE comments (
	id				int(11) auto_increment,
	domain_id		int(11) NOT NULL,
	name			varchar(255) NOT NULL,
	type			varchar(10) NOT NULL,
	modified_at		int(11) NOT NULL,
	account			varchar(40) CHARACTER SET 'utf8' DEFAULT NULL,
	comment			text NOT NULL,
	PRIMARY KEY (id),
	INDEX domain_id (domain_id),
	INDEX name (name, type),
	INDEX modified_at (domain_id, modified_at),
	CONSTRAINT comments_domain_id_fkey
	FOREIGN KEY (domain_id) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) Engine=InnoDB;

# --------------------------------------------------------
#
# Structure of table cryptokeys
#
CREATE TABLE cryptokeys (
	id				int(11) auto_increment,
	domain_id		int(11) NOT NULL,
	flags			int(11) NOT NULL,
	active			bool,
	content			text,
	PRIMARY KEY (id),
	INDEX domain_id (domain_id),
	CONSTRAINT cryptokeys_domain_id_fkey
	FOREIGN KEY (domain_id) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) Engine=InnoDB;

# --------------------------------------------------------
#
# Structure of table tsigkeys
#
CREATE TABLE tsigkeys (
	id				int(11) auto_increment,
	name			varchar(255),
	algorithm		varchar(50),
	secret			varchar(255),
	PRIMARY KEY (id),
	UNIQUE KEY name (name, algorithm)
) Engine=InnoDB;

# --------------------------------------------------------
#
# Structure of table aliases
#
CREATE TABLE aliases (
    id int(11) NOT NULL auto_increment,
    login varchar(255) NOT NULL DEFAULT '',
    domainid int(11) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY (login, domainid),
	CONSTRAINT aliases_domainid_fkey
		FOREIGN KEY (domainid) REFERENCES domains (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table aliasassignments
#
CREATE TABLE aliasassignments (
    id              int(11)         NOT NULL auto_increment,
    aliasid         int(11)         NOT NULL,
    accountid       int(11)         DEFAULT NULL,
    mail_forward    varchar(255)    DEFAULT '' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY aliasid (aliasid, accountid, mail_forward),
	CONSTRAINT aliasassignments_aliasid_fkey
		FOREIGN KEY (aliasid) REFERENCES aliases (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT aliasassignments_accountid_fkey
		FOREIGN KEY (accountid) REFERENCES passwd (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table uiconfig
#
CREATE TABLE uiconfig (
    id int(11) NOT NULL auto_increment,
    section varchar(64) NOT NULL DEFAULT '',
    var varchar(64) NOT NULL DEFAULT '',
    value text NOT NULL DEFAULT '',
    description text NOT NULL DEFAULT '',
    disabled tinyint(1) NOT NULL DEFAULT '0',
    type smallint NOT NULL DEFAULT 0,
    userid int(11) DEFAULT NULL,
    divisionid int(11) DEFAULT NULL,
    configid int(11) DEFAULT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY uiconfig_section_var_userid_divisionid_ukey (section, var, userid, divisionid),
	CONSTRAINT uiconfig_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT uiconfig_divisionid_fkey
		FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT uiconfig_configid_fkey
		FOREIGN KEY (configid) REFERENCES uiconfig (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table events
#
CREATE TABLE events (
    id int(11) NOT NULL auto_increment,
    title varchar(255) NOT NULL DEFAULT '',
    description text NOT NULL DEFAULT '',
    note text NOT NULL DEFAULT '',
    date int(11) NOT NULL DEFAULT '0',
    begintime int(11) NOT NULL DEFAULT '0',
    enddate int(11) NOT NULL DEFAULT '0',
    endtime int(11) NOT NULL DEFAULT '0',
    userid int(11) DEFAULT NULL,
    customerid int(11) DEFAULT NULL,
    private tinyint(1) NOT NULL DEFAULT '0',
    closed tinyint(1) NOT NULL DEFAULT '0',
    closeddate int(11) NOT NULL DEFAULT '0',
    closeduserid int(11) DEFAULT NULL,
    creationdate int(11) NOT NULL DEFAULT '0',
    moddate int(11) NOT NULL DEFAULT '0',
    moduserid int(11) DEFAULT NULL,
    type smallint NOT NULL DEFAULT 1,
    nodeid int(11) DEFAULT NULL,
    ticketid int(11) DEFAULT NULL,
	address_id int(11) DEFAULT NULL,
    PRIMARY KEY (id),
    INDEX date (date),
    KEY nodeid (nodeid),
	CONSTRAINT events_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT events_ticketid_fkey
		FOREIGN KEY (ticketid) REFERENCES rttickets (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT events_address_id_fkey
		FOREIGN KEY (address_id) REFERENCES addresses (id) ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT events_customerid_fkey
		FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT events_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT events_closeduserid_fkey
		FOREIGN KEY (closeduserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT events_moduserid_fkey
		FOREIGN KEY (moduserid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table eventassignments
#
CREATE TABLE eventassignments (
    eventid int(11) NOT NULL,
    userid int(11) NOT NULL,
    UNIQUE (eventid, userid),
	CONSTRAINT eventassignments_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT eventassignments_eventid_fkey
		FOREIGN KEY (eventid) REFERENCES events (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table sessions
#
CREATE TABLE sessions (
    id varchar(50) NOT NULL DEFAULT '',
    ctime int(11) NOT NULL DEFAULT 0,
    mtime int(11) NOT NULL DEFAULT 0,
    atime int(11) NOT NULL DEFAULT 0,
    vdata text NOT NULL,
    content mediumtext NOT NULL,
    PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table daemoninstances (lmsd configuration)
#
CREATE TABLE daemoninstances (
    id int(11) 			NOT NULL auto_increment,
    name varchar(255) 		DEFAULT '' NOT NULL,
    hostid int(11) 		NOT NULL,
    module varchar(255) 	DEFAULT '' NOT NULL,
    crontab varchar(255) 	DEFAULT '' NOT NULL,
    priority int(11) 		DEFAULT '0' NOT NULL,
    description text 		DEFAULT '' NOT NULL,
    disabled tinyint(1) 	DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
	CONSTRAINT daemoninstances_hostid_fkey
		FOREIGN KEY (hostid) REFERENCES hosts (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table daemonconfig (lmsd configuration)
#
CREATE TABLE daemonconfig (
    id int(11) 		NOT NULL auto_increment,
    instanceid int(11)  NOT NULL,
    var varchar(64) 	DEFAULT '' NOT NULL,
    value text 		DEFAULT '' NOT NULL,
    description text 	DEFAULT '' NOT NULL,
    disabled tinyint(1) DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY instanceid (instanceid, var),
	CONSTRAINT daemonconfig_instanceid_fkey
		FOREIGN KEY (instanceid) REFERENCES daemoninstances (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table docrights
#
CREATE TABLE docrights (
    id          int(11)         NOT NULL auto_increment,
    userid      int(11)         NOT NULL,
    doctype     int(11)         DEFAULT '0' NOT NULL,
    rights      int(11)         DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY userid (userid, doctype),
	CONSTRAINT docrights_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table cashrights
#
CREATE TABLE cashrights (
    id int(11)      NOT NULL auto_increment,
    userid int(11)  NOT NULL,
    regid int(11)   NOT NULL,
    rights int(11)  DEFAULT '0' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY userid (userid, regid),
	CONSTRAINT cashrights_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT cashrights_regid_fkey
		FOREIGN KEY (regid) REFERENCES cashregs (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table cashreglog
#
CREATE TABLE cashreglog (
    id int(11) 			NOT NULL auto_increment,
    regid int(11)          	NOT NULL,
    userid int(11)		DEFAULT NULL,
    time int(11)		DEFAULT '0' NOT NULL,
    value decimal(9,2)      	DEFAULT '0' NOT NULL,
    snapshot decimal(9,2)      	DEFAULT '0' NOT NULL,
    description text		DEFAULT '' NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY regid (regid, time),
	CONSTRAINT cashreglog_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT cashreglog_regid_fkey
		FOREIGN KEY (regid) REFERENCES cashregs (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE ewx_pt_config (
        id int(11)              NOT NULL auto_increment,
	nodeid int(11)          DEFAULT NULL,
	name varchar(32)        DEFAULT '' NOT NULL,
	mac varchar(20)         DEFAULT '' NOT NULL,
	ipaddr int(16) unsigned DEFAULT '0' NOT NULL,
	passwd varchar(32)      DEFAULT '' NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY nodeid (nodeid),
	CONSTRAINT ewx_pt_config_nodeid_fkey
		FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table  dbinfo
#
CREATE TABLE dbinfo (
  keytype varchar(255) NOT NULL DEFAULT '',
  keyvalue varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY  (keytype)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table customercontacts
#
CREATE TABLE customercontacts (
	id 		int(11) 	NOT NULL auto_increment,
	customerid 	int(11) 	NOT NULL,
	name 		varchar(10000) 	NOT NULL DEFAULT '',
	contact		varchar(255) 	NOT NULL DEFAULT '',
	type        int(11) 	DEFAULT NULL,
	PRIMARY KEY (id),
	INDEX customerid (customerid),
	INDEX contact (contact),
	CONSTRAINT customercontacts_customerid_fkey
		FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table excludedgroups
#
CREATE TABLE excludedgroups (
	id 		int(11) 	NOT NULL auto_increment,
	customergroupid int(11) 	NOT NULL,
	userid 		int(11) 	NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY userid (userid, customergroupid),
	KEY customergroupid (customergroupid),
	FOREIGN KEY (customergroupid) REFERENCES customergroups (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT excludedgroups_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table messages
#
CREATE TABLE messages (
        id 	int(11) 	NOT NULL auto_increment,
        subject varchar(255)	DEFAULT '' NOT NULL,
	body 	text		DEFAULT '' NOT NULL,
	cdate 	int(11)		DEFAULT '0' NOT NULL,
	type 	smallint	DEFAULT '0' NOT NULL,
	userid 	int(11)		DEFAULT NULL,
	sender 	varchar(255) 	DEFAULT NULL,
	contenttype 	varchar(255) 	DEFAULT 'text/plain',
        PRIMARY KEY (id),
	INDEX cdate (cdate, type),
	INDEX userid (userid),
	CONSTRAINT messages_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table messageitems
#
CREATE TABLE messageitems (
        id 		int(11) 	NOT NULL auto_increment,
	messageid 	int(11)		NOT NULL,
	customerid 	int(11) 	DEFAULT NULL,
	destination 	varchar(255) 	DEFAULT '' NOT NULL,
	lastdate 	int(11)		DEFAULT '0' NOT NULL,
	status 		smallint	DEFAULT '0' NOT NULL,
	error 		text		DEFAULT NULL,
	lastreaddate 	int(11)		DEFAULT '0' NOT NULL,
	externalmsgid	int(11)		DEFAULT '0' NOT NULL,
    body 		text		DEFAULT NULL,
        PRIMARY KEY (id),
	INDEX messageid (messageid),
	INDEX customerid (customerid),
	CONSTRAINT messageitems_customerid_fkey
		FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT messageitems_messageid_fkey
		FOREIGN KEY (messageid) REFERENCES messages (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table nastypes
#
CREATE TABLE nastypes (
    	id 	int(11) 	NOT NULL auto_increment,
	name 	varchar(255) 	NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table managementurls
#
CREATE TABLE managementurls (
	id int(11)		NOT NULL auto_increment,
	netdevid int(11)	NULL DEFAULT NULL,
	nodeid int(11)		NULL DEFAULT NULL,
	url text		DEFAULT '' NOT NULL,
	comment varchar(100)	DEFAULT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (netdevid) REFERENCES netdevices (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (nodeid) REFERENCES nodes (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=INNODB;

# --------------------------------------------------------
#
# Structure of table logtransactions
#
CREATE TABLE logtransactions (
	id int(11)		NOT NULL auto_increment,
	userid int(11)		DEFAULT NULL,
	time int(11)		DEFAULT '0' NOT NULL,
	module varchar(50)	DEFAULT '' NOT NULL,
	PRIMARY KEY (id),
	INDEX userid (userid),
	INDEX time (time),
	CONSTRAINT logtransactions_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table logmessages
#
CREATE TABLE logmessages (
	id int(11)		NOT NULL auto_increment,
	transactionid int(11)	NOT NULL,
	resource int(11)	DEFAULT '0' NOT NULL,
	operation int(11)	DEFAULT '0' NOT NULL,
	PRIMARY KEY (id),
	INDEX transactionid (transactionid),
	INDEX resource (resource),
	INDEX operation (operation),
	FOREIGN KEY (transactionid) REFERENCES logtransactions (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table logmessagekeys
#
CREATE TABLE logmessagekeys (
	logmessageid int(11)	NOT NULL,
	name varchar(32)	NOT NULL,
	value int(11)		NOT NULL,
	INDEX logmessageid (logmessageid),
	INDEX name (name),
	INDEX value (value),
	FOREIGN KEY (logmessageid) REFERENCES logmessages (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table logmessagedata
#
CREATE TABLE logmessagedata (
	logmessageid int(11)	NOT NULL,
	name varchar(32)	NOT NULL,
	value text		DEFAULT '',
	INDEX logmessageid (logmessageid),
	INDEX name (name),
	FOREIGN KEY (logmessageid) REFERENCES logmessages (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table templates
#
CREATE TABLE templates (
	id int(11)		NOT NULL auto_increment,
	type tinyint		NOT NULL,
	name varchar(100)	NOT NULL,
	subject varchar(255)	DEFAULT '' NOT NULL,
	message	text		DEFAULT '' NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY name (type, name)
) ENGINE=InnoDB;

# ---------------------------------------------------
#
# Structure of table "rttemplatetypes"
#
CREATE TABLE rttemplatetypes (
	id          int(11) NOT NULL auto_increment,
	templateid  int(11) NOT NULL,
	messagetype int(11) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY rttemplatetypes_templateid_key (templateid, messagetype),
	CONSTRAINT rttemplatetypes_templateid_fkey
		FOREIGN KEY (templateid) REFERENCES templates (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# ---------------------------------------------------
#
# Structure of table "rttemplatequeues"
#
CREATE TABLE rttemplatequeues (
	id          int(11) NOT NULL auto_increment,
	templateid  int(11) NOT NULL,
	queueid  int(11) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY rttemplatequeues_templateid_key (templateid, queueid),
	CONSTRAINT rttemplatequeues_templateid_fkey
		FOREIGN KEY (templateid) REFERENCES templates (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT rttemplatequeues_queueid_fkey
		FOREIGN KEY (queueid) REFERENCES rtqueues (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table usergroups
#
CREATE TABLE usergroups (
	id int(11) NOT NULL auto_increment,
	name varchar(255) DEFAULT '' NOT NULL,
	description text DEFAULT '' NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY name (name)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table userassignments
#
CREATE TABLE userassignments (
	id int(11) NOT NULL auto_increment,
	usergroupid int(11) NOT NULL,
	userid int(11) NOT NULL,
	PRIMARY KEY (id),
	INDEX userassignments_userid_idx (userid),
	FOREIGN KEY (usergroupid) REFERENCES usergroups (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE KEY userassignments_usergroupid_key (usergroupid, userid)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table userdivisions
#
CREATE TABLE userdivisions (
	id int(11) NOT NULL auto_increment,
	userid int(11) NOT NULL,
	divisionid int(11) NOT NULL,
	PRIMARY KEY (id),
	INDEX userdivisions_userid_idx (userid),
	CONSTRAINT userdivisions_userid_fkey
		FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT userdivisions_divisionid_fkey
		FOREIGN KEY (divisionid) REFERENCES divisions (id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE KEY userdivisions_userid_divisionid_ukey (userid, divisionid)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table passwdhistory
#
CREATE TABLE passwdhistory (
	id int(11) NOT NULL auto_increment,
	userid int(11) NOT NULL,
	hash varchar(255) DEFAULT '' NOT NULL,
	FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table filecontainers
#
CREATE TABLE filecontainers (
	id int(11) NOT NULL AUTO_INCREMENT,
	creationdate int(11) NOT NULL DEFAULT 0,
	creatorid int(11) DEFAULT NULL,
	description text NOT NULL,
	netdevid int(11) DEFAULT NULL,
	netnodeid int(11) DEFAULT NULL,
	messageid int(11) DEFAULT NULL,
	netdevmodelid int(11) DEFAULT NULL,
	PRIMARY KEY (id),
	CONSTRAINT filecontainers_creatorid_fkey
		FOREIGN KEY (creatorid) REFERENCES users (id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT filecontainers_netdevid_fkey
		FOREIGN KEY (netdevid) REFERENCES netdevices (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT filecontainers_netnodeid_fkey
		FOREIGN KEY (netnodeid) REFERENCES netnodes (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT filecontainers_messageid_fkey
		FOREIGN KEY (messageid) REFERENCES messages (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT filecontainers_netdevmodelid_fkey
		FOREIGN KEY (netdevmodelid) REFERENCES netdevicemodels (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table files
#
CREATE TABLE files (
	id int(11) NOT NULL AUTO_INCREMENT,
	containerid int(11) NOT NULL,
	filename varchar(255) NOT NULL,
	contenttype varchar(255) NOT NULL,
	md5sum varchar(32) NOT NULL,
	PRIMARY KEY (id),
	INDEX md5sum (md5sum),
	UNIQUE KEY files_containerid_key (containerid, md5sum),
	FOREIGN KEY (containerid) REFERENCES filecontainers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table up_rights (Userpanel)
#
CREATE TABLE up_rights (
	id int(11) NOT NULL auto_increment,
	module varchar(255) NOT NULL DEFAULT '',
	name varchar(255) NOT NULL DEFAULT '',
	description varchar(255) DEFAULT '',
	setdefault tinyint(1) NOT NULL DEFAULT '0',
	PRIMARY KEY (id)
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table up_rights_assignments (Userpanel)
#
CREATE TABLE up_rights_assignments (
	id int(11) NOT NULL auto_increment,
	customerid int(11) DEFAULT NULL,
	rightid int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY (id),
	UNIQUE KEY up_right_assignment (customerid, rightid),
	CONSTRAINT up_rights_assignments_customerid_fkey
	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table up_customers (Userpanel)
#
CREATE TABLE up_customers (
	id int(11) NOT NULL auto_increment,
	customerid int(11) DEFAULT NULL,
	lastlogindate int(11) NOT NULL DEFAULT '0',
	lastloginip varchar(16) NOT NULL DEFAULT '',
	failedlogindate int(11) NOT NULL DEFAULT '0',
	failedloginip varchar(16) NOT NULL DEFAULT '',
	enabled int(10) NOT NULL DEFAULT '0',
	PRIMARY KEY (id),
	CONSTRAINT up_customers_customerid_fkey
	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table up_help (Userpanel)
#
CREATE TABLE up_help (
	id int(11) NOT NULL auto_increment,
	reference int(11) DEFAULT NULL,
	title varchar(128) NOT NULL DEFAULT '',
	body text NOT NULL DEFAULT '',
	PRIMARY KEY id (id),
	CONSTRAINT up_help_reference_fkey
		FOREIGN KEY (reference) REFERENCES up_help (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Structure of table up_info_changes (Userpanel)
#
CREATE TABLE up_info_changes (
	id int(11) NOT NULL auto_increment,
	customerid int(11) DEFAULT NULL,
	fieldname varchar(255) NOT NULL DEFAULT '',
	fieldvalue varchar(255) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	CONSTRAINT up_info_changes_customerid_fkey
	FOREIGN KEY (customerid) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# --------------------------------------------------------
#
# Functions and Views
#
CREATE VIEW nas AS
	SELECT n.id, inet_ntoa(n.ipaddr) AS nasname, d.shortname, d.nastype AS type,
				 d.clients AS ports, d.secret, d.community, d.description
	FROM nodes n
		JOIN netdevices d ON (n.netdev = d.id)
	WHERE n.nas = 1;

CREATE VIEW vnodes_mac AS
	SELECT nodeid, GROUP_CONCAT(mac SEPARATOR ',') AS mac
	FROM macs GROUP BY nodeid;

CREATE VIEW vaddresses AS
	SELECT a.*, c.ccode AS ccode, country_id AS countryid, city_id AS location_city, street_id AS location_street,
			  house AS location_house, flat AS location_flat,
			  (TRIM(both ' ' FROM
					CONCAT((CASE WHEN street IS NOT NULL THEN street ELSE city END),
						   (CASE WHEN house is NOT NULL
							   THEN (CASE WHEN flat IS NOT NULL THEN CONCAT(' ', house, '/', flat) ELSE CONCAT(' ', house) END)
							ELSE (CASE WHEN flat IS NOT NULL THEN CONCAT(' ', flat) ELSE '' END)
							END))
			  )) AS address,
			  (TRIM(both ' ' FROM
					CONCAT((CASE WHEN zip IS NOT NULL THEN CONCAT(zip, ' ') ELSE '' END),
						   (CASE WHEN postoffice IS NOT NULL AND postoffice <> city THEN CONCAT(postoffice, ', ') ELSE '' END),
						   (CASE WHEN postoffice IS NULL OR postoffice = city OR street IS NOT NULL THEN CONCAT(city, ', ') ELSE '' END),
						   (CASE WHEN street IS NOT NULL THEN street ELSE city END),
						   (CASE WHEN house is NOT NULL
							   THEN (CASE WHEN flat IS NOT NULL THEN CONCAT(' ', house, '/', flat) ELSE CONCAT(' ', house) END)
							ELSE (CASE WHEN flat IS NOT NULL THEN CONCAT(' ', flat) ELSE '' END)
							END)
					)
			  )) AS location
	FROM addresses a
    LEFT JOIN countries c ON c.id = a.country_id;

CREATE VIEW vdivisions AS
    SELECT d.*,
        a.country_id as countryid, a.ccode, a.zip as zip, a.city as city, a.address
    FROM divisions d
        JOIN vaddresses a ON a.id = d.address_id;

CREATE VIEW vnodes AS
    SELECT n.*, m.mac,
        a.ccode, a.city_id as location_city, a.street_id as location_street,
        a.house as location_house, a.flat as location_flat, a.location
    FROM nodes n
        LEFT JOIN vnodes_mac m ON (n.id = m.nodeid)
        LEFT JOIN vaddresses a ON n.address_id = a.id
    WHERE n.ipaddr <> 0 OR n.ipaddr_pub <> 0;

CREATE VIEW vnodetariffs_allsuspended AS
	SELECT customerid, COUNT(id) AS allsuspended FROM assignments
	WHERE tariffid IS NULL AND liabilityid IS NULL
		AND datefrom <= UNIX_TIMESTAMP()
		AND (dateto = 0 OR dateto > UNIX_TIMESTAMP())
	GROUP BY customerid;


CREATE VIEW vnodetariffs_tariffs AS
    SELECT n.id AS nodeid,
        ROUND(SUM(t.downrate * a.count)) AS downrate,
        ROUND(SUM(t.downceil * a.count)) AS downceil,
        SUM(t.down_burst_time) AS down_burst_time,
        SUM(t.down_burst_threshold) AS down_burst_threshold,
        SUM(t.down_burst_limit) AS down_burst_limit,
        ROUND(SUM(t.uprate * a.count)) AS uprate,
        ROUND(SUM(t.upceil * a.count)) AS upceil,
        SUM(t.up_burst_time) AS up_burst_time,
        SUM(t.up_burst_threshold) AS up_burst_threshold,
        SUM(t.up_burst_limit) AS up_burst_limit,
        ROUND(SUM(COALESCE(t.downrate_n, t.downrate) * a.count)) AS downrate_n,
        ROUND(SUM(COALESCE(t.downceil_n, t.downceil) * a.count)) AS downceil_n,
        SUM(COALESCE(t.down_burst_time_n, t.down_burst_time)) AS down_burst_time_n,
        SUM(COALESCE(t.down_burst_threshold_n, t.down_burst_threshold)) AS down_burst_threshold_n,
        SUM(COALESCE(t.down_burst_limit_n, t.down_burst_limit)) AS down_burst_limit_n,
        ROUND(SUM(COALESCE(t.uprate_n, t.uprate) * a.count)) AS uprate_n,
        ROUND(SUM(COALESCE(t.upceil_n, t.upceil) * a.count)) AS upceil_n,
        SUM(COALESCE(t.up_burst_time_n, t.up_burst_time)) AS up_burst_time_n,
        SUM(COALESCE(t.up_burst_threshold_n, t.up_burst_threshold)) AS up_burst_threshold_n,
        SUM(COALESCE(t.up_burst_limit_n, t.up_burst_limit)) AS up_burst_limit_n
    FROM nodes n
    JOIN nodeassignments na ON na.nodeid = n.id
    JOIN assignments a ON a.id = na.assignmentid
    JOIN tariffs t ON t.id = a.tariffid
    LEFT JOIN vnodetariffs_allsuspended s ON s.customerid = n.ownerid
    WHERE s.allsuspended IS NULL AND a.suspended = 0 AND a.commited = 1
        AND a.datefrom <= UNIX_TIMESTAMP()
        AND (a.dateto = 0 OR a.dateto >= UNIX_TIMESTAMP())
        AND (t.downrate > 0 OR t.downceil > 0 OR t.uprate > 0 OR t.upceil > 0)
    GROUP BY n.id;

CREATE VIEW vnodetariffs AS
	SELECT n.*,
		t.downrate, t.downceil,
		t.down_burst_time, t.down_burst_threshold, t.down_burst_limit,
		t.uprate, t.upceil,
		t.up_burst_time, t.up_burst_threshold, t.up_burst_limit,
		t.downrate_n, t.downceil_n,
		t.down_burst_time_n, t.down_burst_threshold_n, t.down_burst_limit_n,
		t.uprate_n, t.upceil_n,
		t.up_burst_time_n, t.up_burst_threshold_n, t.up_burst_limit_n,
		m.mac,
        a.ccode,
		a.city_id as location_city, a.street_id as location_street,
		a.house as location_house, a.flat as location_flat,
		a.location
	FROM nodes n
		JOIN vnodes_mac m ON m.nodeid = n.id
		LEFT JOIN vaddresses a ON n.address_id = a.id
		JOIN vnodetariffs_tariffs t ON t.nodeid = n.id
	WHERE n.ipaddr <> 0 OR n.ipaddr_pub <> 0;

CREATE VIEW vnodealltariffs_nodes AS
	SELECT vn.id,
		(CASE WHEN nd.id IS NULL THEN vn.ownerid ELSE nd.ownerid END) AS ownerid
	FROM vnodes vn
	LEFT JOIN netdevices nd ON nd.id = vn.netdev AND vn.ownerid IS NULL AND nd.ownerid IS NOT NULL
	WHERE (vn.ownerid IS NOT NULL AND nd.id IS NULL)
		OR (vn.ownerid IS NULL AND nd.id IS NOT NULL);

CREATE VIEW vnodealltariffs_tariffs AS
    SELECT n.id AS nodeid,
        ROUND(SUM(t.downrate * a.count)) AS downrate,
        ROUND(SUM(t.downceil * a.count)) AS downceil,
        SUM(t.down_burst_time) AS down_burst_time,
        SUM(t.down_burst_threshold) AS down_burst_threshold,
        SUM(t.down_burst_limit) AS down_burst_limit,
        ROUND(SUM(t.uprate * a.count)) AS uprate,
        ROUND(SUM(t.upceil * a.count)) AS upceil,
        SUM(t.up_burst_time) AS up_burst_time,
        SUM(t.up_burst_threshold) AS up_burst_threshold,
        SUM(t.up_burst_limit) AS up_burst_limit,
        ROUND(SUM(COALESCE(t.downrate_n, t.downrate) * a.count)) AS downrate_n,
        ROUND(SUM(COALESCE(t.downceil_n, t.downceil) * a.count)) AS downceil_n,
        SUM(COALESCE(t.down_burst_time_n, t.down_burst_time)) AS down_burst_time_n,
        SUM(COALESCE(t.down_burst_threshold_n, t.down_burst_threshold)) AS down_burst_threshold_n,
        SUM(COALESCE(t.down_burst_limit_n, t.down_burst_limit)) AS down_burst_limit_n,
        ROUND(SUM(COALESCE(t.uprate_n, t.uprate) * a.count)) AS uprate_n,
        ROUND(SUM(COALESCE(t.upceil_n, t.upceil) * a.count)) AS upceil_n,
        SUM(COALESCE(t.up_burst_time_n, t.up_burst_time)) AS up_burst_time_n,
        SUM(COALESCE(t.up_burst_threshold_n, t.up_burst_threshold)) AS up_burst_threshold_n,
        SUM(COALESCE(t.up_burst_limit_n, t.up_burst_limit)) AS up_burst_limit_n
    FROM assignments a
    JOIN tariffs t ON t.id = a.tariffid
    JOIN vnodealltariffs_nodes n ON n.ownerid = a.customerid
    LEFT JOIN vnodetariffs_allsuspended s ON s.customerid = a.customerid
    WHERE s.allsuspended IS NULL AND a.suspended = 0 AND a.commited = 1
        AND a.datefrom <= UNIX_TIMESTAMP()
        AND (a.dateto = 0 OR a.dateto >= UNIX_TIMESTAMP())
        AND (t.downrate > 0 OR t.downceil > 0 OR t.uprate > 0 OR t.upceil > 0)
        AND n.id NOT IN (SELECT nodeid FROM nodeassignments)
        AND a.id NOT IN (SELECT assignmentid FROM nodeassignments)
    GROUP BY n.id;

CREATE VIEW vnodealltariffs AS
	SELECT n.*,
		COALESCE(t1.downrate, t2.downrate, 0) AS downrate,
		COALESCE(t1.downceil, t2.downceil, 0) AS downceil,
		COALESCE(t1.down_burst_time, t2.down_burst_time, 0) AS down_burst_time,
		COALESCE(t1.down_burst_threshold, t2.down_burst_threshold, 0) AS down_burst_threshold,
		COALESCE(t1.down_burst_limit, t2.down_burst_limit, 0) AS down_burst_limit,
		COALESCE(t1.uprate, t2.uprate, 0) AS uprate,
		COALESCE(t1.upceil, t2.upceil, 0) AS upceil,
		COALESCE(t1.up_burst_time, t2.up_burst_time, 0) AS up_burst_time,
		COALESCE(t1.up_burst_threshold, t2.up_burst_threshold, 0) AS up_burst_threshold,
		COALESCE(t1.up_burst_limit, t2.up_burst_limit, 0) AS up_burst_limit,
		COALESCE(t1.downrate_n, t2.downrate_n, 0) AS downrate_n,
		COALESCE(t1.downceil_n, t2.downceil_n, 0) AS downceil_n,
		COALESCE(t1.down_burst_time_n, t2.down_burst_time_n, 0) AS down_burst_time_n,
		COALESCE(t1.down_burst_threshold_n, t2.down_burst_threshold_n, 0) AS down_burst_threshold_n,
		COALESCE(t1.down_burst_limit_n, t2.down_burst_limit_n, 0) AS down_burst_limit_n,
		COALESCE(t1.uprate_n, t2.uprate_n, 0) AS uprate_n,
		COALESCE(t1.upceil_n, t2.upceil_n, 0) AS upceil_n,
		COALESCE(t1.up_burst_time_n, t2.up_burst_time_n, 0) AS up_burst_time_n,
		COALESCE(t1.up_burst_threshold_n, t2.up_burst_threshold_n, 0) AS up_burst_threshold_n,
		COALESCE(t1.up_burst_limit_n, t2.up_burst_limit_n, 0) AS up_burst_limit_n,
		m.mac,
        a.ccode,
		a.city_id as location_city, a.street_id as location_street,
		a.house as location_house, a.flat as location_flat,
		a.location
	FROM nodes n
    JOIN vnodes_mac m ON m.nodeid = n.id
    LEFT JOIN vaddresses a ON a.id = n.address_id
    LEFT JOIN vnodetariffs_tariffs t1 ON t1.nodeid = n.id
    LEFT JOIN vnodealltariffs_tariffs t2 ON t2.nodeid = n.id
	WHERE (n.ipaddr <> 0 OR n.ipaddr_pub <> 0)
		  AND ((t1.nodeid IS NOT NULL AND t2.nodeid IS NULL)
			   OR (t1.nodeid IS NULL AND t2.nodeid IS NOT NULL)
			   OR (t1.nodeid IS NULL AND t2.nodeid IS NULL));

CREATE VIEW vmacs AS
    SELECT n.*, m.mac, m.id AS macid, a.ccode, a.city_id as location_city, a.street_id as location_street,
        a.house as location_building, a.flat as location_flat, a.location
    FROM nodes n
        JOIN macs m ON (n.id = m.nodeid)
        LEFT JOIN vaddresses a ON n.address_id = a.id
    WHERE n.ipaddr <> 0 OR n.ipaddr_pub <> 0;

DROP FUNCTION IF EXISTS lms_current_user;
CREATE FUNCTION lms_current_user() RETURNS int(11) NO SQL
RETURN @lms_current_user;

CREATE VIEW customerconsentview AS
    SELECT c.id AS customerid,
        SUM(CASE WHEN cc.type = 1 THEN cc.cdate ELSE 0 END)  AS consentdate,
        SUM(CASE WHEN cc.type = 2 THEN 1 ELSE 0 END) AS invoicenotice,
        SUM(CASE WHEN cc.type = 3 THEN 1 ELSE 0 END) AS mailingnotice,
        SUM(CASE WHEN cc.type = 8 THEN 1 ELSE 0 END) AS smsnotice,
        SUM(CASE WHEN cc.type = 4 THEN 1 ELSE 0 END) AS einvoice
    FROM customers c
        LEFT JOIN customerconsents cc ON cc.customerid = c.id
    GROUP BY c.id;

CREATE VIEW customerview AS
    SELECT c.*,
        cc.consentdate AS consentdate,
        cc.invoicenotice AS invoicenotice,
        cc.mailingnotice AS mailingnotice,
        cc.smsnotice AS smsnotice,
        cc.einvoice AS einvoice,
        a1.country_id as countryid, a1.ccode,
        a1.zip as zip, a1.city as city,
        a1.street as street, a1.house as building, a1.flat as apartment,
        a2.country_id as post_countryid, a2.ccode AS post_ccode,
        a2.zip as post_zip, a2.city as post_city,
        a2.street as post_street, a2.house as post_building, a2.flat as post_apartment,
        a2.name as post_name, a1.address as address, a1.location AS full_address,
        a1.postoffice AS postoffice,
        a2.address as post_address, a2.location AS post_full_address,
        a2.postoffice AS post_postoffice
    FROM customers c
        JOIN customer_addresses ca1 ON c.id = ca1.customer_id AND ca1.type = 1
        LEFT JOIN vaddresses a1 ON ca1.address_id = a1.id
        LEFT JOIN customer_addresses ca2 ON c.id = ca2.customer_id AND ca2.type = 0
        LEFT JOIN vaddresses a2 ON ca2.address_id = a2.id
        LEFT JOIN customerconsentview cc ON cc.customerid = c.id
    WHERE NOT EXISTS (
        SELECT 1 FROM customerassignments a
        JOIN excludedgroups e ON (a.customergroupid = e.customergroupid)
        WHERE e.userid = lms_current_user() AND a.customerid = c.id)
        AND c.divisionid IN (
            SELECT ud.divisionid
            FROM userdivisions ud
            WHERE ud.userid = lms_current_user())
        AND c.type < 2;

CREATE VIEW vusers AS
    SELECT u.*, CONCAT(u.firstname, ' ', u.lastname) AS name, CONCAT(u.lastname, ' ', u.firstname) AS rname
    FROM users u
    LEFT JOIN userdivisions ud ON u.id = ud.userid
    WHERE lms_current_user() = 0 OR ud.divisionid IN (SELECT ud2.divisionid
                             FROM userdivisions ud2
                             WHERE ud2.userid = lms_current_user())
    GROUP BY u.id;

CREATE VIEW vallusers AS
	SELECT *, CONCAT(firstname, ' ', lastname) AS name, CONCAT(lastname, ' ', firstname) AS rname
	FROM users;

CREATE VIEW contractorview AS
    SELECT c.*,
        cc.consentdate AS consentdate,
        cc.invoicenotice AS invoicenotice,
        cc.mailingnotice AS mailingnotice,
        cc.smsnotice AS smsnotice,
        cc.einvoice AS einvoice,
        a1.country_id as countryid, a1.ccode,
        a1.zip as zip, a1.city as city, a1.street as street,
        a1.house as building, a1.flat as apartment,
        a2.country_id as post_countryid, a2.ccode AS post_ccode,
        a2.zip as post_zip, a2.city as post_city, a2.street as post_street,
        a2.house as post_building, a2.flat as post_apartment, a2.name as post_name,
        a1.address as address, a1.location AS full_address,
        a1.postoffice AS postoffice,
        a2.address as post_address, a2.location AS post_full_address,
        a2.postoffice AS post_postoffice
    FROM customers c
        JOIN customer_addresses ca1 ON c.id = ca1.customer_id AND ca1.type = 1
        LEFT JOIN vaddresses a1 ON ca1.address_id = a1.id
        LEFT JOIN customer_addresses ca2 ON c.id = ca2.customer_id AND ca2.type = 0
        LEFT JOIN vaddresses a2 ON ca2.address_id = a2.id
        LEFT JOIN customerconsentview cc ON cc.customerid = c.id
    WHERE c.type = 2;

CREATE VIEW customeraddressview AS
    SELECT c.*,
        cc.consentdate AS consentdate,
        cc.invoicenotice AS invoicenotice,
        cc.mailingnotice AS mailingnotice,
        cc.smsnotice AS smsnotice,
        cc.einvoice AS einvoice,
        a1.country_id as countryid, a1.ccode,
        a1.zip as zip, a1.city as city, a1.street as street,
        a1.house as building, a1.flat as apartment,
        a2.country_id as post_countryid, a2.ccode AS post_ccode,
        a2.zip as post_zip, a2.city as post_city, a2.street as post_street,
        a2.house as post_building, a2.flat as post_apartment, a2.name as post_name,
        a1.address as address, a1.location AS full_address,
        a1.postoffice AS postoffice,
        a2.address as post_address, a2.location AS post_full_address,
        a2.postoffice AS post_postoffice
    FROM customers c
        JOIN customer_addresses ca1 ON c.id = ca1.customer_id AND ca1.type = 1
        LEFT JOIN vaddresses a1 ON ca1.address_id = a1.id
        LEFT JOIN customer_addresses ca2 ON c.id = ca2.customer_id AND ca2.type = 0
        LEFT JOIN vaddresses a2 ON ca2.address_id = a2.id
        LEFT JOIN customerconsentview cc ON cc.customerid = c.id
    WHERE c.type < 2;

CREATE VIEW teryt_terc AS
SELECT ident AS woj, '0' AS pow, '0' AS gmi, 0 AS rodz,
        UPPER(name) AS nazwa
    FROM location_states
    UNION
    SELECT s.ident AS woj, d.ident AS pow, '0' AS gmi, 0 AS rodz,
        d.name AS nazwa
    FROM location_districts d
    JOIN location_states s ON (d.stateid = s.id)
    UNION
    SELECT s.ident AS woj, d.ident AS pow, b.ident AS gmi, b.type AS rodz,
        b.name AS nazwa
    FROM location_boroughs b
    JOIN location_districts d ON (b.districtid = d.id)
    JOIN location_states s ON (d.stateid = s.id);

CREATE VIEW teryt_simc AS
SELECT s.ident AS woj, d.ident AS pow, b.ident AS gmi, b.type AS rodz_gmi,
        c.ident AS sym, c.id AS cityid, c.name AS nazwa,
        COALESCE(cc.ident, c.ident) AS sympod,
        COALESCE(cc.id, c.id) AS subcityid
    FROM location_cities c
    JOIN location_boroughs b ON (c.boroughid = b.id)
    JOIN location_districts d ON (b.districtid = d.id)
    JOIN location_states s ON (d.stateid = s.id)
    LEFT JOIN location_cities cc ON (c.cityid = cc.id);

CREATE VIEW teryt_ulic AS
SELECT st.ident AS woj, d.ident AS pow, b.ident AS gmi, b.type AS rodz_gmi,
        c.ident AS sym, s.ident AS sym_ul, s.name AS nazwa_1, s.name2 AS nazwa_2, t.name AS cecha, s.id
    FROM location_streets s
    JOIN location_street_types t ON (s.typeid = t.id)
    JOIN location_cities c ON (s.cityid = c.id)
    JOIN location_boroughs b ON (c.boroughid = b.id)
    JOIN location_districts d ON (b.districtid = d.id)
    JOIN location_states st ON (d.stateid = st.id);

CREATE VIEW customermailsview AS
		SELECT customerid, GROUP_CONCAT(contact SEPARATOR ',') AS email
			FROM customercontacts
			WHERE (type & 8) > 0 AND contact <> ''
			GROUP BY customerid;

DROP FUNCTION IF EXISTS mask2prefix;
CREATE FUNCTION mask2prefix(mask bigint) RETURNS smallint DETERMINISTIC
RETURN bit_count(mask);

CREATE VIEW vnetworks AS
    SELECT h.name AS hostname, ne.*, no.ownerid, a.ccode, a.city_id as location_city,
        a.street_id as location_street, a.house as location_house,
        a.flat as location_flat, no.chkmac, CONCAT(inet_ntoa(ne.address), '/',
        mask2prefix(inet_aton(ne.mask))) AS ip, no.id AS nodeid, a.location
    FROM nodes no
        LEFT JOIN networks ne ON (ne.id = no.netid)
        LEFT JOIN hosts h ON (h.id = ne.hostid)
        LEFT JOIN vaddresses a ON no.address_id = a.id
    WHERE no.ipaddr = 0 AND no.ipaddr_pub = 0;

DROP FUNCTION IF EXISTS broadcast;
CREATE FUNCTION broadcast(address bigint, mask bigint) RETURNS bigint DETERMINISTIC
RETURN address + (pow(2, (32-mask2prefix(mask)))-1);

DROP FUNCTION IF EXISTS int2txt;
CREATE FUNCTION int2txt(num bigint) RETURNS char(20) DETERMINISTIC
RETURN CAST(num AS char(20));

DELIMITER $$
CREATE TRIGGER cash_customerbalances_insert_trigger AFTER INSERT ON cash
    FOR EACH ROW
    BEGIN
        IF NEW.customerid IS NOT NULL THEN
            IF EXISTS (SELECT 1 FROM customerbalances WHERE customerid = NEW.customerid) THEN
                UPDATE customerbalances SET balance = (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = NEW.customerid) WHERE customerid = NEW.customerid;
            ELSE
                INSERT INTO customerbalances (customerid, balance) VALUES (NEW.customerid, (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = NEW.customerid));
            END IF;
        END IF;
    END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER cash_customerbalances_update_trigger AFTER UPDATE ON cash
    FOR EACH ROW
    BEGIN
        IF OLD.value <> NEW.value OR OLD.currencyvalue <> NEW.currencyvalue THEN
            IF OLD.customerid IS NOT NULL AND OLD.customerid <> NEW.customerid THEN
                IF EXISTS (SELECT 1 FROM customerbalances WHERE customerid = OLD.customerid) THEN
                    UPDATE customerbalances SET balance = (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = OLD.customerid) WHERE customerid = OLD.customerid;
                ELSE
                    INSERT INTO customerbalances (customerid, balance) VALUES (OLD.customerid, (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = OLD.customerid));
                END IF;
            END IF;
            IF NEW.customerid IS NOT NULL THEN
                IF EXISTS (SELECT 1 FROM customerbalances WHERE customerid = NEW.customerid) THEN
                    UPDATE customerbalances SET balance = (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = NEW.customerid) WHERE customerid = NEW.customerid;
                ELSE
                    INSERT INTO customerbalances (customerid, balance) VALUES (NEW.customerid, (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = NEW.customerid));
                END IF;
            END IF;
        END IF;
    END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER cash_customerbalances_delete_trigger AFTER DELETE ON cash
    FOR EACH ROW
    BEGIN
        IF OLD.customerid IS NOT NULL THEN
            IF NOT EXISTS (SELECT 1 FROM cash WHERE customerid = OLD.customerid) THEN
                DELETE FROM customerbalances WHERE customerid = OLD.customerid;
            ELSE
                IF EXISTS (SELECT 1 FROM customerbalances WHERE customerid = OLD.customerid) THEN
                    UPDATE customerbalances SET balance = (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = OLD.customerid) WHERE customerid = OLD.customerid;
                ELSE
                    INSERT INTO customerbalances (customerid, balance) VALUES (OLD.customerid, (SELECT SUM(value * currencyvalue) FROM cash WHERE customerid = OLD.customerid));
                END IF;
            END IF;
        END IF;
    END $$
DELIMITER ;

INSERT INTO rtcategories (name, description, style)
	VALUES ('default', 'default category', 'background-color:#ffffff;color:#000000');

INSERT INTO up_rights(module, name, description)
	VALUES ('info', 'edit_addr_ack', 'Customer can change address information with admin acknowlegment');
INSERT INTO up_rights(module, name, description)
        VALUES ('info', 'edit_addr', 'Customer can change address information');
INSERT INTO up_rights(module, name, description, setdefault)
        VALUES ('info', 'edit_contact_ack', 'Customer can change contact information with admin acknowlegment', 0);
INSERT INTO up_rights(module, name, description)
        VALUES ('info', 'edit_contact', 'Customer can change contact information');

INSERT INTO countries (name, ccode) VALUES
('Lithuania', 'lt_LT'),
('Poland', 'pl_PL'),
('Romania', 'ro_RO'),
('Slovakia', 'sk_SK'),
('USA', 'en_US'),
('Czech', 'cs_CZ'),
('Guyana', 'en_GY');

INSERT INTO addresses (name) VALUES ('default');
INSERT INTO divisions (shortname, name, address_id) VALUES ('default', 'default', (SELECT MAX(id) FROM addresses));

INSERT INTO nastypes (name) VALUES
('mikrotik_snmp'),
('cisco'),
('computone'),
('livingston'),
('max40xx'),
('multitech'),
('netserver'),
('pathras'),
('patton'),
('portslave'),
('tc'),
('usrhiper'),
('other');

INSERT INTO uiconfig (section, var, value, description, disabled) VALUES
('phpui','default_autosuggest_placement','bottom','',0),
('phpui','autosuggest_max_length','40','',0),
('phpui','lang','','',0),
('phpui','allow_from','','',0),
('phpui','default_module','welcome','',0),
('phpui','timeout','600','',0),
('phpui','settings_timeout','28800','',0),
('phpui','customerlist_pagelimit','100','',0),
('phpui','billinglist_pagelimit','100','',0),
('phpui','nodelist_pagelimit','100','',0),
('phpui','balancelist_pagelimit','100','',0),
('phpui','invoicelist_pagelimit','100','',0),
('phpui','debitnotelist_pagelimit','100','',0),
('phpui','ticketlist_pagelimit','100','',0),
('phpui','accountlist_pagelimit','100','',0),
('phpui','domainlist_pagelimit','100','',0),
('phpui','aliaslist_pagelimit','100','',0),
('phpui','configlist_pagelimit','100','',0),
('phpui','receiptlist_pagelimit','100','',0),
('phpui','taxratelist_pagelimit','100','',0),
('phpui','numberplanlist_pagelimit','100','',0),
('phpui','divisionlist_pagelimit','100','',0),
('phpui','documentlist_pagelimit','100','',0),
('phpui','voipaccountlist_pagelimit','100','',0),
('phpui','networkhosts_pagelimit','256','',0),
('phpui','messagelist_pagelimit','100','',0),
('phpui','recordlist_pagelimit','100','',0),
('phpui','cashreglog_pagelimit','100','',0),
('phpui','networklist_pagelimit','100','',0),
('phpui','reload_type','sql','',0),
('phpui','reload_execcmd','/bin/true','',0),
('phpui','reload_sqlquery','','',0),
('phpui','lastonline_limit','600','',0),
('phpui','timetable_days_forward','7','',0),
('phpui','gd_translate_to','ISO-8859-2','',0),
('phpui','check_for_updates_period','86400','',0),
('phpui','homedir_prefix','/home/','',0),
('phpui','default_taxrate','23','',0),
('phpui','default_zip','','',0),
('phpui','default_city','','',0),
('phpui','default_address','','',0),
('phpui','smarty_debug','false','',0),
('phpui','force_ssl','false','',0),
('phpui','allow_mac_sharing','false','',0),
('phpui','big_networks','false','',0),
('phpui','short_pagescroller','false','',0),
('phpui','helpdesk_stats','true','',0),
('phpui','helpdesk_customerinfo','true','',0),
('phpui','helpdesk_customerinfo_mail_body','--
Klient: %custname ID: %cid
Adres: %address
E-mail: %email
Telefon: %phone','',0),
('phpui','helpdesk_customerinfo_sms_body','Klient: %custname ID: %cid Adres: %address Telefon: %phone','',0),
('phpui','helpdesk_backend_mode','false','',0),
('phpui','helpdesk_sender_name','','',0),
('phpui','helpdesk_reply_body','false','',0),
('phpui','helpdesk_notification_mail_subject','[RT#%tid] %subject','',0),
('phpui','helpdesk_notification_mail_body','%body

URL: %url

%customerinfo','',0),
('phpui','helpdesk_notification_sms_body','[RT#%tid] %subject: %body %customerinfo','',0),
('phpui','use_invoices','false','',0),
('phpui','ticket_template_file','rtticketprint.html','',0),
('phpui','use_current_payday','false','',0),
('phpui','default_monthly_payday','','',0),
('phpui','newticket_notify','false','',0),
('phpui','to_words_short_version','false','',0),
('phpui','ticketlist_status','','',0),
('phpui','ewx_support','false','',0),
('phpui','invoice_check_payment','false','',0),
('phpui','note_check_payment','false','',0),
('phpui','radius','1','',0),
('phpui','public_ip','1','',0),
('phpui','default_assignment_period','3','',0),
('phpui','default_assignment_invoice','0','',0),
('phpui','default_editor','html','',0),
('phpui','logging','false','',0),
('phpui','hide_toolbar','false','',0),
('phpui','add_customer_group_required','false','',0),
('phpui','document_margins','10,5,15,5','',0),
('phpui', 'quicksearch_limit', '15','', 0),
('phpui', 'ping_type', '1','', 0),
('phpui', 'default_teryt_city', 'false', '', 0),
('phpui', 'passwordhistory', 6, '', 0),
('phpui', 'event_usergroup_selection_type', 'update', '', 0),
('phpui', 'force_global_division_context', 'false', '', 0),
('payments', 'date_format', '%Y/%m/%d', '', 0),
('payments', 'default_unit_name', 'pcs.', '', 0),
('voip', 'default_cost_limit', '200','', 2),
('invoices','template_file','invoice.html','',0),
('invoices','content_type','text/html','',0),
('invoices','cnote_template_file','invoice.html','',0),
('invoices','print_balance_history','false','',0),
('invoices','print_balance_history_limit','10','',0),
('invoices','default_printpage','original,copy','',0),
('invoices','type','html','',0),
('invoices','attachment_name','','',0),
('invoices','paytime','14','',0),
('invoices','paytype','1','',0),
('notes','template_file','note.html','',0),
('notes','content_type','text/html','',0),
('notes','type','html','',0),
('notes','attachment_name','','',0),
('notes','paytime','14','',0),
('receipts','template_file','receipt.html','',0),
('receipts','content_type','text/html','',0),
('receipts','type','html','',0),
('receipts','attachment_name','','',0),
('finances','suspension_percentage','0','',0),
('mail','debug_email','','',0),
('mail','smtp_host','127.0.0.1','',0),
('mail','smtp_port','25','',0),
('mail', 'backend', 'pear', '', 0),
('mail', 'smtp_secure', 'tls', '', 0),
('zones','hostmaster_mail','hostmaster.localhost','',0),
('zones','master_dns','localhost','',0),
('zones','slave_dns','localhost','',0),
('zones','default_ttl','3600','',0),
('zones','ttl_refresh','28800','',0),
('zones','ttl_retry','7200','',0),
('zones','ttl_expire','604800','',0),
('zones','ttl_minimum','86400','',0),
('zones','default_webserver_ip','127.0.0.1','',0),
('zones','default_mailserver_ip','127.0.0.1','',0),
('zones','default_mx','localhost','',0),
('userpanel','data_consent_text','','',0),
('userpanel','disable_transferform','0','',0),
('userpanel','disable_invoices','0','',0),
('userpanel','invoice_duplicate','0','',0),
('userpanel','show_tariffname','1','',0),
('userpanel','show_speeds','1','',0),
('userpanel','show_period','1','',0),
('userpanel','queues','1','',0),
('userpanel','tickets_from_selected_queues','0','',0),
('userpanel','allow_message_add_to_closed_tickets','1','',0),
('userpanel','limit_ticket_movements_to_selected_queues','0','',0),
('userpanel','default_userid','0','',0),
('userpanel','debug_email','','',0),
('userpanel','lms_url','','',0),
('userpanel','hide_nodesbox','0','',0),
('userpanel', 'hide_documentbox', '0', '', 0),
('userpanel','logout_url','','',0),
('userpanel','owner_stats','1','',0),
('userpanel','default_categories','1','',0),
('userpanel','auth_type','1','',0),
('userpanel', 'show_confirmed_documents_only', 'false', '', 0),
('userpanel', 'module_order', '', '', 0),
('userpanel', 'visible_ticket_sources', '0;1;2;3;4;5;6;7', '', 0),
('userpanel', 'change_notification_mail_sender', '', '', 0),
('userpanel', 'change_notification_mail_recipient', '', '', 0),
('userpanel', 'change_notification_mail_subject', '', '', 0),
('userpanel', 'change_notification_mail_body', '', '', 0),
('userpanel', 'change_confirmation_mail_subject', '', '', 0),
('userpanel', 'change_confirmation_mail_body', '', '', 0),
('userpanel', 'change_rejection_mail_subject', '', '', 0),
('userpanel', 'change_rejection_mail_body', '', '', 0),
('userpanel', 'document_notification_mail_dsn_address', '', '', 0),
('userpanel', 'document_notification_mail_mdn_address', '', '', 0),
('userpanel', 'document_notification_mail_reply_address', '', '', 0),
('userpanel', 'document_notification_mail_sender_name', '', '', 0),
('userpanel', 'document_notification_mail_sender_address', '', '', 0),
('userpanel', 'signed_document_scan_operator_notification_mail_recipient', '', '', 0),
('userpanel', 'signed_document_scan_operator_notification_mail_format', 'text', '', 0),
('userpanel', 'signed_document_scan_operator_notification_mail_subject', '', '', 0),
('userpanel', 'signed_document_scan_operator_notification_mail_body', '', '', 0),
('userpanel', 'signed_document_scan_customer_notification_mail_format', 'text', '', 0),
('userpanel', 'signed_document_scan_customer_notification_mail_subject', '', '', 0),
('userpanel', 'signed_document_scan_customer_notification_mail_body', '', '', 0),
('userpanel', 'document_approval_customer_notification_mail_format', 'text', '', 0),
('userpanel', 'document_approval_customer_notification_mail_subject', '', '', 0),
('userpanel', 'document_approval_customer_notification_mail_body', '', '', 0),
('userpanel', 'document_approval_customer_onetime_password_sms_body', '', '', 0),
('userpanel', 'google_recaptcha_sitekey', '', '', 0),
('userpanel', 'google_recaptcha_secret', '', '', 0),
('userpanel', 'allow_reopen_tickets_newer_than', '0', '', 0),
('userpanel', 'pin_changes', 'true', '', 0),
('userpanel', 'show_last_years', '5', '', 0),
('userpanel', 'aggregate_documents', '0', '', 0),
('userpanel', 'speed_unit_type', '1000', '', 0),
('userpanel', 'speed_unit_aggregation_threshold', '5', '', 0),
('userpanel', 'shortcut_icon', '', '', 0),
('userpanel', 'timeout', '600', '', 0),
('userpanel', 'hide_archived_documents', 'false', '', 0),
('userpanel', 'sms_credential_reminders', 'true', '', 0),
('userpanel', 'mail_credential_reminders', 'true', '', 0),
('userpanel', 'startup_module', 'info', '', 0),
('directories','userpanel_dir','userpanel','',0);

INSERT INTO invprojects (name, type) VALUES ('inherited', 1);

INSERT INTO netdeviceproducers (id, name) VALUES
(1, 'Mikrotik'),
(2, 'Ubiquiti');

INSERT INTO netdevicemodels (name, alternative_name, netdeviceproducerid) VALUES
('RB750', NULL, 1),
('RB750UP', NULL, 1),
('RB750GL', NULL, 1),
('PowerBox', NULL, 1),
('RB2011iL-IN', NULL, 1),
('RB2011iL-RM', NULL, 1),
('RB2011iLS-IN', NULL, 1),
('RB2011UiAS-IN', NULL, 1),
('RB2011UiAS-RM', NULL, 1),
('RB1100AHx2', NULL, 1),
('CCR1009-8G-1S', NULL, 1),
('CCR1009-8G-1S-1S+', NULL, 1),
('CCR1009-8G-1S-1S+PC', NULL, 1),
('CCR1016-12S-1S+', NULL, 1),
('CCR1016-12G', NULL, 1),
('CCR1036-12G-4S', NULL, 1),
('CCR1036-8G-2S+', NULL, 1),
('CCR1036-12G-4S-EM', NULL, 1),
('CCR1036-8G-2S+EM', NULL, 1),
('RB1100AHx2-LM', NULL, 1),
('RB750G', NULL, 1),
('RB1000', NULL, 1),
('RB1000U', NULL, 1),
('RB1100', NULL, 1),
('RB1100Hx2', NULL, 1),
('RB1100AH', NULL, 1),
('RB1200', NULL, 1),
('RB260GS', NULL, 1),
('RB260GSP', NULL, 1),
('CRS109-8G-1S-2HnD-IN', NULL, 1),
('CRS210-8G-2S+IN', NULL, 1),
('CRS212-1G-10S-1S+IN', NULL, 1),
('CRS125-24G-1S-IN', NULL, 1),
('CRS125-24G-1S-RM', NULL, 1),
('CRS125-24G-1S-2HnD-IN', NULL, 1),
('CRS226-24G-2S+IN', NULL, 1),
('CRS226-24G-2S+RM', NULL, 1),
('RB250GS', NULL, 1),
('NetMetal 5', NULL, 1),
('SXT 5 ac', NULL, 1),
('SXT SA5 ac', NULL, 1),
('NetBox 5', NULL, 1),
('SXT Lite2', NULL, 1),
('SXT Lite5', NULL, 1),
('Groove 52HPn', NULL, 1),
('GrooveA 52HPn', NULL, 1),
('SXT 2', NULL, 1),
('SXT 5', NULL, 1),
('BaseBox 2', NULL, 1),
('BaseBox 5', NULL, 1),
('OmniTIK U-5HnD', NULL, 1),
('SXT HG5', NULL, 1),
('SXT SA5', NULL, 1),
('OmniTIK UPA-5HnD', NULL, 1),
('Metal 9HPn', NULL, 1),
('Metal 2SHPn', NULL, 1),
('Metal 5SHPn', NULL, 1),
('SEXTANT G 5HPnD', NULL, 1),
('QRT 2', NULL, 1),
('QRT 5', NULL, 1),
('SXT Sixpack', NULL, 1),
('SXT 5HnD', NULL, 1),
('SXT G-5HnD', NULL, 1),
('RB951-2n', NULL, 1),
('mAP 2n', NULL, 1),
('cAP 2n', NULL, 1),
('RB951Ui-2HnD', NULL, 1),
('RB951G-2HnD', NULL, 1),
('RB2011UiAS-2HnD-IN', NULL, 1),
('RB751U-2HnD', NULL, 1),
('RB751G-2HnD', NULL, 1),
('911 Lite2', NULL, 1),
('911 Lite5', NULL, 1),
('RB411L', NULL, 1),
('911 Lite5 dual', NULL, 1),
('RB411', NULL, 1),
('RB911G-2HPnD', NULL, 1),
('RB450', NULL, 1),
('RB411GL', NULL, 1),
('RB911G-5HPnD', NULL, 1),
('RB411U', NULL, 1),
('RB911G-5HPacD', NULL, 1),
('RB912UAG-2HPnD', NULL, 1),
('RB912UAG-5HPnD', NULL, 1),
('RB411AR', NULL, 1),
('RB433UL', NULL, 1),
('RB433', NULL, 1),
('RB450G', NULL, 1),
('RB411AH', NULL, 1),
('RB922UAGS-5HPacD', NULL, 1),
('RB850Gx2', NULL, 1),
('RB433GL', NULL, 1),
('RB433AH', NULL, 1),
('RB953GS-5HnT-RP', NULL, 1),
('RB493AH', NULL, 1),
('RB435G', NULL, 1),
('RB493G', NULL, 1),
('RB800', NULL, 1),
('RB433UAH', NULL, 1),
('RB411UAHL', NULL, 1),
('RB493', NULL, 1),
('RB711-5Hn', NULL, 1),
('RB711-2Hn', NULL, 1),
('RB2011L', NULL, 1),
('RB2011LS', NULL, 1),
('RB433L', NULL, 1),
('RB2011UiAS-2HnD', NULL, 1),
('RB711-5Hn-U', NULL, 1),
('RB411UAHR', NULL, 1),
('RB433UAHL', NULL, 1),
('RB711GA-5HnD', NULL, 1),
('RB711A-5Hn-M', NULL, 1),
('CCR1016-12G-BU', NULL, 1),
('RB411R', NULL, 1),
('RB711-5Hn-M', NULL, 1),
('RB600A', NULL, 1),
('Crossroads', NULL, 1),
('RB411A', NULL, 1),
('CA411-711', NULL, 1),
('CA150', NULL, 1),
('CA433U', NULL, 1),
('CA493', NULL, 1),
('CA800', NULL, 1),
('CAOTS', NULL, 1),
('CAOTU', NULL, 1),
('S-RJ01', NULL, 1),
('S-85DLC05D', NULL, 1),
('S-31DLC20D', NULL, 1),
('S-3553LC20D', NULL, 1),
('S+85DLC03D', NULL, 1),
('S+31DLC10D', NULL, 1),
('S+2332LC10D', NULL, 1),
('SFP+ 1m direct attach cable', NULL, 1),
('SFP+ 3m direct attach cable', NULL, 1),
('R11e-2HnD', NULL, 1),
('R11e-2HPnD', NULL, 1),
('R11e-5HnD', NULL, 1),
('R11e-5HacD', NULL, 1),
('R2SHPn', NULL, 1),
('R5SHPn', NULL, 1),
('R52nM', NULL, 1),
('R52H', NULL, 1),
('R52Hn', NULL, 1),
('RB14e', NULL, 1),
('RB14eU', NULL, 1),
('RB44Ge', NULL, 1),
('RB502', NULL, 1),
('RB604', NULL, 1),
('IAMP1E', NULL, 1),
('R5H', NULL, 1),
('R5nH', NULL, 1),
('R2N', NULL, 1),
('R52N', NULL, 1),
('RB44GV', NULL, 1),
('R52', NULL, 1),
('IAMP1', NULL, 1),
('FTC', NULL, 1),
('Flex-guide', NULL, 1),
('MMCX-RPSMA pigtail', NULL, 1),
('2.4Ghz Dipole', NULL, 1),
('RB2011 mount', NULL, 1),
('48 to 24V PoE Converter', NULL, 1),
('18POW', NULL, 1),
('24HPOW', NULL, 1),
('48POW', NULL, 1),
('5VUSB', NULL, 1),
('RBPOE', NULL, 1),
('RBGPOE', NULL, 1),
('ACUFL', NULL, 1),
('ACMMCX', NULL, 1),
('ACSWI', NULL, 1),
('ACSWIM', NULL, 1),
('Radome Cover Kit', NULL, 1),
('mANT30 PA', NULL, 1),
('mANT30', NULL, 1);

INSERT INTO netdevicemodels (name, alternative_name, netdeviceproducerid) VALUES
('3391-A', 'SR71A', 2),
('AF-24', 'AIRFIBER 1.4GBPS+ BACKHAUL 24GHZ (SHIPPED AS SINGLES)', 2),
('AF-5', 'AIRFIBER 1GBPS+ BACKHAUL 5.4-5.8GHZ', 2),
('AG-HP-2G16', '2.4GHZ AIRGRID AIRMAX 16DBI', 2),
('AG-HP-2G20', '5PK 2.4GHZ AIRGRID AIRMAX 20DBI', 2),
('AG-HP-5G23', '5PK 5GHZ AIRGRID AIRMAX 23DBI', 2),
('AG-HP-5G27', '5PK 5GHZ AIRGRID AIRMAX 27DBI', 2),
('AIRCAM', 'AIRCAM', 2),
('AIRCAM-3', 'AIRCAM 3-PACK', 2),
('AIRCAM-DOME', 'AIRCAM DOME', 2),
('AIRCAM-DOME-3', 'AIRCAM-DOME 3PK SOLUTION 3 PACK', 2),
('AIRCAM-MINI', 'AIRCAM-MINI VIDEO SOLUTION', 2),
('AIRGATEWAY', 'AIRGATEWAY INDOOR AP', 2),
('AIRGATEWAY-LR', 'AIRGATEWAY INDOOR AP LONG RANGE ANTENNA', 2),
('AIRROUTER', 'AIRROUTER INDOOR AP', 2),
('AIRROUTER-HP', 'AIRROUTER INDOOR AP HP EXT ANT', 2),
('AIRVISION-C', 'AIRVISION NVR CONTROLLER', 2),
('AM-2G15-120', '2.3-2.7GHZ AIRMAX BASE STATION 15DBI 120 DEG W/ ROCKET KIT', 2),
('AM-2G16-90', '2.3-2.7GHZ AIRMAX BASE STATION 16DBI 90DEG W/ ROCKET KIT', 2),
('AM-3G18-120', '3.3-3.8GHZ AIRMAX BASE STATION 18DBI 120 DEG W/ROCKET KIT', 2),
('AM-5AC21-60', '5G AIRMAX AC 60 DEGREES SECTOR ANTENNA 21DBI', 2),
('AM-5AC22-45', '5G AIRMAX AC 45 DEGREES SECTOR ANTENNA 22DBI', 2),
('AM-5G16-120', '4.9-5.9GHZ AIRMAX BASE STATION 16DBI 120 DEG W/ ROCKET KIT', 2),
('AM-5G17-90', '4.9-5.9GHZ AIRMAX BASE STATION 17DBI 90 DEG W/ROCKET KIT', 2),
('AM-5G19-120', '4.9-5.9GHZ AIRMAX BASE STATION 19DBI 120 DEG W/ ROCKET KIT', 2),
('AM-5G20-90', '4.9-5.9GHZ AIRMAX BASE STATION 20DBI 90 DEG W/ ROCKET KIT', 2),
('AM-9M13-120', '900MHZ AIRMAX BASE STATION 13DBI', 2),
('AM-M-V5G-TI', '5GHZ VARIABLE BEAM BASE STATION MID-GAIN 60-120DEG TI W/ ROCKET KIT', 2),
('AMO-2G10', '2GHZ AIRMAX DUAL OMNI 10DBI W/ ROCKET KIT', 2),
('AMO-2G13', '2GHZ AIRMAX DUAL OMNI 13DBI W/ ROCKET KIT', 2),
('AMO-3G12', '3GHZ AIRMAX DUAL OMNI 12DBI W/ ROCKET KIT', 2),
('AMO-5G10', '5GHZ AIRMAX DUAL OMNI 10DBI W/ ROCKET KIT', 2),
('AMO-5G13', '5GHZ AIRMAX DUAL OMNI 13DBI W/ ROCKET KIT', 2),
('AM-V2G-TI', '2GHZ VARIABLE BEAM BASE STATION 60-120DEG TITANIUM W/ROCKET KIT', 2),
('AM-V5G-TI', '5GHZ VARIABLE BEAM BASE STATION 60-120DEG TITANIUM W/ROCKET KIT', 2),
('AMY-9M16-2', '900MHZ AIRMAX YAGI ANTENNA 16DBI W/ ROCKET KIT 2-PACK', 2),
('BM2-TI', '2.4GHZ BULLET AIRMAX TITANIUM POE/ADAPTER INCL', 2),
('BULLET5', 'BULLET5 CPE', 2),
('BULLETM2-HP', '2.4GHZ BULLET AIRMAX HP', 2),
('BULLETM5-HP', '5GHZ BULLET AIRMAX HP', 2),
('BULLETM5-TI', '5GHZ BULLET AIRMAX TITANIUM POE/ADAPTER INCL', 2),
('ER-8', 'EDGEROUTER 8 5PORT ROUTER', 2),
('ERLITE-3', 'EDGEROUTER LITE 3PORT', 2),
('ERPOE-5', 'EDGEROUTER POE 5PORT ROUTER WITH POE', 2),
('ERPRO-8', 'EDGEROUTER PRO 8 8PORT ROUTER 2 SFP', 2),
('ES-24-250W', 'EDGE SWITCH 24 250W', 2),
('ES-24-500W', 'EDGE SWITCH 24PORT 500W', 2),
('ES-48-500W', 'EDGE SWITCH 48PORT 500W', 2),
('ES-48-750W', 'EDGE SWITCH 48PORT 750W', 2),
('ETH-SP', 'ETHERNET SURGE PROTECTOR', 2),
('INS-8023AF-I', 'INSTANT 8023AF ADAPTER INDOOR', 2),
('INS-8023AF-O', 'INSTANT 8023AF ADAPTER OUTDOOR', 2),
('LOCOM2', '2.4GHZ LOCO MIMO AIRMAX', 2),
('LOCOM5', '5GHZ LOCO MIMO AIRMAX', 2),
('LOCOM900', '900MHZ LOCO MIMO AIRMAX', 2),
('MFI-CS', 'MFI CURRENT SENSOR', 2),
('MFI-DS', 'MFI DOOR SENSOR', 2),
('MFI-LD', 'IN-WALL MANAGEABLE SWITCH/ DIMMER', 2),
('MFI-MPW', 'IN-WALL MANAGEABLE OUTLET', 2),
('MFI-MSC', 'MFI CEILING MOUNT MOTION SENSOR', 2),
('MFI-MSW', 'MFI WALL MOUNT MOTION SENSOR', 2),
('MFI-THS', 'MFI TEMPERATURE SENSOR', 2),
('MPORT', 'MFI MPORT', 2),
('MPORT-S', 'MFI MPORT SERIAL', 2),
('MPOWER', 'MFI 3PORT POWER EU & US WIFI', 2),
('MPOWER-MINI', 'MFI 1PORT POWER EU & US WIFI', 2),
('MPOWER-PRO', 'MFI 8PORT US 6PORT EU POWER WIFI/ETH', 2),
('NANOMOUNT', 'NANOMOUNT', 2),
('NBE-M5-19', '5GHZ NANOBEAM AIRMAX 19DB', 2),
('NBE-M5-400', '5PK 5GHZ NANOBEAM AIRMAX 400MM', 2),
('NBE-RAD-400', 'NANOBEAM RADOME 400MM', 2),
('NBE-WMK', 'NANOBEAM WALL MOUNT KIT', 2),
('NBM3', '3.5GHZ NANOBRIDGE AIRMAX 22DBI 2 PARTS NBM3+NB-OD3', 2),
('NBM365', '3.65GHZ NANOBRIDGE AIRMAX 22DBI 2 PARTS NBM365+NB-OD3', 2),
('NBM9', '900MHZ NANOBRIDGE AIRMAX 13DBI 2 PARTS NBM9+NB-OD9', 2),
('NSM2', '2.4GHZ NANO MIMO AIRMAX', 2),
('NSM3', '3.5GHZ NANO MIMO AIRMAX', 2),
('NSM365', '3.65GHZ NANOBRIDGE AIRMAX 22DBI 2 PARTS NBM365+NB-OD3', 2),
('NSM5', '5GHZ NANO MIMO AIRMAX', 2),
('PBM10', '10GHZ POWERBRIDGE MIMO AIRMAX 2 PARTS - PBM10 $275 + PBM10-DISH 75', 2),
('PBM3', '3.5GHZ POWERBRIDGE MIMO AIRMAX', 2),
('PBM365', '3.65GHZ POWERBRIDGE MIMO AIRMAX', 2),
('PBM5', '5GHZ POWERBRIDGE MIMO AIRMAX', 2),
('PICOM2-HP', '2.4GHZ PICO AIRMAX HP', 2),
('POE-24-12W', 'POE INJECTOR 24VDC 12W', 2),
('POE-24-24W', 'POE INJECTOR 24VDC 24W', 2),
('POE-48-24W', 'POE INJECTOR 48VDC 24W', 2),
('POE-48-24W-G', 'POE INJECTOR 48VDC 24W ROCKETTI UAP-PRO', 2),
('POE-50-60W', 'POE INJECTOR 50V 60W AIRFIBER POE', 2),
('PS2-17D', 'POWERSTATION2-17D CPE', 2),
('PS5-22V', 'POWERSTATION5-22V CPE', 2),
('RAD-2RD', 'RADOME 2 ROCKETDISH EAR99 RADOME FOR ROCKETDISH', 2),
('RAD-3RD', 'RADOME 3 ROCKETDISH EAR99 RADOME FOR ROCKETDISH', 2),
('RD-2G24', '2GHZ ROCKET DISH 24DBI W/ ROCKET KIT', 2),
('RD-3G26', '3GHZ ROCKET DISH 26DBI W/ ROCKET KIT', 2),
('RD-5G30', '5GHZ ROCKET DISH 30DBI W/ ROCKET KIT', 2),
('RD-5G34', '5GHZ ROCKET DISH 34DBI W/ROCKET KIT', 2),
('RM2-TI', '2.4GHZ ROCKET MIMO AIRMAX TITANIUM', 2),
('RM5-TI', '5GHZ ROCKET MIMO AIRMAX TITANIUM', 2),
('ROCKETM2', '2.4GHZ ROCKET MIMO AIRMAX', 2),
('ROCKETM3', '3.5GHZ ROCKET MIMO AIRMAX', 2),
('ROCKETM365', '3.65GHZ ROCKET MIMO AIRMAX', 2),
('ROCKETM5', '5GHZ ROCKET MIMO AIRMAX', 2),
('ROCKETM9', '900MHZ ROCKET MIMO AIRMAX', 2),
('SR2', 'SR2 MINI PCI PCBA', 2),
('SR5', 'SR5 MINI PCI PCBA', 2),
('SR71-15', '11A/N 5GHZ 27DBM 2X2 OUTDOOR', 2),
('SR71E', '11A/B/G/N 200MW 2X2 EXT. ANTENNA', 2),
('SRC', 'SRC CARDBUS', 2),
('TC-CARRIER', 'TOUGH CABLE LEVEL 2 1000 BOX', 2),
('TC-CON', 'TOUGH CABLE CONNEXTRS X 2400 100PCS/BOX', 2),
('TC-GND', 'TOUGH CABLE CONNECTOR GROUND X 1000', 2),
('TC-PRO', 'TOUGH CABLE LEVEL 1 1000 BOX', 2),
('TS-16-CARRIER', 'TOUGHSWITCH 16PORT POE PRO RACKMOUNT', 2),
('TS-5-POE', 'TOUGHSWITCH 5PORT POE', 2),
('TS-8-PRO', 'TOUGHSWITCH 8PORT POE PRO', 2),
('UAP', 'UNIFI AP', 2),
('UAP-3', 'UNIFI AP 3-PACK', 2),
('UAP-AC', 'UNIFI AP 802.11AC', 2),
('UAP-AC-3', 'UNIFI AP AC 3PK', 2),
('UAP-AC-OUTDOOR', 'UNIFI AP AC OUTDOOR', 2),
('UAP-LR', 'UNIFI AP LONG RANGE', 2),
('UAP-LR-3', 'UNIFI AP LONG RANGE 3-PACK', 2),
('UAP-OUTDOOR+', 'UNIFI AP OUTDOOR+ XRF', 2),
('UAP-OUTDOOR-5', 'UNIFI AP OUTDOOR 5GHZ', 2),
('UAP-PRO', 'UNIFI AP PRO GIGE 802.3AF DUAL RADIO', 2),
('UAP-PRO-3', 'UNIFI AP PRO GIGE 802.3AF DUAL RADIO 3PK', 2),
('UB-AM', '10PK UBIQUITI ANTENNA MOUNT', 2),
('USG', 'UNIFI SECURITY GATEWAY', 2),
('UVC', 'UNIFI VIDEO CAMERA IR', 2),
('UVC-3', 'UNIFI VIDEO CAMERA IR 3PK', 2),
('UVC-DOME', 'UNIFI VIDEO CAMERA DOME IR', 2),
('UVC-DOME-3', 'UNIFI VIDEO CAMERA DOME IR 3-PACK', 2),
('UVC-NVR', 'AIRVISION NVR CONTROLLER', 2),
('UVC-PRO', 'UNIFI VIDEO CAMERA PRO', 2),
('UVC-PRO-C', 'UNIFI CAMERA PRO CABLE ACCESSORY', 2),
('UVC-PRO-M', 'UNIFI CAMERA PRO MOUNT ACCESSORY', 2),
('UVP', 'UNIFI VOIP PHONE', 2),
('WS5', 'WS5 SUBSCRIBER', 2),
('WSM5', 'WISPSTATION M SERIES 5GHZ AIRMAX', 2),
('XR2', 'MINI PCI 600MW 2.4GHZ', 2),
('XR5', 'MINI PCI 600MW 5GHZ', 2),
('XR7', 'XR7 MINI PCI PCBA', 2),
('XR9', 'MINI PCI 600MW 900MHZ', 2);

INSERT INTO dbinfo (keytype, keyvalue) VALUES ('dbversion', '2020091100');
